/*!
 * Bootstrap v3.3.1 (http://getbootstrap.com)
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

/*!
 * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=ad97728b0622f00ae0cc)
 * Config saved to config.json and https://gist.github.com/ad97728b0622f00ae0cc
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(t){var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var i=t(this),s=i.data("bs.tooltip"),n="object"==typeof e&&e,r=n&&n.selector;(s||"destroy"!=e)&&(r?(s||i.data("bs.tooltip",s={}),s[r]||(s[r]=new o(this,n))):s||i.data("bs.tooltip",s=new o(this,n)),"string"==typeof e&&s[e]())})}var o=function(t,e){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",t,e)};o.VERSION="3.3.1",o.TRANSITION_DURATION=150,o.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},o.prototype.init=function(e,o,i){this.enabled=!0,this.type=e,this.$element=t(o),this.options=this.getOptions(i),this.$viewport=this.options.viewport&&t(this.options.viewport.selector||this.options.viewport);for(var s=this.options.trigger.split(" "),n=s.length;n--;){var r=s[n];if("click"==r)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=r){var a="hover"==r?"mouseenter":"focusin",p="hover"==r?"mouseleave":"focusout";this.$element.on(a+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(p+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},o.prototype.getDefaults=function(){return o.DEFAULTS},o.prototype.getOptions=function(e){return e=t.extend({},this.getDefaults(),this.$element.data(),e),e.delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},o.prototype.getDelegateOptions=function(){var e={},o=this.getDefaults();return this._options&&t.each(this._options,function(t,i){o[t]!=i&&(e[t]=i)}),e},o.prototype.enter=function(e){var o=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return o&&o.$tip&&o.$tip.is(":visible")?void(o.hoverState="in"):(o||(o=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,o)),clearTimeout(o.timeout),o.hoverState="in",o.options.delay&&o.options.delay.show?void(o.timeout=setTimeout(function(){"in"==o.hoverState&&o.show()},o.options.delay.show)):o.show())},o.prototype.leave=function(e){var o=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return o||(o=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,o)),clearTimeout(o.timeout),o.hoverState="out",o.options.delay&&o.options.delay.hide?void(o.timeout=setTimeout(function(){"out"==o.hoverState&&o.hide()},o.options.delay.hide)):o.hide()},o.prototype.show=function(){var e=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(e);var i=t.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(e.isDefaultPrevented()||!i)return;var s=this,n=this.tip(),r=this.getUID(this.type);this.setContent(),n.attr("id",r),this.$element.attr("aria-describedby",r),this.options.animation&&n.addClass("fade");var a="function"==typeof this.options.placement?this.options.placement.call(this,n[0],this.$element[0]):this.options.placement,p=/\s?auto?\s?/i,l=p.test(a);l&&(a=a.replace(p,"")||"top"),n.detach().css({top:0,left:0,display:"block"}).addClass(a).data("bs."+this.type,this),this.options.container?n.appendTo(this.options.container):n.insertAfter(this.$element);var h=this.getPosition(),f=n[0].offsetWidth,u=n[0].offsetHeight;if(l){var c=a,d=this.options.container?t(this.options.container):this.$element.parent(),g=this.getPosition(d);a="bottom"==a&&h.bottom+u>g.bottom?"top":"top"==a&&h.top-u<g.top?"bottom":"right"==a&&h.right+f>g.width?"left":"left"==a&&h.left-f<g.left?"right":a,n.removeClass(c).addClass(a)}var v=this.getCalculatedOffset(a,h,f,u);this.applyPlacement(v,a);var y=function(){var t=s.hoverState;s.$element.trigger("shown.bs."+s.type),s.hoverState=null,"out"==t&&s.leave(s)};t.support.transition&&this.$tip.hasClass("fade")?n.one("bsTransitionEnd",y).emulateTransitionEnd(o.TRANSITION_DURATION):y()}},o.prototype.applyPlacement=function(e,o){var i=this.tip(),s=i[0].offsetWidth,n=i[0].offsetHeight,r=parseInt(i.css("margin-top"),10),a=parseInt(i.css("margin-left"),10);isNaN(r)&&(r=0),isNaN(a)&&(a=0),e.top=e.top+r,e.left=e.left+a,t.offset.setOffset(i[0],t.extend({using:function(t){i.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),i.addClass("in");var p=i[0].offsetWidth,l=i[0].offsetHeight;"top"==o&&l!=n&&(e.top=e.top+n-l);var h=this.getViewportAdjustedDelta(o,e,p,l);h.left?e.left+=h.left:e.top+=h.top;var f=/top|bottom/.test(o),u=f?2*h.left-s+p:2*h.top-n+l,c=f?"offsetWidth":"offsetHeight";i.offset(e),this.replaceArrow(u,i[0][c],f)},o.prototype.replaceArrow=function(t,e,o){this.arrow().css(o?"left":"top",50*(1-t/e)+"%").css(o?"top":"left","")},o.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},o.prototype.hide=function(e){function i(){"in"!=s.hoverState&&n.detach(),s.$element.removeAttr("aria-describedby").trigger("hidden.bs."+s.type),e&&e()}var s=this,n=this.tip(),r=t.Event("hide.bs."+this.type);return this.$element.trigger(r),r.isDefaultPrevented()?void 0:(n.removeClass("in"),t.support.transition&&this.$tip.hasClass("fade")?n.one("bsTransitionEnd",i).emulateTransitionEnd(o.TRANSITION_DURATION):i(),this.hoverState=null,this)},o.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},o.prototype.hasContent=function(){return this.getTitle()},o.prototype.getPosition=function(e){e=e||this.$element;var o=e[0],i="BODY"==o.tagName,s=o.getBoundingClientRect();null==s.width&&(s=t.extend({},s,{width:s.right-s.left,height:s.bottom-s.top}));var n=i?{top:0,left:0}:e.offset(),r={scroll:i?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},a=i?{width:t(window).width(),height:t(window).height()}:null;return t.extend({},s,r,a,n)},o.prototype.getCalculatedOffset=function(t,e,o,i){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-o/2}:"top"==t?{top:e.top-i,left:e.left+e.width/2-o/2}:"left"==t?{top:e.top+e.height/2-i/2,left:e.left-o}:{top:e.top+e.height/2-i/2,left:e.left+e.width}},o.prototype.getViewportAdjustedDelta=function(t,e,o,i){var s={top:0,left:0};if(!this.$viewport)return s;var n=this.options.viewport&&this.options.viewport.padding||0,r=this.getPosition(this.$viewport);if(/right|left/.test(t)){var a=e.top-n-r.scroll,p=e.top+n-r.scroll+i;a<r.top?s.top=r.top-a:p>r.top+r.height&&(s.top=r.top+r.height-p)}else{var l=e.left-n,h=e.left+n+o;l<r.left?s.left=r.left-l:h>r.width&&(s.left=r.left+r.width-h)}return s},o.prototype.getTitle=function(){var t,e=this.$element,o=this.options;return t=e.attr("data-original-title")||("function"==typeof o.title?o.title.call(e[0]):o.title)},o.prototype.getUID=function(t){do t+=~~(1e6*Math.random());while(document.getElementById(t));return t},o.prototype.tip=function(){return this.$tip=this.$tip||t(this.options.template)},o.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},o.prototype.enable=function(){this.enabled=!0},o.prototype.disable=function(){this.enabled=!1},o.prototype.toggleEnabled=function(){this.enabled=!this.enabled},o.prototype.toggle=function(e){var o=this;e&&(o=t(e.currentTarget).data("bs."+this.type),o||(o=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,o))),o.tip().hasClass("in")?o.leave(o):o.enter(o)},o.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type)})};var i=t.fn.bsTooltip;t.fn.bsTooltip=e,t.fn.bsTooltip.Constructor=o,t.fn.bsTooltip.noConflict=function(){return t.fn.bsTooltip=i,this}}(jQuery);
!function(e,t,i){"use strict";"undefined"!=typeof module&&module.exports?module.exports=i():"function"==typeof define&&define.amd?define(i):t[e]=i()}("Fingerprint2",this,function(){"use strict";Array.prototype.indexOf||(Array.prototype.indexOf=function(e,t){var i;if(null==this)throw new TypeError("'this' is null or undefined");var a=Object(this),r=a.length>>>0;if(0===r)return-1;var n=+t||0;if(Math.abs(n)===1/0&&(n=0),n>=r)return-1;for(i=Math.max(n>=0?n:r-Math.abs(n),0);r>i;){if(i in a&&a[i]===e)return i;i++}return-1});var e=function(e){var t={swfContainerId:"fingerprintjs2",swfPath:"flash/compiled/FontList.swf",detectScreenOrientation:!0,sortPluginsFor:[/palemoon/i],userDefinedFonts:[]};this.options=this.extend(e,t),this.nativeForEach=Array.prototype.forEach,this.nativeMap=Array.prototype.map};return e.prototype={extend:function(e,t){if(null==e)return t;for(var i in e)null!=e[i]&&t[i]!==e[i]&&(t[i]=e[i]);return t},log:function(e){window.console&&console.log(e)},get:function(e){var t=[];t=this.userAgentKey(t),t=this.languageKey(t),t=this.colorDepthKey(t),t=this.pixelRatioKey(t),t=this.screenResolutionKey(t),t=this.availableScreenResolutionKey(t),t=this.timezoneOffsetKey(t),t=this.sessionStorageKey(t),t=this.localStorageKey(t),t=this.indexedDbKey(t),t=this.addBehaviorKey(t),t=this.openDatabaseKey(t),t=this.cpuClassKey(t),t=this.platformKey(t),t=this.doNotTrackKey(t),t=this.pluginsKey(t),t=this.canvasKey(t),t=this.webglKey(t),t=this.adBlockKey(t),t=this.hasLiedLanguagesKey(t),t=this.hasLiedResolutionKey(t),t=this.hasLiedOsKey(t),t=this.hasLiedBrowserKey(t),t=this.touchSupportKey(t);var i=this;this.fontsKey(t,function(t){var a=[];i.each(t,function(e){var t=e.value;"undefined"!=typeof e.value.join&&(t=e.value.join(";")),a.push(t)});var r=i.x64hash128(a.join("~~~"),31);return e(r,t)})},userAgentKey:function(e){return this.options.excludeUserAgent||e.push({key:"user_agent",value:this.getUserAgent()}),e},getUserAgent:function(){return navigator.userAgent},languageKey:function(e){return this.options.excludeLanguage||e.push({key:"language",value:navigator.language||navigator.userLanguage||navigator.browserLanguage||navigator.systemLanguage||""}),e},colorDepthKey:function(e){return this.options.excludeColorDepth||e.push({key:"color_depth",value:screen.colorDepth}),e},pixelRatioKey:function(e){return this.options.excludePixelRatio||e.push({key:"pixel_ratio",value:this.getPixelRatio()}),e},getPixelRatio:function(){return window.devicePixelRatio||""},screenResolutionKey:function(e){return this.options.excludeScreenResolution?e:this.getScreenResolution(e)},getScreenResolution:function(e){var t;return t=this.options.detectScreenOrientation&&screen.height>screen.width?[screen.height,screen.width]:[screen.width,screen.height],"undefined"!=typeof t&&e.push({key:"resolution",value:t}),e},availableScreenResolutionKey:function(e){return this.options.excludeAvailableScreenResolution?e:this.getAvailableScreenResolution(e)},getAvailableScreenResolution:function(e){var t;return screen.availWidth&&screen.availHeight&&(t=this.options.detectScreenOrientation?screen.availHeight>screen.availWidth?[screen.availHeight,screen.availWidth]:[screen.availWidth,screen.availHeight]:[screen.availHeight,screen.availWidth]),"undefined"!=typeof t&&e.push({key:"available_resolution",value:t}),e},timezoneOffsetKey:function(e){return this.options.excludeTimezoneOffset||e.push({key:"timezone_offset",value:(new Date).getTimezoneOffset()}),e},sessionStorageKey:function(e){return!this.options.excludeSessionStorage&&this.hasSessionStorage()&&e.push({key:"session_storage",value:1}),e},localStorageKey:function(e){return!this.options.excludeSessionStorage&&this.hasLocalStorage()&&e.push({key:"local_storage",value:1}),e},indexedDbKey:function(e){return!this.options.excludeIndexedDB&&this.hasIndexedDB()&&e.push({key:"indexed_db",value:1}),e},addBehaviorKey:function(e){return document.body&&!this.options.excludeAddBehavior&&document.body.addBehavior&&e.push({key:"add_behavior",value:1}),e},openDatabaseKey:function(e){return!this.options.excludeOpenDatabase&&window.openDatabase&&e.push({key:"open_database",value:1}),e},cpuClassKey:function(e){return this.options.excludeCpuClass||e.push({key:"cpu_class",value:this.getNavigatorCpuClass()}),e},platformKey:function(e){return this.options.excludePlatform||e.push({key:"navigator_platform",value:this.getNavigatorPlatform()}),e},doNotTrackKey:function(e){return this.options.excludeDoNotTrack||e.push({key:"do_not_track",value:this.getDoNotTrack()}),e},canvasKey:function(e){return!this.options.excludeCanvas&&this.isCanvasSupported()&&e.push({key:"canvas",value:this.getCanvasFp()}),e},webglKey:function(e){return this.options.excludeWebGL?e:this.isWebGlSupported()?(e.push({key:"webgl",value:this.getWebglFp()}),e):e},adBlockKey:function(e){return this.options.excludeAdBlock||e.push({key:"adblock",value:this.getAdBlock()}),e},hasLiedLanguagesKey:function(e){return this.options.excludeHasLiedLanguages||e.push({key:"has_lied_languages",value:this.getHasLiedLanguages()}),e},hasLiedResolutionKey:function(e){return this.options.excludeHasLiedResolution||e.push({key:"has_lied_resolution",value:this.getHasLiedResolution()}),e},hasLiedOsKey:function(e){return this.options.excludeHasLiedOs||e.push({key:"has_lied_os",value:this.getHasLiedOs()}),e},hasLiedBrowserKey:function(e){return this.options.excludeHasLiedBrowser||e.push({key:"has_lied_browser",value:this.getHasLiedBrowser()}),e},fontsKey:function(e,t){return this.options.excludeJsFonts?this.flashFontsKey(e,t):this.jsFontsKey(e,t)},flashFontsKey:function(e,t){return this.options.excludeFlashFonts?t(e):this.hasSwfObjectLoaded()&&this.hasMinFlashInstalled()?"undefined"==typeof this.options.swfPath?t(e):void this.loadSwfAndDetectFonts(function(i){e.push({key:"swf_fonts",value:i.join(";")}),t(e)}):t(e)},jsFontsKey:function(e,t){var i=this;return setTimeout(function(){var a=["monospace","sans-serif","serif"],r=["Andale Mono","Arial","Arial Black","Arial Hebrew","Arial MT","Arial Narrow","Arial Rounded MT Bold","Arial Unicode MS","Bitstream Vera Sans Mono","Book Antiqua","Bookman Old Style","Calibri","Cambria","Cambria Math","Century","Century Gothic","Century Schoolbook","Comic Sans","Comic Sans MS","Consolas","Courier","Courier New","Garamond","Geneva","Georgia","Helvetica","Helvetica Neue","Impact","Lucida Bright","Lucida Calligraphy","Lucida Console","Lucida Fax","LUCIDA GRANDE","Lucida Handwriting","Lucida Sans","Lucida Sans Typewriter","Lucida Sans Unicode","Microsoft Sans Serif","Monaco","Monotype Corsiva","MS Gothic","MS Outlook","MS PGothic","MS Reference Sans Serif","MS Sans Serif","MS Serif","MYRIAD","MYRIAD PRO","Palatino","Palatino Linotype","Segoe Print","Segoe Script","Segoe UI","Segoe UI Light","Segoe UI Semibold","Segoe UI Symbol","Tahoma","Times","Times New Roman","Times New Roman PS","Trebuchet MS","Verdana","Wingdings","Wingdings 2","Wingdings 3"],n=["Abadi MT Condensed Light","Academy Engraved LET","ADOBE CASLON PRO","Adobe Garamond","ADOBE GARAMOND PRO","Agency FB","Aharoni","Albertus Extra Bold","Albertus Medium","Algerian","Amazone BT","American Typewriter","American Typewriter Condensed","AmerType Md BT","Andalus","Angsana New","AngsanaUPC","Antique Olive","Aparajita","Apple Chancery","Apple Color Emoji","Apple SD Gothic Neo","Arabic Typesetting","ARCHER","ARNO PRO","Arrus BT","Aurora Cn BT","AvantGarde Bk BT","AvantGarde Md BT","AVENIR","Ayuthaya","Bandy","Bangla Sangam MN","Bank Gothic","BankGothic Md BT","Baskerville","Baskerville Old Face","Batang","BatangChe","Bauer Bodoni","Bauhaus 93","Bazooka","Bell MT","Bembo","Benguiat Bk BT","Berlin Sans FB","Berlin Sans FB Demi","Bernard MT Condensed","BernhardFashion BT","BernhardMod BT","Big Caslon","BinnerD","Blackadder ITC","BlairMdITC TT","Bodoni 72","Bodoni 72 Oldstyle","Bodoni 72 Smallcaps","Bodoni MT","Bodoni MT Black","Bodoni MT Condensed","Bodoni MT Poster Compressed","Bookshelf Symbol 7","Boulder","Bradley Hand","Bradley Hand ITC","Bremen Bd BT","Britannic Bold","Broadway","Browallia New","BrowalliaUPC","Brush Script MT","Californian FB","Calisto MT","Calligrapher","Candara","CaslonOpnface BT","Castellar","Centaur","Cezanne","CG Omega","CG Times","Chalkboard","Chalkboard SE","Chalkduster","Charlesworth","Charter Bd BT","Charter BT","Chaucer","ChelthmITC Bk BT","Chiller","Clarendon","Clarendon Condensed","CloisterBlack BT","Cochin","Colonna MT","Constantia","Cooper Black","Copperplate","Copperplate Gothic","Copperplate Gothic Bold","Copperplate Gothic Light","CopperplGoth Bd BT","Corbel","Cordia New","CordiaUPC","Cornerstone","Coronet","Cuckoo","Curlz MT","DaunPenh","Dauphin","David","DB LCD Temp","DELICIOUS","Denmark","DFKai-SB","Didot","DilleniaUPC","DIN","DokChampa","Dotum","DotumChe","Ebrima","Edwardian Script ITC","Elephant","English 111 Vivace BT","Engravers MT","EngraversGothic BT","Eras Bold ITC","Eras Demi ITC","Eras Light ITC","Eras Medium ITC","EucrosiaUPC","Euphemia","Euphemia UCAS","EUROSTILE","Exotc350 Bd BT","FangSong","Felix Titling","Fixedsys","FONTIN","Footlight MT Light","Forte","FrankRuehl","Fransiscan","Freefrm721 Blk BT","FreesiaUPC","Freestyle Script","French Script MT","FrnkGothITC Bk BT","Fruitger","FRUTIGER","Futura","Futura Bk BT","Futura Lt BT","Futura Md BT","Futura ZBlk BT","FuturaBlack BT","Gabriola","Galliard BT","Gautami","Geeza Pro","Geometr231 BT","Geometr231 Hv BT","Geometr231 Lt BT","GeoSlab 703 Lt BT","GeoSlab 703 XBd BT","Gigi","Gill Sans","Gill Sans MT","Gill Sans MT Condensed","Gill Sans MT Ext Condensed Bold","Gill Sans Ultra Bold","Gill Sans Ultra Bold Condensed","Gisha","Gloucester MT Extra Condensed","GOTHAM","GOTHAM BOLD","Goudy Old Style","Goudy Stout","GoudyHandtooled BT","GoudyOLSt BT","Gujarati Sangam MN","Gulim","GulimChe","Gungsuh","GungsuhChe","Gurmukhi MN","Haettenschweiler","Harlow Solid Italic","Harrington","Heather","Heiti SC","Heiti TC","HELV","Herald","High Tower Text","Hiragino Kaku Gothic ProN","Hiragino Mincho ProN","Hoefler Text","Humanst 521 Cn BT","Humanst521 BT","Humanst521 Lt BT","Imprint MT Shadow","Incised901 Bd BT","Incised901 BT","Incised901 Lt BT","INCONSOLATA","Informal Roman","Informal011 BT","INTERSTATE","IrisUPC","Iskoola Pota","JasmineUPC","Jazz LET","Jenson","Jester","Jokerman","Juice ITC","Kabel Bk BT","Kabel Ult BT","Kailasa","KaiTi","Kalinga","Kannada Sangam MN","Kartika","Kaufmann Bd BT","Kaufmann BT","Khmer UI","KodchiangUPC","Kokila","Korinna BT","Kristen ITC","Krungthep","Kunstler Script","Lao UI","Latha","Leelawadee","Letter Gothic","Levenim MT","LilyUPC","Lithograph","Lithograph Light","Long Island","Lydian BT","Magneto","Maiandra GD","Malayalam Sangam MN","Malgun Gothic","Mangal","Marigold","Marion","Marker Felt","Market","Marlett","Matisse ITC","Matura MT Script Capitals","Meiryo","Meiryo UI","Microsoft Himalaya","Microsoft JhengHei","Microsoft New Tai Lue","Microsoft PhagsPa","Microsoft Tai Le","Microsoft Uighur","Microsoft YaHei","Microsoft Yi Baiti","MingLiU","MingLiU_HKSCS","MingLiU_HKSCS-ExtB","MingLiU-ExtB","Minion","Minion Pro","Miriam","Miriam Fixed","Mistral","Modern","Modern No. 20","Mona Lisa Solid ITC TT","Mongolian Baiti","MONO","MoolBoran","Mrs Eaves","MS LineDraw","MS Mincho","MS PMincho","MS Reference Specialty","MS UI Gothic","MT Extra","MUSEO","MV Boli","Nadeem","Narkisim","NEVIS","News Gothic","News GothicMT","NewsGoth BT","Niagara Engraved","Niagara Solid","Noteworthy","NSimSun","Nyala","OCR A Extended","Old Century","Old English Text MT","Onyx","Onyx BT","OPTIMA","Oriya Sangam MN","OSAKA","OzHandicraft BT","Palace Script MT","Papyrus","Parchment","Party LET","Pegasus","Perpetua","Perpetua Titling MT","PetitaBold","Pickwick","Plantagenet Cherokee","Playbill","PMingLiU","PMingLiU-ExtB","Poor Richard","Poster","PosterBodoni BT","PRINCETOWN LET","Pristina","PTBarnum BT","Pythagoras","Raavi","Rage Italic","Ravie","Ribbon131 Bd BT","Rockwell","Rockwell Condensed","Rockwell Extra Bold","Rod","Roman","Sakkal Majalla","Santa Fe LET","Savoye LET","Sceptre","Script","Script MT Bold","SCRIPTINA","Serifa","Serifa BT","Serifa Th BT","ShelleyVolante BT","Sherwood","Shonar Bangla","Showcard Gothic","Shruti","Signboard","SILKSCREEN","SimHei","Simplified Arabic","Simplified Arabic Fixed","SimSun","SimSun-ExtB","Sinhala Sangam MN","Sketch Rockwell","Skia","Small Fonts","Snap ITC","Snell Roundhand","Socket","Souvenir Lt BT","Staccato222 BT","Steamer","Stencil","Storybook","Styllo","Subway","Swis721 BlkEx BT","Swiss911 XCm BT","Sylfaen","Synchro LET","System","Tamil Sangam MN","Technical","Teletype","Telugu Sangam MN","Tempus Sans ITC","Terminal","Thonburi","Traditional Arabic","Trajan","TRAJAN PRO","Tristan","Tubular","Tunga","Tw Cen MT","Tw Cen MT Condensed","Tw Cen MT Condensed Extra Bold","TypoUpright BT","Unicorn","Univers","Univers CE 55 Medium","Univers Condensed","Utsaah","Vagabond","Vani","Vijaya","Viner Hand ITC","VisualUI","Vivaldi","Vladimir Script","Vrinda","Westminster","WHITNEY","Wide Latin","ZapfEllipt BT","ZapfHumnst BT","ZapfHumnst Dm BT","Zapfino","Zurich BlkEx BT","Zurich Ex BT","ZWAdobeF"];i.options.extendedJsFonts&&(r=r.concat(n)),r=r.concat(i.options.userDefinedFonts);var o="mmmmmmmmmmlli",s="72px",l=document.getElementsByTagName("body")[0],h=document.createElement("div"),u=document.createElement("div"),d={},c={},g=function(){var e=document.createElement("span");return e.style.position="absolute",e.style.left="-9999px",e.style.fontSize=s,e.innerHTML=o,e},p=function(e,t){var i=g();return i.style.fontFamily="'"+e+"',"+t,i},f=function(){for(var e=[],t=0,i=a.length;i>t;t++){var r=g();r.style.fontFamily=a[t],h.appendChild(r),e.push(r)}return e},m=function(){for(var e={},t=0,i=r.length;i>t;t++){for(var n=[],o=0,s=a.length;s>o;o++){var l=p(r[t],a[o]);u.appendChild(l),n.push(l)}e[r[t]]=n}return e},S=function(e){for(var t=!1,i=0;i<a.length;i++)if(t=e[i].offsetWidth!==d[a[i]]||e[i].offsetHeight!==c[a[i]])return t;return t},T=f();l.appendChild(h);for(var x=0,v=a.length;v>x;x++)d[a[x]]=T[x].offsetWidth,c[a[x]]=T[x].offsetHeight;var M=m();l.appendChild(u);for(var A=[],E=0,y=r.length;y>E;E++)S(M[r[E]])&&A.push(r[E]);l.removeChild(u),l.removeChild(h),e.push({key:"js_fonts",value:A}),t(e)},1)},pluginsKey:function(e){return this.options.excludePlugins||(this.isIE()?this.options.excludeIEPlugins||e.push({key:"ie_plugins",value:this.getIEPlugins()}):e.push({key:"regular_plugins",value:this.getRegularPlugins()})),e},getRegularPlugins:function(){for(var e=[],t=0,i=navigator.plugins.length;i>t;t++)e.push(navigator.plugins[t]);return this.pluginsShouldBeSorted()&&(e=e.sort(function(e,t){return e.name>t.name?1:e.name<t.name?-1:0})),this.map(e,function(e){var t=this.map(e,function(e){return[e.type,e.suffixes].join("~")}).join(",");return[e.name,e.description,t].join("::")},this)},getIEPlugins:function(){var e=[];if(Object.getOwnPropertyDescriptor&&Object.getOwnPropertyDescriptor(window,"ActiveXObject")||"ActiveXObject"in window){var t=["AcroPDF.PDF","Adodb.Stream","AgControl.AgControl","DevalVRXCtrl.DevalVRXCtrl.1","MacromediaFlashPaper.MacromediaFlashPaper","Msxml2.DOMDocument","Msxml2.XMLHTTP","PDF.PdfCtrl","QuickTime.QuickTime","QuickTimeCheckObject.QuickTimeCheck.1","RealPlayer","RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)","RealVideo.RealVideo(tm) ActiveX Control (32-bit)","Scripting.Dictionary","SWCtl.SWCtl","Shell.UIHelper","ShockwaveFlash.ShockwaveFlash","Skype.Detection","TDCCtl.TDCCtl","WMPlayer.OCX","rmocx.RealPlayer G2 Control","rmocx.RealPlayer G2 Control.1"];e=this.map(t,function(e){try{return new ActiveXObject(e),e}catch(t){return null}})}return navigator.plugins&&(e=e.concat(this.getRegularPlugins())),e},pluginsShouldBeSorted:function(){for(var e=!1,t=0,i=this.options.sortPluginsFor.length;i>t;t++){var a=this.options.sortPluginsFor[t];if(navigator.userAgent.match(a)){e=!0;break}}return e},touchSupportKey:function(e){return this.options.excludeTouchSupport||e.push({key:"touch_support",value:this.getTouchSupport()}),e},hasSessionStorage:function(){try{return!!window.sessionStorage}catch(e){return!0}},hasLocalStorage:function(){try{return!!window.localStorage}catch(e){return!0}},hasIndexedDB:function(){return!!window.indexedDB},getNavigatorCpuClass:function(){return navigator.cpuClass?navigator.cpuClass:"unknown"},getNavigatorPlatform:function(){return navigator.platform?navigator.platform:"unknown"},getDoNotTrack:function(){return navigator.doNotTrack?navigator.doNotTrack:"unknown"},getTouchSupport:function(){var e=0,t=!1;"undefined"!=typeof navigator.maxTouchPoints?e=navigator.maxTouchPoints:"undefined"!=typeof navigator.msMaxTouchPoints&&(e=navigator.msMaxTouchPoints);try{document.createEvent("TouchEvent"),t=!0}catch(i){}var a="ontouchstart"in window;return[e,t,a]},getCanvasFp:function(){var e=[],t=document.createElement("canvas");t.width=2e3,t.height=200,t.style.display="inline";var i=t.getContext("2d");return i.rect(0,0,10,10),i.rect(2,2,6,6),e.push("canvas winding:"+(i.isPointInPath(5,5,"evenodd")===!1?"yes":"no")),i.textBaseline="alphabetic",i.fillStyle="#f60",i.fillRect(125,1,62,20),i.fillStyle="#069",this.options.dontUseFakeFontInCanvas?i.font="11pt Arial":i.font="11pt no-real-font-123",i.fillText("Cwm fjordbank glyphs vext quiz, 😃",2,15),i.fillStyle="rgba(102, 204, 0, 0.2)",i.font="18pt Arial",i.fillText("Cwm fjordbank glyphs vext quiz, 😃",4,45),i.globalCompositeOperation="multiply",i.fillStyle="rgb(255,0,255)",i.beginPath(),i.arc(50,50,50,0,2*Math.PI,!0),i.closePath(),i.fill(),i.fillStyle="rgb(0,255,255)",i.beginPath(),i.arc(100,50,50,0,2*Math.PI,!0),i.closePath(),i.fill(),i.fillStyle="rgb(255,255,0)",i.beginPath(),i.arc(75,100,50,0,2*Math.PI,!0),i.closePath(),i.fill(),i.fillStyle="rgb(255,0,255)",i.arc(75,75,75,0,2*Math.PI,!0),i.arc(75,75,25,0,2*Math.PI,!0),i.fill("evenodd"),e.push("canvas fp:"+t.toDataURL()),e.join("~")},getWebglFp:function(){var e,t=function(t){return e.clearColor(0,0,0,1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),"["+t[0]+", "+t[1]+"]"},i=function(e){var t,i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic");return i?(t=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT),0===t&&(t=2),t):null};if(e=this.getWebglCanvas(),!e)return null;var a=[],r="attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}",n="precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}",o=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,o);var s=new Float32Array([-.2,-.9,0,.4,-.26,0,0,.732134444,0]);e.bufferData(e.ARRAY_BUFFER,s,e.STATIC_DRAW),o.itemSize=3,o.numItems=3;var l=e.createProgram(),h=e.createShader(e.VERTEX_SHADER);e.shaderSource(h,r),e.compileShader(h);var u=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(u,n),e.compileShader(u),e.attachShader(l,h),e.attachShader(l,u),e.linkProgram(l),e.useProgram(l),l.vertexPosAttrib=e.getAttribLocation(l,"attrVertex"),l.offsetUniform=e.getUniformLocation(l,"uniformOffset"),e.enableVertexAttribArray(l.vertexPosArray),e.vertexAttribPointer(l.vertexPosAttrib,o.itemSize,e.FLOAT,!1,0,0),e.uniform2f(l.offsetUniform,1,1),e.drawArrays(e.TRIANGLE_STRIP,0,o.numItems),null!=e.canvas&&a.push(e.canvas.toDataURL()),a.push("extensions:"+e.getSupportedExtensions().join(";")),a.push("webgl aliased line width range:"+t(e.getParameter(e.ALIASED_LINE_WIDTH_RANGE))),a.push("webgl aliased point size range:"+t(e.getParameter(e.ALIASED_POINT_SIZE_RANGE))),a.push("webgl alpha bits:"+e.getParameter(e.ALPHA_BITS)),a.push("webgl antialiasing:"+(e.getContextAttributes().antialias?"yes":"no")),a.push("webgl blue bits:"+e.getParameter(e.BLUE_BITS)),a.push("webgl depth bits:"+e.getParameter(e.DEPTH_BITS)),a.push("webgl green bits:"+e.getParameter(e.GREEN_BITS)),a.push("webgl max anisotropy:"+i(e)),a.push("webgl max combined texture image units:"+e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS)),a.push("webgl max cube map texture size:"+e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE)),a.push("webgl max fragment uniform vectors:"+e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS)),a.push("webgl max render buffer size:"+e.getParameter(e.MAX_RENDERBUFFER_SIZE)),a.push("webgl max texture image units:"+e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)),a.push("webgl max texture size:"+e.getParameter(e.MAX_TEXTURE_SIZE)),a.push("webgl max varying vectors:"+e.getParameter(e.MAX_VARYING_VECTORS)),a.push("webgl max vertex attribs:"+e.getParameter(e.MAX_VERTEX_ATTRIBS)),a.push("webgl max vertex texture image units:"+e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)),a.push("webgl max vertex uniform vectors:"+e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS)),a.push("webgl max viewport dims:"+t(e.getParameter(e.MAX_VIEWPORT_DIMS))),a.push("webgl red bits:"+e.getParameter(e.RED_BITS)),a.push("webgl renderer:"+e.getParameter(e.RENDERER)),a.push("webgl shading language version:"+e.getParameter(e.SHADING_LANGUAGE_VERSION)),a.push("webgl stencil bits:"+e.getParameter(e.STENCIL_BITS)),a.push("webgl vendor:"+e.getParameter(e.VENDOR)),a.push("webgl version:"+e.getParameter(e.VERSION)),e.getShaderPrecisionFormat?(a.push("webgl vertex shader high float precision:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision),a.push("webgl vertex shader high float precision rangeMin:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).rangeMin),a.push("webgl vertex shader high float precision rangeMax:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).rangeMax),a.push("webgl vertex shader medium float precision:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision),a.push("webgl vertex shader medium float precision rangeMin:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).rangeMin),a.push("webgl vertex shader medium float precision rangeMax:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).rangeMax),a.push("webgl vertex shader low float precision:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_FLOAT).precision),a.push("webgl vertex shader low float precision rangeMin:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_FLOAT).rangeMin),a.push("webgl vertex shader low float precision rangeMax:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_FLOAT).rangeMax),a.push("webgl fragment shader high float precision:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision),a.push("webgl fragment shader high float precision rangeMin:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).rangeMin),a.push("webgl fragment shader high float precision rangeMax:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).rangeMax),a.push("webgl fragment shader medium float precision:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision),a.push("webgl fragment shader medium float precision rangeMin:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).rangeMin),a.push("webgl fragment shader medium float precision rangeMax:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).rangeMax),a.push("webgl fragment shader low float precision:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_FLOAT).precision),a.push("webgl fragment shader low float precision rangeMin:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_FLOAT).rangeMin),a.push("webgl fragment shader low float precision rangeMax:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_FLOAT).rangeMax),a.push("webgl vertex shader high int precision:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_INT).precision),a.push("webgl vertex shader high int precision rangeMin:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_INT).rangeMin),a.push("webgl vertex shader high int precision rangeMax:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_INT).rangeMax),a.push("webgl vertex shader medium int precision:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_INT).precision),a.push("webgl vertex shader medium int precision rangeMin:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_INT).rangeMin),a.push("webgl vertex shader medium int precision rangeMax:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_INT).rangeMax),a.push("webgl vertex shader low int precision:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_INT).precision),a.push("webgl vertex shader low int precision rangeMin:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_INT).rangeMin),a.push("webgl vertex shader low int precision rangeMax:"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_INT).rangeMax),a.push("webgl fragment shader high int precision:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_INT).precision),a.push("webgl fragment shader high int precision rangeMin:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_INT).rangeMin),a.push("webgl fragment shader high int precision rangeMax:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_INT).rangeMax),a.push("webgl fragment shader medium int precision:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_INT).precision),a.push("webgl fragment shader medium int precision rangeMin:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_INT).rangeMin),a.push("webgl fragment shader medium int precision rangeMax:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_INT).rangeMax),a.push("webgl fragment shader low int precision:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_INT).precision),a.push("webgl fragment shader low int precision rangeMin:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_INT).rangeMin),a.push("webgl fragment shader low int precision rangeMax:"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_INT).rangeMax),a.join("~")):a.join("~")},getAdBlock:function(){var e=document.createElement("div");e.innerHTML="&nbsp;",e.className="adsbox";var t=!1;try{document.body.appendChild(e),t=0===document.getElementsByClassName("adsbox")[0].offsetHeight,document.body.removeChild(e)}catch(i){t=!1}return t},getHasLiedLanguages:function(){if("undefined"!=typeof navigator.languages)try{var e=navigator.languages[0].substr(0,2);if(e!==navigator.language.substr(0,2))return!0}catch(t){return!0}return!1},getHasLiedResolution:function(){return screen.width<screen.availWidth?!0:screen.height<screen.availHeight},getHasLiedOs:function(){var e,t=navigator.userAgent.toLowerCase(),i=navigator.oscpu,a=navigator.platform.toLowerCase();e=t.indexOf("windows phone")>=0?"Windows Phone":t.indexOf("win")>=0?"Windows":t.indexOf("android")>=0?"Android":t.indexOf("linux")>=0?"Linux":t.indexOf("iphone")>=0||t.indexOf("ipad")>=0?"iOS":t.indexOf("mac")>=0?"Mac":"Other";var r;if(r="ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0,r&&"Windows Phone"!==e&&"Android"!==e&&"iOS"!==e&&"Other"!==e)return!0;if("undefined"!=typeof i){if(i=i.toLowerCase(),i.indexOf("win")>=0&&"Windows"!==e&&"Windows Phone"!==e)return!0;if(i.indexOf("linux")>=0&&"Linux"!==e&&"Android"!==e)return!0;if(i.indexOf("mac")>=0&&"Mac"!==e&&"iOS"!==e)return!0;if(0===i.indexOf("win")&&0===i.indexOf("linux")&&i.indexOf("mac")>=0&&"other"!==e)return!0}return a.indexOf("win")>=0&&"Windows"!==e&&"Windows Phone"!==e?!0:(a.indexOf("linux")>=0||a.indexOf("android")>=0||a.indexOf("pike")>=0)&&"Linux"!==e&&"Android"!==e?!0:(a.indexOf("mac")>=0||a.indexOf("ipad")>=0||a.indexOf("ipod")>=0||a.indexOf("iphone")>=0)&&"Mac"!==e&&"iOS"!==e?!0:0===a.indexOf("win")&&0===a.indexOf("linux")&&a.indexOf("mac")>=0&&"other"!==e?!0:"undefined"==typeof navigator.plugins&&"Windows"!==e&&"Windows Phone"!==e},getHasLiedBrowser:function(){var e,t=navigator.userAgent.toLowerCase(),i=navigator.productSub;if(e=t.indexOf("firefox")>=0?"Firefox":t.indexOf("opera")>=0||t.indexOf("opr")>=0?"Opera":t.indexOf("chrome")>=0?"Chrome":t.indexOf("safari")>=0?"Safari":t.indexOf("trident")>=0?"Internet Explorer":"Other",("Chrome"===e||"Safari"===e||"Opera"===e)&&"20030107"!==i)return!0;var a=eval.toString().length;if(37===a&&"Safari"!==e&&"Firefox"!==e&&"Other"!==e)return!0;if(39===a&&"Internet Explorer"!==e&&"Other"!==e)return!0;if(33===a&&"Chrome"!==e&&"Opera"!==e&&"Other"!==e)return!0;var r;try{throw"a"}catch(n){try{n.toSource(),r=!0}catch(o){r=!1}}return!(!r||"Firefox"===e||"Other"===e)},isCanvasSupported:function(){var e=document.createElement("canvas");return!(!e.getContext||!e.getContext("2d"))},isWebGlSupported:function(){if(!this.isCanvasSupported())return!1;var e,t=document.createElement("canvas");try{e=t.getContext&&(t.getContext("webgl")||t.getContext("experimental-webgl"))}catch(i){e=!1}return!!window.WebGLRenderingContext&&!!e},isIE:function(){return"Microsoft Internet Explorer"===navigator.appName?!0:!("Netscape"!==navigator.appName||!/Trident/.test(navigator.userAgent))},hasSwfObjectLoaded:function(){return"undefined"!=typeof window.swfobject},hasMinFlashInstalled:function(){return swfobject.hasFlashPlayerVersion("9.0.0")},addFlashDivNode:function(){var e=document.createElement("div");e.setAttribute("id",this.options.swfContainerId),document.body.appendChild(e)},loadSwfAndDetectFonts:function(e){var t="___fp_swf_loaded";window[t]=function(t){e(t)};var i=this.options.swfContainerId;this.addFlashDivNode();var a={onReady:t},r={allowScriptAccess:"always",menu:"false"};swfobject.embedSWF(this.options.swfPath,i,"1","1","9.0.0",!1,a,r,{})},getWebglCanvas:function(){var e=document.createElement("canvas"),t=null;try{t=e.getContext("webgl")||e.getContext("experimental-webgl")}catch(i){}return t||(t=null),t},each:function(e,t,i){if(null!==e)if(this.nativeForEach&&e.forEach===this.nativeForEach)e.forEach(t,i);else if(e.length===+e.length){for(var a=0,r=e.length;r>a;a++)if(t.call(i,e[a],a,e)==={})return}else for(var n in e)if(e.hasOwnProperty(n)&&t.call(i,e[n],n,e)==={})return},map:function(e,t,i){var a=[];return null==e?a:this.nativeMap&&e.map===this.nativeMap?e.map(t,i):(this.each(e,function(e,r,n){a[a.length]=t.call(i,e,r,n)}),a)},x64Add:function(e,t){e=[e[0]>>>16,65535&e[0],e[1]>>>16,65535&e[1]],t=[t[0]>>>16,65535&t[0],t[1]>>>16,65535&t[1]];var i=[0,0,0,0];return i[3]+=e[3]+t[3],i[2]+=i[3]>>>16,i[3]&=65535,i[2]+=e[2]+t[2],i[1]+=i[2]>>>16,i[2]&=65535,i[1]+=e[1]+t[1],i[0]+=i[1]>>>16,i[1]&=65535,i[0]+=e[0]+t[0],i[0]&=65535,[i[0]<<16|i[1],i[2]<<16|i[3]]},x64Multiply:function(e,t){e=[e[0]>>>16,65535&e[0],e[1]>>>16,65535&e[1]],t=[t[0]>>>16,65535&t[0],t[1]>>>16,65535&t[1]];var i=[0,0,0,0];return i[3]+=e[3]*t[3],i[2]+=i[3]>>>16,i[3]&=65535,i[2]+=e[2]*t[3],i[1]+=i[2]>>>16,i[2]&=65535,i[2]+=e[3]*t[2],i[1]+=i[2]>>>16,i[2]&=65535,i[1]+=e[1]*t[3],i[0]+=i[1]>>>16,i[1]&=65535,i[1]+=e[2]*t[2],i[0]+=i[1]>>>16,i[1]&=65535,i[1]+=e[3]*t[1],i[0]+=i[1]>>>16,i[1]&=65535,i[0]+=e[0]*t[3]+e[1]*t[2]+e[2]*t[1]+e[3]*t[0],i[0]&=65535,[i[0]<<16|i[1],i[2]<<16|i[3]]},x64Rotl:function(e,t){return t%=64,32===t?[e[1],e[0]]:32>t?[e[0]<<t|e[1]>>>32-t,e[1]<<t|e[0]>>>32-t]:(t-=32,[e[1]<<t|e[0]>>>32-t,e[0]<<t|e[1]>>>32-t])},x64LeftShift:function(e,t){return t%=64,0===t?e:32>t?[e[0]<<t|e[1]>>>32-t,e[1]<<t]:[e[1]<<t-32,0]},x64Xor:function(e,t){return[e[0]^t[0],e[1]^t[1]]},x64Fmix:function(e){return e=this.x64Xor(e,[0,e[0]>>>1]),e=this.x64Multiply(e,[4283543511,3981806797]),e=this.x64Xor(e,[0,e[0]>>>1]),e=this.x64Multiply(e,[3301882366,444984403]),e=this.x64Xor(e,[0,e[0]>>>1])},x64hash128:function(e,t){e=e||"",t=t||0;for(var i=e.length%16,a=e.length-i,r=[0,t],n=[0,t],o=[0,0],s=[0,0],l=[2277735313,289559509],h=[1291169091,658871167],u=0;a>u;u+=16)o=[255&e.charCodeAt(u+4)|(255&e.charCodeAt(u+5))<<8|(255&e.charCodeAt(u+6))<<16|(255&e.charCodeAt(u+7))<<24,255&e.charCodeAt(u)|(255&e.charCodeAt(u+1))<<8|(255&e.charCodeAt(u+2))<<16|(255&e.charCodeAt(u+3))<<24],s=[255&e.charCodeAt(u+12)|(255&e.charCodeAt(u+13))<<8|(255&e.charCodeAt(u+14))<<16|(255&e.charCodeAt(u+15))<<24,255&e.charCodeAt(u+8)|(255&e.charCodeAt(u+9))<<8|(255&e.charCodeAt(u+10))<<16|(255&e.charCodeAt(u+11))<<24],o=this.x64Multiply(o,l),o=this.x64Rotl(o,31),o=this.x64Multiply(o,h),r=this.x64Xor(r,o),r=this.x64Rotl(r,27),r=this.x64Add(r,n),
r=this.x64Add(this.x64Multiply(r,[0,5]),[0,1390208809]),s=this.x64Multiply(s,h),s=this.x64Rotl(s,33),s=this.x64Multiply(s,l),n=this.x64Xor(n,s),n=this.x64Rotl(n,31),n=this.x64Add(n,r),n=this.x64Add(this.x64Multiply(n,[0,5]),[0,944331445]);switch(o=[0,0],s=[0,0],i){case 15:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+14)],48));case 14:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+13)],40));case 13:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+12)],32));case 12:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+11)],24));case 11:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+10)],16));case 10:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+9)],8));case 9:s=this.x64Xor(s,[0,e.charCodeAt(u+8)]),s=this.x64Multiply(s,h),s=this.x64Rotl(s,33),s=this.x64Multiply(s,l),n=this.x64Xor(n,s);case 8:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+7)],56));case 7:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+6)],48));case 6:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+5)],40));case 5:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+4)],32));case 4:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+3)],24));case 3:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+2)],16));case 2:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+1)],8));case 1:o=this.x64Xor(o,[0,e.charCodeAt(u)]),o=this.x64Multiply(o,l),o=this.x64Rotl(o,31),o=this.x64Multiply(o,h),r=this.x64Xor(r,o)}return r=this.x64Xor(r,[0,e.length]),n=this.x64Xor(n,[0,e.length]),r=this.x64Add(r,n),n=this.x64Add(n,r),r=this.x64Fmix(r),n=this.x64Fmix(n),r=this.x64Add(r,n),n=this.x64Add(n,r),("00000000"+(r[0]>>>0).toString(16)).slice(-8)+("00000000"+(r[1]>>>0).toString(16)).slice(-8)+("00000000"+(n[0]>>>0).toString(16)).slice(-8)+("00000000"+(n[1]>>>0).toString(16)).slice(-8)}},e.VERSION="1.4.1",e});
/*
Copyright 2014 Igor Vaynberg

Version: 3.5.2 Timestamp: Sat Nov  1 14:43:36 EDT 2014

This software is licensed under the Apache License, Version 2.0 (the "Apache License") or the GNU
General Public License version 2 (the "GPL License"). You may choose either license to govern your
use of this software only upon the condition that you accept all of the terms of either the Apache
License or the GPL License.

You may obtain a copy of the Apache License and the GPL License at:

http://www.apache.org/licenses/LICENSE-2.0
http://www.gnu.org/licenses/gpl-2.0.html

Unless required by applicable law or agreed to in writing, software distributed under the Apache License
or the GPL Licesnse is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
either express or implied. See the Apache License and the GPL License for the specific language governing
permissions and limitations under the Apache License and the GPL License.
*/

!function(a){"undefined"==typeof a.fn.each2&&a.extend(a.fn,{each2:function(b){for(var c=a([0]),d=-1,e=this.length;++d<e&&(c.context=c[0]=this[d])&&b.call(c[0],d,c)!==!1;);return this}})}(jQuery),function(a,b){"use strict";function n(b){var c=a(document.createTextNode(""));b.before(c),c.before(b),c.remove()}function o(a){function b(a){return m[a]||a}return a.replace(/[^\u0000-\u007E]/g,b)}function p(a,b){for(var c=0,d=b.length;d>c;c+=1)if(r(a,b[c]))return c;return-1}function q(){var b=a(l);b.appendTo(document.body);var c={width:b.width()-b[0].clientWidth,height:b.height()-b[0].clientHeight};return b.remove(),c}function r(a,c){return a===c?!0:a===b||c===b?!1:null===a||null===c?!1:a.constructor===String?a+""==c+"":c.constructor===String?c+""==a+"":!1}function s(a,b,c){var d,e,f;if(null===a||a.length<1)return[];for(d=a.split(b),e=0,f=d.length;f>e;e+=1)d[e]=c(d[e]);return d}function t(a){return a.outerWidth(!1)-a.width()}function u(c){var d="keyup-change-value";c.on("keydown",function(){a.data(c,d)===b&&a.data(c,d,c.val())}),c.on("keyup",function(){var e=a.data(c,d);e!==b&&c.val()!==e&&(a.removeData(c,d),c.trigger("keyup-change"))})}function v(c){c.on("mousemove",function(c){var d=h;(d===b||d.x!==c.pageX||d.y!==c.pageY)&&a(c.target).trigger("mousemove-filtered",c)})}function w(a,c,d){d=d||b;var e;return function(){var b=arguments;window.clearTimeout(e),e=window.setTimeout(function(){c.apply(d,b)},a)}}function x(a,b){var c=w(a,function(a){b.trigger("scroll-debounced",a)});b.on("scroll",function(a){p(a.target,b.get())>=0&&c(a)})}function y(a){a[0]!==document.activeElement&&window.setTimeout(function(){var d,b=a[0],c=a.val().length;a.focus();var e=b.offsetWidth>0||b.offsetHeight>0;e&&b===document.activeElement&&(b.setSelectionRange?b.setSelectionRange(c,c):b.createTextRange&&(d=b.createTextRange(),d.collapse(!1),d.select()))},0)}function z(b){b=a(b)[0];var c=0,d=0;if("selectionStart"in b)c=b.selectionStart,d=b.selectionEnd-c;else if("selection"in document){b.focus();var e=document.selection.createRange();d=document.selection.createRange().text.length,e.moveStart("character",-b.value.length),c=e.text.length-d}return{offset:c,length:d}}function A(a){a.preventDefault(),a.stopPropagation()}function B(a){a.preventDefault(),a.stopImmediatePropagation()}function C(b){if(!g){var c=b[0].currentStyle||window.getComputedStyle(b[0],null);g=a(document.createElement("div")).css({position:"absolute",left:"-10000px",top:"-10000px",display:"none",fontSize:c.fontSize,fontFamily:c.fontFamily,fontStyle:c.fontStyle,fontWeight:c.fontWeight,letterSpacing:c.letterSpacing,textTransform:c.textTransform,whiteSpace:"nowrap"}),g.attr("class","select2-sizer"),a(document.body).append(g)}return g.text(b.val()),g.width()}function D(b,c,d){var e,g,f=[];e=a.trim(b.attr("class")),e&&(e=""+e,a(e.split(/\s+/)).each2(function(){0===this.indexOf("select2-")&&f.push(this)})),e=a.trim(c.attr("class")),e&&(e=""+e,a(e.split(/\s+/)).each2(function(){0!==this.indexOf("select2-")&&(g=d(this),g&&f.push(g))})),b.attr("class",f.join(" "))}
  function E(a,b,c,d,el){
      var e=o(a.toUpperCase()).indexOf(o(b.toUpperCase())),
        f=b.length;
       return 0>e?(c.push(d(a)),void 0):(
         el.icon?c.push("<span class='select2-optionIcon'><svg class='select2-optionIconSvg' width='18' height='18'><use xmlns:xlink='http://www.w3.org/1999/xlink' xlink:href='"+el.icon+"'></use></svg></span>"):'',
      c.push(d(a.substring(0,e))),
      c.push("<span class='select2-match'>"),
      c.push(d(a.substring(e,e+f))),
      c.push("</span>"),
      c.push(d(a.substring(e+f,a.length))),
      void 0)}
function F(a){var b={"\\":"&#92;","&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#47;"};return String(a).replace(/[&<>"'\/\\]/g,function(a){return b[a]})}function G(c){var d,e=null,f=c.quietMillis||100,g=c.url,h=this;return function(i){window.clearTimeout(d),d=window.setTimeout(function(){var d=c.data,f=g,j=c.transport||a.fn.select2Custom.ajaxDefaults.transport,k={type:c.type||"GET",cache:c.cache||!1,jsonpCallback:c.jsonpCallback||b,dataType:c.dataType||"json"},l=a.extend({},a.fn.select2Custom.ajaxDefaults.params,k);d=d?d.call(h,i.term,i.page,i.context):null,f="function"==typeof f?f.call(h,i.term,i.page,i.context):f,e&&"function"==typeof e.abort&&e.abort(),c.params&&(a.isFunction(c.params)?a.extend(l,c.params.call(h)):a.extend(l,c.params)),a.extend(l,{url:f,dataType:c.dataType,data:d,success:function(a){var b=c.results(a,i.page,i);i.callback(b)},error:function(a,b,c){var d={hasError:!0,jqXHR:a,textStatus:b,errorThrown:c};i.callback(d)}}),e=j.call(h,l)},f)}}function H(b){var d,e,c=b,f=function(a){return""+a.text};a.isArray(c)&&(e=c,c={results:e}),a.isFunction(c)===!1&&(e=c,c=function(){return e});var g=c();return g.text&&(f=g.text,a.isFunction(f)||(d=g.text,f=function(a){return a[d]})),function(b){var g,d=b.term,e={results:[]};return""===d?(b.callback(c()),void 0):(g=function(c,e){var h,i;if(c=c[0],c.children){h={};for(i in c)c.hasOwnProperty(i)&&(h[i]=c[i]);h.children=[],a(c.children).each2(function(a,b){g(b,h.children)}),(h.children.length||b.matcher(d,f(h),c))&&e.push(h)}else b.matcher(d,f(c),c)&&e.push(c)},a(c().results).each2(function(a,b){g(b,e.results)}),b.callback(e),void 0)}}function I(c){var d=a.isFunction(c);return function(e){var f=e.term,g={results:[]},h=d?c(e):c;a.isArray(h)&&(a(h).each(function(){var a=this.text!==b,c=a?this.text:this;(""===f||e.matcher(f,c))&&g.results.push(a?this:{id:this,text:this})}),e.callback(g))}}function J(b,c){if(a.isFunction(b))return!0;if(!b)return!1;if("string"==typeof b)return!0;throw new Error(c+" must be a string, function, or falsy value")}function K(b,c){if(a.isFunction(b)){var d=Array.prototype.slice.call(arguments,2);return b.apply(c,d)}return b}function L(b){var c=0;return a.each(b,function(a,b){b.children?c+=L(b.children):c++}),c}function M(a,c,d,e){var h,i,j,k,l,f=a,g=!1;if(!e.createSearchChoice||!e.tokenSeparators||e.tokenSeparators.length<1)return b;for(;;){for(i=-1,j=0,k=e.tokenSeparators.length;k>j&&(l=e.tokenSeparators[j],i=a.indexOf(l),!(i>=0));j++);if(0>i)break;if(h=a.substring(0,i),a=a.substring(i+l.length),h.length>0&&(h=e.createSearchChoice.call(this,h,c),h!==b&&null!==h&&e.id(h)!==b&&null!==e.id(h))){for(g=!1,j=0,k=c.length;k>j;j++)if(r(e.id(h),e.id(c[j]))){g=!0;break}g||d(h)}}return f!==a?a:void 0}function N(){var b=this;a.each(arguments,function(a,c){b[c].remove(),b[c]=null})}function O(b,c){var d=function(){};return d.prototype=new b,d.prototype.constructor=d,d.prototype.parent=b.prototype,d.prototype=a.extend(d.prototype,c),d}if(window.Select2Custom===b){var c,d,e,f,g,i,j,h={x:0,y:0},k={TAB:9,ENTER:13,ESC:27,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40,SHIFT:16,CTRL:17,ALT:18,PAGE_UP:33,PAGE_DOWN:34,HOME:36,END:35,BACKSPACE:8,DELETE:46,isArrow:function(a){switch(a=a.which?a.which:a){case k.LEFT:case k.RIGHT:case k.UP:case k.DOWN:return!0}return!1},isControl:function(a){var b=a.which;switch(b){case k.SHIFT:case k.CTRL:case k.ALT:return!0}return a.metaKey?!0:!1},isFunctionKey:function(a){return a=a.which?a.which:a,a>=112&&123>=a}},l="<div class='select2-measure-scrollbar'></div>",m={};i=a(document),f=function(){var a=1;return function(){return a++}}(),c=O(Object,{bind:function(a){var b=this;return function(){a.apply(b,arguments)}},init:function(c){var d,e,g=".select2-results";this.opts=c=this.prepareOpts(c),this.id=c.id,c.element.data("select2")!==b&&null!==c.element.data("select2")&&c.element.data("select2").destroy(),this.container=this.createContainer(),this.liveRegion=a(".select2-hidden-accessible"),0==this.liveRegion.length&&(this.liveRegion=a("<span>",{role:"status","aria-live":"polite"}).addClass("select2-hidden-accessible").appendTo(document.body)),this.containerId="s2id_"+(c.element.attr("id")||"autogen"+f()),this.containerEventName=this.containerId.replace(/([.])/g,"_").replace(/([;&,\-\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g,"\\$1"),this.container.attr("id",this.containerId),this.container.attr("title",c.element.attr("title")),this.body=a(document.body),D(this.container,this.opts.element,this.opts.adaptContainerCssClass),this.container.attr("style",c.element.attr("style")),this.container.css(K(c.containerCss,this.opts.element)),this.container.addClass(K(c.containerCssClass,this.opts.element)),this.elementTabIndex=this.opts.element.attr("tabindex"),this.opts.element.data("select2",this).attr("tabindex","-1").before(this.container).on("click.select2",A),this.container.data("select2",this),this.dropdown=this.container.find(".select2-drop"),D(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass),this.dropdown.addClass(K(c.dropdownCssClass,this.opts.element)),this.dropdown.data("select2",this),this.dropdown.on("click",A),this.results=d=this.container.find(g),this.search=e=this.container.find("input.select2-input"),this.queryCount=0,this.resultsPage=0,this.context=null,this.initContainer(),this.container.on("click",A),v(this.results),this.dropdown.on("mousemove-filtered",g,this.bind(this.highlightUnderEvent)),this.dropdown.on("touchstart touchmove touchend",g,this.bind(function(a){this._touchEvent=!0,this.highlightUnderEvent(a)})),this.dropdown.on("touchmove",g,this.bind(this.touchMoved)),this.dropdown.on("touchstart touchend",g,this.bind(this.clearTouchMoved)),this.dropdown.on("click",this.bind(function(){this._touchEvent&&(this._touchEvent=!1,this.selectHighlighted())})),x(80,this.results),this.dropdown.on("scroll-debounced",g,this.bind(this.loadMoreIfNeeded)),a(this.container).on("change",".select2-input",function(a){a.stopPropagation()}),a(this.dropdown).on("change",".select2-input",function(a){a.stopPropagation()}),a.fn.mousewheel&&d.mousewheel(function(a,b,c,e){var f=d.scrollTop();e>0&&0>=f-e?(d.scrollTop(0),A(a)):0>e&&d.get(0).scrollHeight-d.scrollTop()+e<=d.height()&&(d.scrollTop(d.get(0).scrollHeight-d.height()),A(a))}),u(e),e.on("keyup-change input paste",this.bind(this.updateResults)),e.on("focus",function(){e.addClass("select2-focused")}),e.on("blur",function(){e.removeClass("select2-focused")}),this.dropdown.on("mouseup",g,this.bind(function(b){a(b.target).closest(".select2-result-selectable").length>0&&(this.highlightUnderEvent(b),this.selectHighlighted(b))})),this.dropdown.on("click mouseup mousedown touchstart touchend focusin",function(a){a.stopPropagation()}),this.nextSearchTerm=b,a.isFunction(this.opts.initSelection)&&(this.initSelection(),this.monitorSource()),null!==c.maximumInputLength&&this.search.attr("maxlength",c.maximumInputLength);var h=c.element.prop("disabled");h===b&&(h=!1),this.enable(!h);var i=c.element.prop("readonly");i===b&&(i=!1),this.readonly(i),j=j||q(),this.autofocus=c.element.prop("autofocus"),c.element.prop("autofocus",!1),this.autofocus&&this.focus(),this.search.attr("placeholder",c.searchInputPlaceholder)},destroy:function(){var a=this.opts.element,c=a.data("select2"),d=this;this.close(),a.length&&a[0].detachEvent&&d._sync&&a.each(function(){d._sync&&this.detachEvent("onpropertychange",d._sync)}),this.propertyObserver&&(this.propertyObserver.disconnect(),this.propertyObserver=null),this._sync=null,c!==b&&(c.container.remove(),c.liveRegion.remove(),c.dropdown.remove(),a.show().removeData("select2").off(".select2").prop("autofocus",this.autofocus||!1),this.elementTabIndex?a.attr({tabindex:this.elementTabIndex}):a.removeAttr("tabindex"),a.show()),N.call(this,"container","liveRegion","dropdown","results","search")},optionToData:function(a){
  return a.is("option")?{
    id:a.prop("value"),
    text:a.text(),
    element:a.get(),
    css:a.attr("class"),
    icon:a.data("icon"),
    display:a.data("display"),
    code:a.data("code"),
    disabled:a.prop("disabled"),
    locked:r(a.attr("locked"),"locked")||r(a.data("locked"),!0)
  }:a.is("optgroup")?{text:a.attr("label"),children:[],element:a.get(),css:a.attr("class")}:void 0},prepareOpts:function(c){var d,e,g,h,i=this;if(d=c.element,"select"===d.get(0).tagName.toLowerCase()&&(this.select=e=c.element),e&&a.each(["id","multiple","ajax","query","createSearchChoice","initSelection","data","tags"],function(){if(this in c)throw new Error("Option '"+this+"' is not allowed for Select2 when attached to a <select> element.")}),c=a.extend({},{populateResults:function(d,e,g){var h,j=this.opts.id,k=this.liveRegion;h=function(d,e,l){
  var m,n,o,p,q,r,s,t,u,v;d=c.sortResults(d,e,g);var w=[];for(m=0,n=d.length;n>m;m+=1)o=d[m],q=o.disabled===!0,p=!q&&j(o)!==b,r=o.children&&o.children.length>0,s=a("<li></li>"),s.addClass("select2-results-dept-"+l),s.addClass("select2-result"),s.addClass(p?"select2-result-selectable":"select2-result-unselectable"),q&&s.addClass("select2-disabled"),r&&s.addClass("select2-result-with-children"),s.addClass(i.opts.formatResultCssClass(o)),s.attr("role","presentation"),t=a(document.createElement("div")),t.addClass("select2-result-label"),t.attr("id","select2-result-label-"+f()),t.attr("role","option"),v=c.formatResult(o,t,g,i.opts.escapeMarkup),v!==b&&(t.html(v),s.append(t)),r&&(u=a("<ul></ul>"),u.addClass("select2-result-sub"),h(o.children,u,l+1),s.append(u)),s.data("select2-data",o),w.push(s[0]);e.append(w),k.text(c.formatMatches(d.length))},h(e,d,0)}},
      a.fn.select2Custom.defaults,c),"function"!=typeof c.id&&(g=c.id,c.id=function(a){return a[g]}),a.isArray(c.element.data("select2Tags"))){if("tags"in c)throw"tags specified as both an attribute 'data-select2-tags' and in options of Select2 "+c.element.attr("id");c.tags=c.element.data("select2Tags")}if(e?(c.query=this.bind(function(a){var f,g,h,c={results:[],more:!1},e=a.term;h=function(b,c){var d;b.is("option")?a.matcher(e,b.text(),b)&&c.push(i.optionToData(b)):b.is("optgroup")&&(d=i.optionToData(b),b.children().each2(function(a,b){h(b,d.children)}),d.children.length>0&&c.push(d))},f=d.children(),this.getPlaceholder()!==b&&f.length>0&&(g=this.getPlaceholderOption(),g&&(f=f.not(g))),f.each2(function(a,b){h(b,c.results)}),a.callback(c)}),c.id=function(a){return a.id}):"query"in c||("ajax"in c?(h=c.element.data("ajax-url"),h&&h.length>0&&(c.ajax.url=h),c.query=G.call(c.element,c.ajax)):"data"in c?c.query=H(c.data):"tags"in c&&(c.query=I(c.tags),c.createSearchChoice===b&&(c.createSearchChoice=function(b){return{id:a.trim(b),text:a.trim(b)}}),c.initSelection===b&&(c.initSelection=function(b,d){var e=[];a(s(b.val(),c.separator,c.transformVal)).each(function(){var b={id:this,text:this},d=c.tags;a.isFunction(d)&&(d=d()),a(d).each(function(){return r(this.id,b.id)?(b=this,!1):void 0}),e.push(b)}),d(e)}))),"function"!=typeof c.query)throw"query function not defined for Select2 "+c.element.attr("id");if("top"===c.createSearchChoicePosition)c.createSearchChoicePosition=function(a,b){a.unshift(b)};else if("bottom"===c.createSearchChoicePosition)c.createSearchChoicePosition=function(a,b){a.push(b)};else if("function"!=typeof c.createSearchChoicePosition)throw"invalid createSearchChoicePosition option must be 'top', 'bottom' or a custom function";return c},monitorSource:function(){var d,c=this.opts.element,e=this;c.on("change.select2",this.bind(function(){this.opts.element.data("select2-change-triggered")!==!0&&this.initSelection()})),this._sync=this.bind(function(){var a=c.prop("disabled");a===b&&(a=!1),this.enable(!a);var d=c.prop("readonly");d===b&&(d=!1),this.readonly(d),this.container&&(D(this.container,this.opts.element,this.opts.adaptContainerCssClass),this.container.addClass(K(this.opts.containerCssClass,this.opts.element))),this.dropdown&&(D(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass),this.dropdown.addClass(K(this.opts.dropdownCssClass,this.opts.element)))}),c.length&&c[0].attachEvent&&c.each(function(){this.attachEvent("onpropertychange",e._sync)}),d=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver,d!==b&&(this.propertyObserver&&(delete this.propertyObserver,this.propertyObserver=null),this.propertyObserver=new d(function(b){a.each(b,e._sync)}),this.propertyObserver.observe(c.get(0),{attributes:!0,subtree:!1}))},triggerSelect:function(b){var c=a.Event("select2-selecting",{val:this.id(b),object:b,choice:b});return this.opts.element.trigger(c),!c.isDefaultPrevented()},triggerChange:function(b){b=b||{},b=a.extend({},b,{type:"change",val:this.val()}),this.opts.element.data("select2-change-triggered",!0),this.opts.element.trigger(b),this.opts.element.data("select2-change-triggered",!1),this.opts.element.click(),this.opts.blurOnChange&&this.opts.element.blur()},isInterfaceEnabled:function(){return this.enabledInterface===!0},enableInterface:function(){var a=this._enabled&&!this._readonly,b=!a;return a===this.enabledInterface?!1:(this.container.toggleClass("select2-container-disabled",b),this.close(),this.enabledInterface=a,!0)},enable:function(a){a===b&&(a=!0),this._enabled!==a&&(this._enabled=a,this.opts.element.prop("disabled",!a),this.enableInterface())},disable:function(){this.enable(!1)},readonly:function(a){a===b&&(a=!1),this._readonly!==a&&(this._readonly=a,this.opts.element.prop("readonly",a),this.enableInterface())},opened:function(){return this.container?this.container.hasClass("select2-dropdown-open"):!1},positionDropdown:function(){var v,w,x,y,z,b=this.dropdown,c=this.container,d=c.offset(),e=c.outerHeight(!1),f=c.outerWidth(!1),g=b.outerHeight(!1),h=a(window),i=h.width(),k=h.height(),l=h.scrollLeft()+i,m=h.scrollTop()+k,n=d.top+e,o=d.left,p=m>=n+g,q=d.top-g>=h.scrollTop(),r=b.outerWidth(!1),s=function(){return l>=o+r},t=function(){return d.left+l+c.outerWidth(!1)>r},u=b.hasClass("select2-drop-above");u?(w=!0,!q&&p&&(x=!0,w=!1)):(w=!1,!p&&q&&(x=!0,w=!0)),x&&(b.hide(),d=this.container.offset(),e=this.container.outerHeight(!1),f=this.container.outerWidth(!1),g=b.outerHeight(!1),l=h.scrollLeft()+i,m=h.scrollTop()+k,n=d.top+e,o=d.left,r=b.outerWidth(!1),b.show(),this.focusSearch()),this.opts.dropdownAutoWidth?(z=a(".select2-results",b)[0],b.addClass("select2-drop-auto-width"),b.css("width",""),r=b.outerWidth(!1)+(z.scrollHeight===z.clientHeight?0:j.width),r>f?f=r:r=f,g=b.outerHeight(!1)):this.container.removeClass("select2-drop-auto-width"),"static"!==this.body.css("position")&&(v=this.body.offset(),n-=v.top,o-=v.left),!s()&&t()&&(o=d.left+this.container.outerWidth(!1)-r),y={left:o,width:f},w?(y.top=d.top-g,y.bottom="auto",this.container.addClass("select2-drop-above"),b.addClass("select2-drop-above")):(y.top=n,y.bottom="auto",this.container.removeClass("select2-drop-above"),b.removeClass("select2-drop-above")),y=a.extend(y,K(this.opts.dropdownCss,this.opts.element)),b.css(y)},shouldOpen:function(){var b;return this.opened()?!1:this._enabled===!1||this._readonly===!0?!1:(b=a.Event("select2-opening"),this.opts.element.trigger(b),!b.isDefaultPrevented())},clearDropdownAlignmentPreference:function(){this.container.removeClass("select2-drop-above"),this.dropdown.removeClass("select2-drop-above")},open:function(){return this.shouldOpen()?(this.opening(),i.on("mousemove.select2Event",function(a){h.x=a.pageX,h.y=a.pageY}),!0):!1},opening:function(){var f,b=this.containerEventName,c="scroll."+b,d="resize."+b,e="orientationchange."+b;this.container.addClass("select2-dropdown-open").addClass("select2-container-active"),this.clearDropdownAlignmentPreference(),this.dropdown[0]!==this.body.children().last()[0]&&this.dropdown.detach().appendTo(this.body),f=a("#select2-drop-mask"),0===f.length&&(f=a(document.createElement("div")),f.attr("id","select2-drop-mask").attr("class","select2-drop-mask"),f.hide(),f.appendTo(this.body),f.on("mousedown touchstart click",function(b){n(f);var d,c=a("#select2-drop");c.length>0&&(d=c.data("select2"),d.opts.selectOnBlur&&d.selectHighlighted({noFocus:!0}),d.close(),b.preventDefault(),b.stopPropagation())})),this.dropdown.prev()[0]!==f[0]&&this.dropdown.before(f),a("#select2-drop").removeAttr("id"),this.dropdown.attr("id","select2-drop"),f.show(),this.positionDropdown(),this.dropdown.show(),this.positionDropdown(),this.dropdown.addClass("select2-drop-active");var g=this;this.container.parents().add(window).each(function(){a(this).on(d+" "+c+" "+e,function(){g.opened()&&g.positionDropdown()})})},close:function(){if(this.opened()){var b=this.containerEventName,c="scroll."+b,d="resize."+b,e="orientationchange."+b;this.container.parents().add(window).each(function(){a(this).off(c).off(d).off(e)}),this.clearDropdownAlignmentPreference(),a("#select2-drop-mask").hide(),this.dropdown.removeAttr("id"),this.dropdown.hide(),this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active"),this.results.empty(),i.off("mousemove.select2Event"),this.clearSearch(),this.search.removeClass("select2-active"),this.opts.element.trigger(a.Event("select2-close"))}},externalSearch:function(a){this.open(),this.search.val(a),this.updateResults(!1)},clearSearch:function(){},getMaximumSelectionSize:function(){return K(this.opts.maximumSelectionSize,this.opts.element)},ensureHighlightVisible:function(){var c,d,e,f,g,h,i,j,b=this.results;if(d=this.highlight(),!(0>d)){if(0==d)return b.scrollTop(0),void 0;c=this.findHighlightableChoices().find(".select2-result-label"),e=a(c[d]),j=(e.offset()||{}).top||0,f=j+e.outerHeight(!0),d===c.length-1&&(i=b.find("li.select2-more-results"),i.length>0&&(f=i.offset().top+i.outerHeight(!0))),g=b.offset().top+b.outerHeight(!1),f>g&&b.scrollTop(b.scrollTop()+(f-g)),h=j-b.offset().top,0>h&&"none"!=e.css("display")&&b.scrollTop(b.scrollTop()+h)}},findHighlightableChoices:function(){return this.results.find(".select2-result-selectable:not(.select2-disabled):not(.select2-selected)")},moveHighlight:function(b){for(var c=this.findHighlightableChoices(),d=this.highlight();d>-1&&d<c.length;){d+=b;
var e=a(c[d]);if(e.hasClass("select2-result-selectable")&&!e.hasClass("select2-disabled")&&!e.hasClass("select2-selected")){this.highlight(d);break}}},highlight:function(b){var d,e,c=this.findHighlightableChoices();return 0===arguments.length?p(c.filter(".select2-highlighted")[0],c.get()):(b>=c.length&&(b=c.length-1),0>b&&(b=0),this.removeHighlight(),d=a(c[b]),d.addClass("select2-highlighted"),this.search.attr("aria-activedescendant",d.find(".select2-result-label").attr("id")),this.ensureHighlightVisible(),this.liveRegion.text(d.text()),e=d.data("select2-data"),e&&this.opts.element.trigger({type:"select2-highlight",val:this.id(e),choice:e}),void 0)},removeHighlight:function(){this.results.find(".select2-highlighted").removeClass("select2-highlighted")},touchMoved:function(){this._touchMoved=!0},clearTouchMoved:function(){this._touchMoved=!1},countSelectableResults:function(){return this.findHighlightableChoices().length},highlightUnderEvent:function(b){var c=a(b.target).closest(".select2-result-selectable");if(c.length>0&&!c.is(".select2-highlighted")){var d=this.findHighlightableChoices();this.highlight(d.index(c))}else 0==c.length&&this.removeHighlight()},loadMoreIfNeeded:function(){var c,a=this.results,b=a.find("li.select2-more-results"),d=this.resultsPage+1,e=this,f=this.search.val(),g=this.context;0!==b.length&&(c=b.offset().top-a.offset().top-a.height(),c<=this.opts.loadMorePadding&&(b.addClass("select2-active"),this.opts.query({element:this.opts.element,term:f,page:d,context:g,matcher:this.opts.matcher,callback:this.bind(function(c){e.opened()&&(e.opts.populateResults.call(this,a,c.results,{term:f,page:d,context:g}),e.postprocessResults(c,!1,!1),c.more===!0?(b.detach().appendTo(a).html(e.opts.escapeMarkup(K(e.opts.formatLoadMore,e.opts.element,d+1))),window.setTimeout(function(){e.loadMoreIfNeeded()},10)):b.remove(),e.positionDropdown(),e.resultsPage=d,e.context=c.context,this.opts.element.trigger({type:"select2-loaded",items:c}))})})))},tokenize:function(){},updateResults:function(c){function m(){d.removeClass("select2-active"),h.positionDropdown(),e.find(".select2-no-results,.select2-selection-limit,.select2-searching").length?h.liveRegion.text(e.text()):h.liveRegion.text(h.opts.formatMatches(e.find('.select2-result-selectable:not(".select2-selected")').length))}function n(a){e.html(a),m()}var g,i,l,d=this.search,e=this.results,f=this.opts,h=this,j=d.val(),k=a.data(this.container,"select2-last-term");if((c===!0||!k||!r(j,k))&&(a.data(this.container,"select2-last-term",j),c===!0||this.showSearchInput!==!1&&this.opened())){l=++this.queryCount;var o=this.getMaximumSelectionSize();if(o>=1&&(g=this.data(),a.isArray(g)&&g.length>=o&&J(f.formatSelectionTooBig,"formatSelectionTooBig")))return n("<li class='select2-selection-limit'>"+K(f.formatSelectionTooBig,f.element,o)+"</li>"),void 0;if(d.val().length<f.minimumInputLength)return J(f.formatInputTooShort,"formatInputTooShort")?n("<li class='select2-no-results'>"+K(f.formatInputTooShort,f.element,d.val(),f.minimumInputLength)+"</li>"):n(""),c&&this.showSearch&&this.showSearch(!0),void 0;if(f.maximumInputLength&&d.val().length>f.maximumInputLength)return J(f.formatInputTooLong,"formatInputTooLong")?n("<li class='select2-no-results'>"+K(f.formatInputTooLong,f.element,d.val(),f.maximumInputLength)+"</li>"):n(""),void 0;f.formatSearching&&0===this.findHighlightableChoices().length&&n("<li class='select2-searching'>"+K(f.formatSearching,f.element)+"</li>"),d.addClass("select2-active"),this.removeHighlight(),i=this.tokenize(),i!=b&&null!=i&&d.val(i),this.resultsPage=1,f.query({element:f.element,term:d.val(),page:this.resultsPage,context:null,matcher:f.matcher,callback:this.bind(function(g){var i;if(l==this.queryCount){if(!this.opened())return this.search.removeClass("select2-active"),void 0;if(g.hasError!==b&&J(f.formatAjaxError,"formatAjaxError"))return n("<li class='select2-ajax-error'>"+K(f.formatAjaxError,f.element,g.jqXHR,g.textStatus,g.errorThrown)+"</li>"),void 0;if(this.context=g.context===b?null:g.context,this.opts.createSearchChoice&&""!==d.val()&&(i=this.opts.createSearchChoice.call(h,d.val(),g.results),i!==b&&null!==i&&h.id(i)!==b&&null!==h.id(i)&&0===a(g.results).filter(function(){return r(h.id(this),h.id(i))}).length&&this.opts.createSearchChoicePosition(g.results,i)),0===g.results.length&&J(f.formatNoMatches,"formatNoMatches"))return n("<li class='select2-no-results'>"+K(f.formatNoMatches,f.element,d.val())+"</li>"),void 0;e.empty(),h.opts.populateResults.call(this,e,g.results,{term:d.val(),page:this.resultsPage,context:null}),g.more===!0&&J(f.formatLoadMore,"formatLoadMore")&&(e.append("<li class='select2-more-results'>"+f.escapeMarkup(K(f.formatLoadMore,f.element,this.resultsPage))+"</li>"),window.setTimeout(function(){h.loadMoreIfNeeded()},10)),this.postprocessResults(g,c),m(),this.opts.element.trigger({type:"select2-loaded",items:g})}})})}},cancel:function(){this.close()},blur:function(){this.opts.selectOnBlur&&this.selectHighlighted({noFocus:!0}),this.close(),this.container.removeClass("select2-container-active"),this.search[0]===document.activeElement&&this.search.blur(),this.clearSearch(),this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")},focusSearch:function(){y(this.search)},selectHighlighted:function(a){if(this._touchMoved)return this.clearTouchMoved(),void 0;var b=this.highlight(),c=this.results.find(".select2-highlighted"),d=c.closest(".select2-result").data("select2-data");d?(this.highlight(b),this.onSelect(d,a)):a&&a.noFocus&&this.close()},getPlaceholder:function(){var a;return this.opts.element.attr("placeholder")||this.opts.element.attr("data-placeholder")||this.opts.element.data("placeholder")||this.opts.placeholder||((a=this.getPlaceholderOption())!==b?a.text():b)},getPlaceholderOption:function(){if(this.select){var c=this.select.children("option").first();if(this.opts.placeholderOption!==b)return"first"===this.opts.placeholderOption&&c||"function"==typeof this.opts.placeholderOption&&this.opts.placeholderOption(this.select);if(""===a.trim(c.text())&&""===c.val())return c}},initContainerWidth:function(){function c(){var c,d,e,f,g,h;if("off"===this.opts.width)return null;if("element"===this.opts.width)return 0===this.opts.element.outerWidth(!1)?"auto":this.opts.element.outerWidth(!1)+"px";if("copy"===this.opts.width||"resolve"===this.opts.width){if(c=this.opts.element.attr("style"),c!==b)for(d=c.split(";"),f=0,g=d.length;g>f;f+=1)if(h=d[f].replace(/\s/g,""),e=h.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i),null!==e&&e.length>=1)return e[1];return"resolve"===this.opts.width?(c=this.opts.element.css("width"),c.indexOf("%")>0?c:0===this.opts.element.outerWidth(!1)?"auto":this.opts.element.outerWidth(!1)+"px"):null}return a.isFunction(this.opts.width)?this.opts.width():this.opts.width}var d=c.call(this);null!==d&&this.container.css("width",d)}}),d=O(c,{createContainer:function(){var b=a(document.createElement("div")).attr({"class":"select2-container"}).html(["<a href='javascript:void(0)' class='select2-choice' tabindex='-1'>","   <span class='select2-chosen'>&#160;</span><abbr class='select2-search-choice-close'></abbr>","   <span class='select2-arrow' role='presentation'><b role='presentation'></b></span>","</a>","<label for='' class='select2-offscreen'></label>","<input class='select2-focusser select2-offscreen' type='text' aria-haspopup='true' role='button' />","<div class='select2-drop select2-display-none'>","   <div class='select2-search'>","       <label for='' class='select2-offscreen'></label>","       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input' role='combobox' aria-expanded='true'","       aria-autocomplete='list' />","   </div>","   <ul class='select2-results' role='listbox'>","   </ul>","</div>"].join(""));return b},enableInterface:function(){this.parent.enableInterface.apply(this,arguments)&&this.focusser.prop("disabled",!this.isInterfaceEnabled())},opening:function(){var c,d,e;this.opts.minimumResultsForSearch>=0&&this.showSearch(!0),this.parent.opening.apply(this,arguments),this.showSearchInput!==!1&&this.search.val(this.focusser.val()),this.opts.shouldFocusInput(this)&&(this.search.focus(),c=this.search.get(0),c.createTextRange?(d=c.createTextRange(),d.collapse(!1),d.select()):c.setSelectionRange&&(e=this.search.val().length,c.setSelectionRange(e,e))),""===this.search.val()&&this.nextSearchTerm!=b&&(this.search.val(this.nextSearchTerm),this.search.select()),this.focusser.prop("disabled",!0).val(""),this.updateResults(!0),this.opts.element.trigger(a.Event("select2-open"))},close:function(){this.opened()&&(this.parent.close.apply(this,arguments),this.focusser.prop("disabled",!1),this.opts.shouldFocusInput(this)&&this.focusser.focus())},focus:function(){this.opened()?this.close():(this.focusser.prop("disabled",!1),this.opts.shouldFocusInput(this)&&this.focusser.focus())},isFocused:function(){return this.container.hasClass("select2-container-active")},cancel:function(){this.parent.cancel.apply(this,arguments),this.focusser.prop("disabled",!1),this.opts.shouldFocusInput(this)&&this.focusser.focus()},destroy:function(){a("label[for='"+this.focusser.attr("id")+"']").attr("for",this.opts.element.attr("id")),this.parent.destroy.apply(this,arguments),N.call(this,"selection","focusser")},

    initContainer:function(){
    var b,g,c=this.container,d=this.dropdown,e=f();
    this.opts.minimumResultsForSearch<0?this.showSearch(!1):this.showSearch(!0),this.selection=b=c.find(".select2-choice"),this.focusser=c.find(".select2-focusser"),
      b.find(".select2-chosen").attr("id","select2-chosen-"+e),
      this.focusser.attr("aria-labelledby","select2-chosen-"+e),
      this.results.attr("id","select2-results-"+e),
      this.search.attr("aria-owns","select2-results-"+e),
      this.focusser.attr("id","s2id_autogen"+e),
      g=a("label[for='"+this.opts.element.attr("id")+"']"),
      this.opts.element.focus(this.bind(function(){this.focus()})),
      this.focusser.prev().text(g.text()).attr("for",this.focusser.attr("id"));var h=this.opts.element.attr("title");this.opts.element.attr("title",h||g.text()),this.focusser.attr("tabindex",this.elementTabIndex),this.search.attr("id",this.focusser.attr("id")+"_search"),this.search.prev().text(a("label[for='"+this.focusser.attr("id")+"']").text()).attr("for",this.search.attr("id")),this.search.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled()&&229!=a.keyCode){if(a.which===k.PAGE_UP||a.which===k.PAGE_DOWN)return A(a),void 0;switch(a.which){case k.UP:case k.DOWN:return this.moveHighlight(a.which===k.UP?-1:1),A(a),void 0;case k.ENTER:return this.selectHighlighted(),A(a),void 0;case k.TAB:return this.selectHighlighted({noFocus:!0}),void 0;case k.ESC:return this.cancel(a),A(a),void 0}}})),this.search.on("blur",this.bind(function(){document.activeElement===this.body.get(0)&&window.setTimeout(this.bind(function(){this.opened()&&this.search.focus()}),0)})),this.focusser.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled()&&a.which!==k.TAB&&!k.isControl(a)&&!k.isFunctionKey(a)&&a.which!==k.ESC){if(this.opts.openOnEnter===!1&&a.which===k.ENTER)return A(a),void 0;if(a.which==k.DOWN||a.which==k.UP||a.which==k.ENTER&&this.opts.openOnEnter){if(a.altKey||a.ctrlKey||a.shiftKey||a.metaKey)return;return this.open(),A(a),void 0}return a.which==k.DELETE||a.which==k.BACKSPACE?(this.opts.allowClear&&this.clear(),A(a),void 0):void 0}})),u(this.focusser),this.focusser.on("keyup-change input",this.bind(function(a){if(this.opts.minimumResultsForSearch>=0){if(a.stopPropagation(),this.opened())return;this.open()}})),b.on("mousedown touchstart","abbr",this.bind(function(a){this.isInterfaceEnabled()&&(this.clear(),B(a),this.close(),this.selection&&this.selection.focus())})),b.on("mousedown touchstart",this.bind(function(c){n(b),this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.opened()?this.close():this.isInterfaceEnabled()&&this.open(),A(c)})),d.on("mousedown touchstart",this.bind(function(){this.opts.shouldFocusInput(this)&&this.search.focus()})),b.on("focus",this.bind(function(a){A(a)})),this.focusser.on("focus",this.bind(function(){this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.container.addClass("select2-container-active")})).on("blur",this.bind(function(){this.opened()||(this.container.removeClass("select2-container-active"),this.opts.element.trigger(a.Event("select2-blur")))})),this.search.on("focus",this.bind(function(){this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.container.addClass("select2-container-active")})),this.initContainerWidth(),this.opts.element.hide(),this.setPlaceholder()},

    clear:function(b){
      var c=this.selection.data("select2-data");if(c){var d=a.Event("select2-clearing");if(this.opts.element.trigger(d),d.isDefaultPrevented())return;var e=this.getPlaceholderOption();this.opts.element.val(e?e.val():""),this.selection.find(".select2-chosen").empty(),
        this.selection.removeData("select2-data"),
        this.setPlaceholder(),b!==!1&&(this.opts.element.trigger({type:"select2-removed",val:this.id(c),choice:c}),
        this.triggerChange({removed:c}))}
},
  initSelection:function(){if(this.isPlaceholderOptionSelected())this.updateSelection(null),this.close(),this.setPlaceholder();else{var c=this;this.opts.initSelection.call(null,this.opts.element,function(a){a!==b&&null!==a&&(c.updateSelection(a),c.close(),c.setPlaceholder(),c.nextSearchTerm=c.opts.nextSearchTerm(a,c.search.val()))})}},isPlaceholderOptionSelected:function(){var a;return this.getPlaceholder()===b?!1:(a=this.getPlaceholderOption())!==b&&a.prop("selected")||""===this.opts.element.val()||this.opts.element.val()===b||null===this.opts.element.val()},prepareOpts:function(){var b=this.parent.prepareOpts.apply(this,arguments),c=this;return"select"===b.element.get(0).tagName.toLowerCase()?b.initSelection=function(a,b){var d=a.find("option").filter(function(){return this.selected&&!this.disabled});b(c.optionToData(d))}:"data"in b&&(b.initSelection=b.initSelection||function(c,d){var e=c.val(),f=null;b.query({matcher:function(a,c,d){var g=r(e,b.id(d));return g&&(f=d),g},callback:a.isFunction(d)?function(){d(f)}:a.noop})}),b},getPlaceholder:function(){return this.select&&this.getPlaceholderOption()===b?b:this.parent.getPlaceholder.apply(this,arguments)},
    setPlaceholder:function(){var a=this.getPlaceholder();
    if(this.isPlaceholderOptionSelected()&&a!==b){
      if(this.select&&this.getPlaceholderOption()===b)return;
      this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(a)),
      this.selection.addClass("select2-default"),
      this.container.removeClass("select2-allowclear")}
    },
postprocessResults:function(a,b,c){var d=0,e=this;if(this.findHighlightableChoices().each2(function(a,b){return r(e.id(b.data("select2-data")),e.opts.element.val())?(d=a,!1):void 0}),c!==!1&&(b===!0&&d>=0?this.highlight(d):this.highlight(0)),b===!0){var g=this.opts.minimumResultsForSearch;g>=0&&this.showSearch(L(a.results)>=g)}},showSearch:function(b){this.showSearchInput!==b&&(this.showSearchInput=b,this.dropdown.find(".select2-search").toggleClass("select2-search-hidden",!b),this.dropdown.find(".select2-search").toggleClass("select2-offscreen",!b),a(this.dropdown,this.container).toggleClass("select2-with-searchbox",b))},onSelect:function(a,b){if(this.triggerSelect(a)){var c=this.opts.element.val(),d=this.data();this.opts.element.val(this.id(a)),this.updateSelection(a),this.opts.element.trigger({type:"select2-selected",val:this.id(a),choice:a}),this.nextSearchTerm=this.opts.nextSearchTerm(a,this.search.val()),this.close(),b&&b.noFocus||!this.opts.shouldFocusInput(this)||this.focusser.focus(),r(c,this.id(a))||this.triggerChange({added:a,removed:d})}},
    updateSelection:function(a){
      var d,e,c=this.selection.find(".select2-chosen");
        this.selection.data("select2-data",a),
        c.empty(),
        null!==a&&(d=this.opts.formatSelection(a,c,this.opts.escapeMarkup)),
        d!==b&&c.append(a.icon?"<span class='select2-resultIcon'><svg class='select2-optionIconSvg' width='18' height='18'><use xmlns:xlink='http://www.w3.org/1999/xlink' xlink:href='"+a.icon+"'></use></svg></span><span class='select2-resultCode'>"+(a.display? a.display: a.id)+"</span>":d),
        e=this.opts.formatSelectionCssClass(a,c),
        e!==b&&c.addClass(e),
        this.selection.removeClass("select2-default"),
        this.opts.allowClear&&this.getPlaceholder()!==b&&this.container.addClass("select2-allowclear")
    },
    val:function(){var a,c=!1,d=null,e=this,f=this.data();if(0===arguments.length)return this.opts.element.val();if(a=arguments[0],arguments.length>1&&(c=arguments[1]),this.select)this.select.val(a).find("option").filter(function(){return this.selected}).each2(function(a,b){return d=e.optionToData(b),!1}),this.updateSelection(d),this.setPlaceholder(),c&&this.triggerChange({added:d,removed:f});else{if(!a&&0!==a)return this.clear(c),void 0;if(this.opts.initSelection===b)throw new Error("cannot call val() if initSelection() is not defined");this.opts.element.val(a),this.opts.initSelection(this.opts.element,function(a){e.opts.element.val(a?e.id(a):""),e.updateSelection(a),e.setPlaceholder(),c&&e.triggerChange({added:a,removed:f})})}},clearSearch:function(){this.search.val(""),this.focusser.val("")},data:function(a){var c,d=!1;return 0===arguments.length?(c=this.selection.data("select2-data"),c==b&&(c=null),c):(arguments.length>1&&(d=arguments[1]),a?(c=this.data(),this.opts.element.val(a?this.id(a):""),this.updateSelection(a),d&&this.triggerChange({added:a,removed:c})):this.clear(d),void 0)}}),e=O(c,{
      createContainer:function(){var b=a(document.createElement("div")).attr({"class":"select2-container select2-container-multi"}).html(["<ul class='select2-choices'>","  <li class='select2-search-field'>","    <label for='' class='select2-offscreen'></label>","    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>","  </li>","</ul>","<div class='select2-drop select2-drop-multi select2-display-none'>","   <ul class='select2-results'>","   </ul>","</div>"].join(""));return b},prepareOpts:function(){var b=this.parent.prepareOpts.apply(this,arguments),c=this;return"select"===b.element.get(0).tagName.toLowerCase()?b.initSelection=function(a,b){var d=[];a.find("option").filter(function(){return this.selected&&!this.disabled}).each2(function(a,b){d.push(c.optionToData(b))}),b(d)}:"data"in b&&(b.initSelection=b.initSelection||function(c,d){var e=s(c.val(),b.separator,b.transformVal),f=[];b.query({matcher:function(c,d,g){var h=a.grep(e,function(a){return r(a,b.id(g))}).length;return h&&f.push(g),h},callback:a.isFunction(d)?function(){for(var a=[],c=0;c<e.length;c++)for(var g=e[c],h=0;h<f.length;h++){var i=f[h];if(r(g,b.id(i))){a.push(i),f.splice(h,1);break}}d(a)}:a.noop})}),b},selectChoice:function(a){var b=this.container.find(".select2-search-choice-focus");b.length&&a&&a[0]==b[0]||(b.length&&this.opts.element.trigger("choice-deselected",b),b.removeClass("select2-search-choice-focus"),a&&a.length&&(this.close(),a.addClass("select2-search-choice-focus"),this.opts.element.trigger("choice-selected",a)))},destroy:function(){a("label[for='"+this.search.attr("id")+"']").attr("for",this.opts.element.attr("id")),this.parent.destroy.apply(this,arguments),N.call(this,"searchContainer","selection")},
    initContainer:function(){var c,b=".select2-choices";this.searchContainer=this.container.find(".select2-search-field"),this.selection=c=this.container.find(b);var d=this;this.selection.on("click",".select2-container:not(.select2-container-disabled) .select2-search-choice:not(.select2-locked)",function(){d.search[0].focus(),d.selectChoice(a(this))}),this.search.attr("id","s2id_autogen"+f()),this.search.prev().text(a("label[for='"+this.opts.element.attr("id")+"']").text()).attr("for",this.search.attr("id")),this.opts.element.focus(this.bind(function(){this.focus()})),this.search.on("input paste",this.bind(function(){this.search.attr("placeholder")&&0==this.search.val().length||this.isInterfaceEnabled()&&(this.opened()||this.open())})),this.search.attr("tabindex",this.elementTabIndex),this.keydowns=0,this.search.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled()){++this.keydowns;var b=c.find(".select2-search-choice-focus"),d=b.prev(".select2-search-choice:not(.select2-locked)"),e=b.next(".select2-search-choice:not(.select2-locked)"),f=z(this.search);if(b.length&&(a.which==k.LEFT||a.which==k.RIGHT||a.which==k.BACKSPACE||a.which==k.DELETE||a.which==k.ENTER)){var g=b;return a.which==k.LEFT&&d.length?g=d:a.which==k.RIGHT?g=e.length?e:null:a.which===k.BACKSPACE?this.unselect(b.first())&&(this.search.width(10),g=d.length?d:e):a.which==k.DELETE?this.unselect(b.first())&&(this.search.width(10),g=e.length?e:null):a.which==k.ENTER&&(g=null),this.selectChoice(g),A(a),g&&g.length||this.open(),void 0}if((a.which===k.BACKSPACE&&1==this.keydowns||a.which==k.LEFT)&&0==f.offset&&!f.length)return this.selectChoice(c.find(".select2-search-choice:not(.select2-locked)").last()),A(a),void 0;if(this.selectChoice(null),this.opened())switch(a.which){case k.UP:case k.DOWN:return this.moveHighlight(a.which===k.UP?-1:1),A(a),void 0;case k.ENTER:return this.selectHighlighted(),A(a),void 0;case k.TAB:return this.selectHighlighted({noFocus:!0}),this.close(),void 0;case k.ESC:return this.cancel(a),A(a),void 0}if(a.which!==k.TAB&&!k.isControl(a)&&!k.isFunctionKey(a)&&a.which!==k.BACKSPACE&&a.which!==k.ESC){if(a.which===k.ENTER){if(this.opts.openOnEnter===!1)return;if(a.altKey||a.ctrlKey||a.shiftKey||a.metaKey)return}this.open(),(a.which===k.PAGE_UP||a.which===k.PAGE_DOWN)&&A(a),a.which===k.ENTER&&A(a)}}})),this.search.on("keyup",this.bind(function(){this.keydowns=0,this.resizeSearch()})),this.search.on("blur",this.bind(function(b){this.container.removeClass("select2-container-active"),this.search.removeClass("select2-focused"),this.selectChoice(null),this.opened()||this.clearSearch(),b.stopImmediatePropagation(),this.opts.element.trigger(a.Event("select2-blur"))})),this.container.on("click",b,this.bind(function(b){this.isInterfaceEnabled()&&(a(b.target).closest(".select2-search-choice").length>0||(this.selectChoice(null),this.clearPlaceholder(),this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.open(),this.focusSearch(),b.preventDefault()))})),this.container.on("focus",b,this.bind(function(){this.isInterfaceEnabled()&&(this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.container.addClass("select2-container-active"),this.dropdown.addClass("select2-drop-active"),this.clearPlaceholder())})),this.initContainerWidth(),this.opts.element.hide(),this.clearSearch()},enableInterface:function(){this.parent.enableInterface.apply(this,arguments)&&this.search.prop("disabled",!this.isInterfaceEnabled())},initSelection:function(){if(""===this.opts.element.val()&&""===this.opts.element.text()&&(this.updateSelection([]),this.close(),this.clearSearch()),this.select||""!==this.opts.element.val()){var c=this;this.opts.initSelection.call(null,this.opts.element,function(a){a!==b&&null!==a&&(c.updateSelection(a),c.close(),c.clearSearch())})}},clearSearch:function(){var a=this.getPlaceholder(),c=this.getMaxSearchWidth();a!==b&&0===this.getVal().length&&this.search.hasClass("select2-focused")===!1?(this.search.val(a).addClass("select2-default"),this.search.width(c>0?c:this.container.css("width"))):this.search.val("").width(10)},clearPlaceholder:function(){this.search.hasClass("select2-default")&&this.search.val("").removeClass("select2-default")},opening:function(){this.clearPlaceholder(),this.resizeSearch(),this.parent.opening.apply(this,arguments),this.focusSearch(),""===this.search.val()&&this.nextSearchTerm!=b&&(this.search.val(this.nextSearchTerm),this.search.select()),this.updateResults(!0),this.opts.shouldFocusInput(this)&&this.search.focus(),this.opts.element.trigger(a.Event("select2-open"))},close:function(){this.opened()&&this.parent.close.apply(this,arguments)},focus:function(){this.close(),this.search.focus()},isFocused:function(){return this.search.hasClass("select2-focused")},updateSelection:function(b){var c=[],d=[],e=this;a(b).each(function(){p(e.id(this),c)<0&&(c.push(e.id(this)),d.push(this))}),b=d,this.selection.find(".select2-search-choice").remove(),a(b).each(function(){e.addSelectedChoice(this)}),e.postprocessResults()},tokenize:function(){var a=this.search.val();a=this.opts.tokenizer.call(this,a,this.data(),this.bind(this.onSelect),this.opts),null!=a&&a!=b&&(this.search.val(a),a.length>0&&this.open())},onSelect:function(a,c){this.triggerSelect(a)&&""!==a.text&&(this.addSelectedChoice(a),this.opts.element.trigger({type:"selected",val:this.id(a),choice:a}),this.nextSearchTerm=this.opts.nextSearchTerm(a,this.search.val()),this.clearSearch(),this.updateResults(),(this.select||!this.opts.closeOnSelect)&&this.postprocessResults(a,!1,this.opts.closeOnSelect===!0),this.opts.closeOnSelect?(this.close(),this.search.width(10)):this.countSelectableResults()>0?(this.search.width(10),this.resizeSearch(),this.getMaximumSelectionSize()>0&&this.val().length>=this.getMaximumSelectionSize()?this.updateResults(!0):this.nextSearchTerm!=b&&(this.search.val(this.nextSearchTerm),this.updateResults(),this.search.select()),this.positionDropdown()):(this.close(),this.search.width(10)),this.triggerChange({added:a}),c&&c.noFocus||this.focusSearch())},cancel:function(){this.close(),this.focusSearch()},addSelectedChoice:function(c){var j,k,d=!c.locked,e=a("<li class='select2-search-choice'>    <div></div>    <a href='#' class='select2-search-choice-close' tabindex='-1'></a></li>"),f=a("<li class='select2-search-choice select2-locked'><div></div></li>"),g=d?e:f,h=this.id(c),i=this.getVal();j=this.opts.formatSelection(c,g.find("div"),this.opts.escapeMarkup),j!=b&&g.find("div").replaceWith(a("<div></div>").html(j)),k=this.opts.formatSelectionCssClass(c,g.find("div")),k!=b&&g.addClass(k),d&&g.find(".select2-search-choice-close").on("mousedown",A).on("click dblclick",this.bind(function(b){this.isInterfaceEnabled()&&(this.unselect(a(b.target)),this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus"),A(b),this.close(),this.focusSearch())})).on("focus",this.bind(function(){this.isInterfaceEnabled()&&(this.container.addClass("select2-container-active"),this.dropdown.addClass("select2-drop-active"))})),g.data("select2-data",c),g.insertBefore(this.searchContainer),i.push(h),this.setVal(i)},unselect:function(b){var d,e,c=this.getVal();if(b=b.closest(".select2-search-choice"),0===b.length)throw"Invalid argument: "+b+". Must be .select2-search-choice";if(d=b.data("select2-data")){var f=a.Event("select2-removing");if(f.val=this.id(d),f.choice=d,this.opts.element.trigger(f),f.isDefaultPrevented())return!1;for(;(e=p(this.id(d),c))>=0;)c.splice(e,1),this.setVal(c),this.select&&this.postprocessResults();return b.remove(),this.opts.element.trigger({type:"select2-removed",val:this.id(d),choice:d}),this.triggerChange({removed:d}),!0}},postprocessResults:function(a,b,c){var d=this.getVal(),e=this.results.find(".select2-result"),f=this.results.find(".select2-result-with-children"),g=this;e.each2(function(a,b){var c=g.id(b.data("select2-data"));p(c,d)>=0&&(b.addClass("select2-selected"),b.find(".select2-result-selectable").addClass("select2-selected"))}),f.each2(function(a,b){b.is(".select2-result-selectable")||0!==b.find(".select2-result-selectable:not(.select2-selected)").length||b.addClass("select2-selected")}),-1==this.highlight()&&c!==!1&&this.opts.closeOnSelect===!0&&g.highlight(0),!this.opts.createSearchChoice&&!e.filter(".select2-result:not(.select2-selected)").length>0&&(!a||a&&!a.more&&0===this.results.find(".select2-no-results").length)&&J(g.opts.formatNoMatches,"formatNoMatches")&&this.results.append("<li class='select2-no-results'>"+K(g.opts.formatNoMatches,g.opts.element,g.search.val())+"</li>")},getMaxSearchWidth:function(){return this.selection.width()-t(this.search)},resizeSearch:function(){var a,b,c,d,e,f=t(this.search);a=C(this.search)+10,b=this.search.offset().left,c=this.selection.width(),d=this.selection.offset().left,e=c-(b-d)-f,a>e&&(e=c-f),40>e&&(e=c-f),0>=e&&(e=a),this.search.width(Math.floor(e))},getVal:function(){var a;return this.select?(a=this.select.val(),null===a?[]:a):(a=this.opts.element.val(),s(a,this.opts.separator,this.opts.transformVal))},setVal:function(b){var c;this.select?this.select.val(b):(c=[],a(b).each(function(){p(this,c)<0&&c.push(this)}),this.opts.element.val(0===c.length?"":c.join(this.opts.separator)))},buildChangeDetails:function(a,b){for(var b=b.slice(0),a=a.slice(0),c=0;c<b.length;c++)for(var d=0;d<a.length;d++)r(this.opts.id(b[c]),this.opts.id(a[d]))&&(b.splice(c,1),c>0&&c--,a.splice(d,1),d--);return{added:b,removed:a}},val:function(c,d){var e,f=this;if(0===arguments.length)return this.getVal();if(e=this.data(),e.length||(e=[]),!c&&0!==c)return this.opts.element.val(""),this.updateSelection([]),this.clearSearch(),d&&this.triggerChange({added:this.data(),removed:e}),void 0;if(this.setVal(c),this.select)this.opts.initSelection(this.select,this.bind(this.updateSelection)),d&&this.triggerChange(this.buildChangeDetails(e,this.data()));else{if(this.opts.initSelection===b)throw new Error("val() cannot be called if initSelection() is not defined");this.opts.initSelection(this.opts.element,function(b){var c=a.map(b,f.id);f.setVal(c),f.updateSelection(b),f.clearSearch(),d&&f.triggerChange(f.buildChangeDetails(e,f.data()))})}this.clearSearch()},onSortStart:function(){if(this.select)throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");this.search.width(0),this.searchContainer.hide()},onSortEnd:function(){var b=[],c=this;this.searchContainer.show(),this.searchContainer.appendTo(this.searchContainer.parent()),this.resizeSearch(),this.selection.find(".select2-search-choice").each(function(){b.push(c.opts.id(a(this).data("select2-data")))}),this.setVal(b),this.triggerChange()},data:function(b,c){var e,f,d=this;return 0===arguments.length?this.selection.children(".select2-search-choice").map(function(){return a(this).data("select2-data")}).get():(f=this.data(),b||(b=[]),e=a.map(b,function(a){return d.opts.id(a)}),this.setVal(e),this.updateSelection(b),this.clearSearch(),c&&this.triggerChange(this.buildChangeDetails(f,this.data())),void 0)}}),
    a.fn.select2Custom=function(){var d,e,f,g,h,c=Array.prototype.slice.call(arguments,0),i=["val","destroy","opened","open","close","focus","isFocused","container","dropdown","onSortStart","onSortEnd","enable","disable","readonly","positionDropdown","data","search"],j=["opened","isFocused","container","dropdown"],k=["val","data"],l={search:"externalSearch"};return this.each(function(){if(0===c.length||"object"==typeof c[0])d=0===c.length?{}:a.extend({},c[0]),d.element=a(this),"select"===d.element.get(0).tagName.toLowerCase()?h=d.element.prop("multiple"):(h=d.multiple||!1,"tags"in d&&(d.multiple=h=!0)),e=h?new window.Select2Custom["class"].multi:new window.Select2Custom["class"].single,e.init(d);else{if("string"!=typeof c[0])throw"Invalid arguments to select2 plugin: "+c;if(p(c[0],i)<0)throw"Unknown method: "+c[0];if(g=b,e=a(this).data("select2"),e===b)return;if(f=c[0],"container"===f?g=e.container:"dropdown"===f?g=e.dropdown:(l[f]&&(f=l[f]),g=e[f].apply(e,c.slice(1))),p(c[0],j)>=0||p(c[0],k)>=0&&1==c.length)return!1}}),g===b?this:g},
    a.fn.select2Custom.defaults={width:"copy",loadMorePadding:0,closeOnSelect:!0,openOnEnter:!0,containerCss:{},dropdownCss:{},containerCssClass:"",dropdownCssClass:"",
formatResult: function(a,b,c,d){
    var e=[];
    return E(this.text(a),c.term,e,d,a),e.join("")
},
transformVal:function(b){return a.trim(b)},formatSelection:function(a,c,d){return a?d(this.text(a)):b},sortResults:function(a){return a},formatResultCssClass:function(a){return a.css},formatSelectionCssClass:function(){return b},minimumResultsForSearch:0,minimumInputLength:0,maximumInputLength:null,maximumSelectionSize:0,id:function(a){return a==b?null:a.id},text:function(b){return b&&this.data&&this.data.text?a.isFunction(this.data.text)?this.data.text(b):b[this.data.text]:b.text
},matcher:function(a,b){return o(""+b).toUpperCase().indexOf(o(""+a).toUpperCase())>=0},separator:",",tokenSeparators:[],tokenizer:M,escapeMarkup:F,blurOnChange:!1,selectOnBlur:!1,adaptContainerCssClass:function(a){return a},adaptDropdownCssClass:function(){return null},nextSearchTerm:function(){return b},searchInputPlaceholder:"",createSearchChoicePosition:"top",shouldFocusInput:function(a){var b="ontouchstart"in window||navigator.msMaxTouchPoints>0;return b?a.opts.minimumResultsForSearch<0?!1:!0:!0}},
    a.fn.select2Custom.locales=[],
    a.fn.select2Custom.locales.en={formatMatches:function(a){return 1===a?"One result is available, press enter to select it.":a+" results are available, use up and down arrow keys to navigate."},formatNoMatches:function(){return"No matches found"},formatAjaxError:function(){return"Loading failed"},formatInputTooShort:function(a,b){var c=b-a.length;return"Please enter "+c+" or more character"+(1==c?"":"s")},formatInputTooLong:function(a,b){var c=a.length-b;return"Please delete "+c+" character"+(1==c?"":"s")},formatSelectionTooBig:function(a){return"You can only select "+a+" item"+(1==a?"":"s")},formatLoadMore:function(){return"Loading more results\u2026"},formatSearching:function(){return"Searching\u2026"}},
    a.extend(a.fn.select2Custom.defaults,
    a.fn.select2Custom.locales.en),
    a.fn.select2Custom.ajaxDefaults={transport:a.ajax,params:{type:"GET",cache:!1,dataType:"json"}},
    window.Select2Custom={query:{ajax:G,local:H,tags:I},util:{debounce:w,markMatch:E,escapeMarkup:F,stripDiacritics:o},"class":{"abstract":c,single:d,multi:e}}}}(jQuery);
(function ($, w) {
  "use strict";

  function ensureNamespace(ns) {
    var target = w;
    ns.split('.').forEach(function (part) {
      var level = target[part] || {};
      target = target[part] = level;
    });
    return target;
  }

  var sw = ensureNamespace('similarweb');
  var cons = ensureNamespace('similarweb.console');

  function loadCallback(name) {
    var func = w[name];
    if (func && typeof func === 'function') {
      func();
    }
  }
    /**
     * todo
     * more logic for malignant url sanitization
     * @param {} url 
     * @returns {} 
     */
  function sanitize(url) {
      return url ? url.replace(/[@<>][\s\S]|(javascript:)*/ig, "") : "";
  }

  function t(key, data) {
    key = key && key.toLowerCase();
    // don't debug twice
    var debug = !!~document.cookie.indexOf('locale_debug=1') && sw.i18nKeys.__debug__ !== 'True';
    var s = sw.i18nKeys[key] || '';
    if (debug) {
      s = '[' + key + '] ' + s;
    }
    if (data && s && s.indexOf('%') > -1) {
      $.each(data, function (key, value) {
        var text = '';
        if (typeof value === 'function')
          text = value();
        if (typeof value === 'string')
          text = value;
        s = s.replace(new RegExp('%' + key + '%', 'g'), text);
      });
    }
    return s;
  }

  function fetchI18n(key, data) {
    return t(key, data);
  }

  // console wrapper
  var METHODS = ['log', 'debug', 'error', 'info', 'warn', 'dir', 'dirxml', 'table', 'trace', 'assert', 'count', 'markTimeline', 'profile', 'profileEnd', 'time', 'timeEnd', 'timeStamp', 'timeline', 'timelineEnd', 'group', 'groupCollapsed', 'groupEnd', 'clear'];
  var IGNORE_DEBUG = ['error', 'log'];

  // try window.console
  if (typeof window.console !== 'undefined') {
    var impl = window.console;
    for (var name in impl) {
      var func = impl[name];
      if (typeof func === 'function' && typeof func.apply === 'function') {
        // attach impl
        (function (name) {
          cons[name] = function () {
            if (sw.api.debug || IGNORE_DEBUG.indexOf(name) > -1) {
              impl[name].apply(impl, Array.prototype.slice.call(arguments));
            }
          }
        })(name);

      }
    }
  }

  // init empty stubs
  for (var i = 0; i < METHODS.length; i++) {
    var meth = METHODS[i];
    if (!(meth in cons)) {
      cons[meth] = function () {
      };
      // use log() if debug does not exist
      if (meth == 'debug' && sw.api.debug) {
        cons.debug = cons.log;
      }
    }
  }

  sw.ns = ensureNamespace;
  sw.cb = loadCallback;
  sw.i18n = fetchI18n;
  sw.sanitize = sanitize;

})(jQuery, window);

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function(searchString, position){
    return this.substr(position || 0, searchString.length) === searchString;
  };
}
(function ($, w) {
  var sw = w.similarweb;
  var swApi = sw.ns('similarweb.api');

  swApi.endpoints = {
    baseUrl: window.similarweb.api.apiBase,
    login: ["/sdk/login", "PUT"],
    register: ["/sdk/user", "PUT"],
    emailAvailability: ["/sdk/emailavailability", "PUT"],
    contactUs: ["/sdk/contactus", "POST", true],
    pricingRequest: ["/sdk/pricingrequest", "POST"],
    phoneRequest: ["/sdk/phonerequest", "POST"],
    phoneValidation: ["/sdk/phonevalidation", "POST"],
    consultationRequest: ["/sdk/consultationrequest", "POST"]
  };

  /**
   * turn object to form FormData
   * @param data
   * @returns {FormData}
   */
  function formData(data) {
    var fd = new FormData();
    $.each(data, function (key, value) {
      fd.append(key, value);
    });
    return fd;
  }

  /**
   * Invoke an API endpoint
   * @param ep endpoint name
   * @param data
   * @param success callback
   * @param error callback
   */
  function invokeEndpoint(ep, data, success, error) {
    var endpoint = swApi.endpoints[ep];

    if (endpoint[2] === true && window.FormData) {
      sendFormData(endpoint, data, success, error);
    } else {
      sendJson(endpoint, data, success, error);
    }
  }

  /**
   * Submit the data using FormData
   * https://developer.mozilla.org/en-US/docs/Web/API/FormData
   * https://xhr.spec.whatwg.org/#interface-formdata
   * @param endpoint object
   * @param data
   * @param success callback
   * @param error callback
   */
  function sendFormData(endpoint, data, success, error) {
    var settings = {
      url: swApi.endpoints.baseUrl + endpoint[0],
      type: endpoint[1],
      data: formData(data),
      contentType: false,
      processData: false,
      success: success,
      error: error
    };
    $.ajax(settings);
  }

  /**
   * Submit the data as JSON object
   * @param endpoint object
   * @param data
   * @param success callback
   * @param error callback
   */
  function sendJson(endpoint, data, success, error) {
    var settings = {
      url: swApi.endpoints.baseUrl + endpoint[0],
      dataType: 'json',
      type: endpoint[1],
      headers: { 'X-Requested-With': 'XMLHttpRequest' },
      contentType: 'application/json',
      success: success,
      error: error,
      xhrFields: {
        withCredentials: true
      }
    };
    if (data) {
      settings.data = JSON.stringify(data);
    }
    $.ajax(settings);
  }

  /**
   * parse error from JSON { "Message": "abcd" }
   * @param jqXHR
   * @returns {Document.Message}
   */
  function getErrorMsg(jqXHR) {
    return (jqXHR.responseJSON && jqXHR.responseJSON.Message) ? jqXHR.responseJSON.Message : '';
  }

  swApi.login = function (options, callback) {
    invokeEndpoint(
      "login",
      {
        userName: options.email,
        password: options.password,
        remember: options.remember,
        munchkinLeadSource: options.munchkinLeadSource,
        captchaAnswer: options.captcha,
        browserId: options.browserId
      },
      function success(data, textStatus, jqXHR) {
        callback(jqXHR.status, data);
      },
      function error(jqXHR, textStatus, errorThrown) {
        callback(jqXHR.status, getErrorMsg(jqXHR));
      }
    );
  };

  swApi.register = function (userObj, callback) {
    invokeEndpoint(
      "register",
      userObj,
      function success(data, textStatus, jqXHR) {
        callback(jqXHR.status, data);
      },
      function error(jqXHR, textStatus, errorThrown) {
        callback(jqXHR.status, getErrorMsg(jqXHR));
      }
    );
  };

  swApi.contactUs = function (data, callback) {
    invokeEndpoint(
      "contactUs",
      data,
      function success(data, textStatus, jqXHR) {
        callback(jqXHR.status, data);
      },
      function error(jqXHR, textStatus, errorThrown) {
        callback(jqXHR.status, getErrorMsg(jqXHR));
      }
    );
  };
  swApi.pricingRequest = function (data, callback) {
    invokeEndpoint(
        "pricingRequest",
        data,
        function success(data, textStatus, jqXHR) {
          callback(jqXHR.status, data);
        },
        function error(jqXHR, textStatus, errorThrown) {
          callback(jqXHR.status, getErrorMsg(jqXHR));
        }
    );
  };

  swApi.phoneRequest = function (data, callback) {
    invokeEndpoint(
        "phoneRequest",
        data,
        function success(data, textStatus, jqXHR) {
          callback(jqXHR.status, data);
        },
        function error(jqXHR, textStatus, errorThrown) {
          callback(jqXHR.status, getErrorMsg(jqXHR));
        }
    );
  };

  swApi.phoneValidation = function (phoneNumber, callback) {
    invokeEndpoint(
      "phoneValidation",
      { phoneNumber: phoneNumber },
      function success(data, textStatus, jqXHR) {
        if (jqXHR.status == 204) {
          callback(200, true);
        } else {
          callback(jqXHR.status, jqXHR.responseJSON);
        }
      },
      function error(jqXHR, textStatus, errorThrown) {
        if (jqXHR.status == 400) {
          callback(200, false);
        } else {
          callback(jqXHR.status, getErrorMsg(jqXHR));
        }
      }
    );
  };

  swApi.consultationRequest = function (data, callback) {
    invokeEndpoint(
      "consultationRequest",
      data,
      function success(data, textStatus, jqXHR) {
        callback(jqXHR.status, data);
      },
      function error(jqXHR, textStatus, errorThrown) {
        callback(jqXHR.status, getErrorMsg(jqXHR));
      }
    );
  };

  swApi.checkEmailAvailability = function (email, callback) {
    invokeEndpoint(
      "emailAvailability",
      { email: email },
      function success(data, textStatus, jqXHR) {
        if (jqXHR.status == 204) {
          callback(200, true);
        } else {
          callback(jqXHR.status, jqXHR.responseJSON);
        }
      },
      function error(jqXHR, textStatus, errorThrown) {
        if (jqXHR.status == 400) {
          callback(200, false);
        } else {
          callback(jqXHR.status, getErrorMsg(jqXHR));
        }
      }
    );
  };

  // call load cb
  sw.cb('swApiLoadDone');

})(jQuery, window);
(function ($, w) {

  var getTransitionEndEvent = function () {
    var aDivStyle = document.createElement('div').style;
    if ('transition' in aDivStyle)
      return 'transitionend';
    if ('webkitTransition' in aDivStyle)
      return 'webkitTransitionEnd';

    return null;
  };

  var transitionEndEvent = getTransitionEndEvent();

  // fix $.controller() which clashes with angular $.controller()
  // https://code.angularjs.org/1.3.8/docs/api/ng/function/angular.element


  //used to determine if a controller instance is one of controllers
  //controllers can be strings or classes
  var i, isAControllerOf = function (instance, controllers) {
    for (i = 0; i < controllers.length; i++) {
      if (typeof controllers[i] == 'string' ? instance.constructor._shortName == controllers[i] : instance instanceof controllers[i]) {
        return true;
      }
    }
    return false;
  };

  $.fn.extend({
    /**
     * @function jmxControllers
     * Gets all controllers in the jQuery element.
     * @return {Array} an array of controller instances.
     */
    jmxControllers: function () {
      var controllerNames = $.makeArray(arguments),
        instances = [],
        controllers, c, cname;
      //check if arguments
      this.each(function () {
        controllers = $.data(this, "controllers");
        for (cname in controllers) {
          if (controllers.hasOwnProperty(cname)) {
            c = controllers[cname];
            if (!controllerNames.length || isAControllerOf(c, controllerNames)) {
              instances.push(c);
            }
          }
        }
      });
      return instances;
    },
    /**
     * @function jmxController
     * Gets a controller in the jQuery element.  With no arguments, returns the first one found.
     * @param {Object} controller (optional) if exists, the first controller instance with this class type will be returned.
     * @return {jQuery.Controller} the first controller.
     */
    jmxController: function (controller) {
      return this.jmxControllers.apply(this, arguments)[0];
    }
  });

  $.Controller.extend("SWSDKController", {},
    {
      appendTemplate: function appendTemplate(templateId, data, containerElement) {
        var containerElement = containerElement || this.element;

        // save jQuery ref
        var other;
        if (window.jQuery !== $) {
          other = window.jQuery;
          window.jQuery = $
        }
        // htmlFromView res = $.View(templateId, data);
        // use jqueryMX helpers to append
        containerElement.append(templateId, data);

        // return ref
        if (other)
          window.jQuery = other;
      },

      /**
       * this is different than bootstrap/js/transition.js (based on blog.alexmaccaw.com/css-transitions)
       * which triggers the fallback after the duration expires- this solution assumes that if transition is supported, it will be triggered.
       * that's because if the transition is not to be triggered, no use in waiting the original transition duration...
       * @param elem
       * @param cb
       */
      onTransitionEnd: function (cb) {
        if (transitionEndEvent) {
          this.element.one(transitionEndEvent, function () {
            cb();
          })
        } else {
          setTimeout(function () {
            cb();
          }, 50);
        }
      }
    });
})(jQuery, window);
(function ($, w) {
  var MAX_SIZE_MB = 10;
  var MAX_FILES_AMOUNT = 10;
  /**
   * SWInput
   */
  SWSDKController('SWInput', {
    defaults: {
      id: '',
      config: {},
      type: 'text',
      optional: false,
      pattern: null
    }
  }, {
    init: function (rawEl, rawOptions) {
      this.options.type = this.options.config.type;
      this.options.pattern = this.options.config.pattern;
      this.options.$elemToMatchWith = this.options.config.$elemToMatchWith;
      this.options.checkAfterInput = this.options.config.checkAfterInput;

      switch (this.options.type) {
        case 'text':
          this.input = this.find('input');
          break;
        case 'textarea':
          this.input = this.find('textarea');
          break;
        case 'file':
          this.input = this.find('input[type="file"]');
          break;
        case 'select':
        case 'countryCode':
          this.input = this.find('select');
          if ($(window).width() > 780) {
            this.input.select2Custom({
              dropdownCssClass: 'select2-sw-form-dropdown',
              minimumResultsForSearch: 16,
              placeholder: similarweb.i18n('Register.Select'),
              matcher: function(search, value) {
                  if (value && value.toLowerCase().startsWith(search.toLowerCase())) {
                      return value;
                  }
                  return null;
              }
            });
          }
          break;
        case 'checkbox':
          this.input = this.find('input');
          break;
        case 'hidden':
          this.input = this.find('input');
          break;
      }
      this.options.ownErrorMessage = this.input.data('ownerror');
    },
    'label click': function (elem, evt) {
      switch (this.options.type) {
        case 'checkbox':
          this.input.click();
          break;
        default:
          this.input.focus();
          break;
      }
    },
    getValue: function () {
      switch (this.options.type) {
        case 'checkbox':
          return this.input.is(':checked');
          break;
        case 'file':
          return this.input[0].files;
          break;
        case 'select':
          var value = this.input.val();
          if (value) {
            var valueObj = this.options.config.values.filter(function (item) {
              return item.id == value
            });
            return valueObj[0];
          }
          return null;
        case 'countryCode':
          var optionValue = this.input.val();
          return optionValue ? optionValue.trim() : null;
        default:
          return this.input.val().trim();
          break;
      }
    },
    getCountryIso2: function () {
      var optionCode = this.input.find('option:selected').data('code');
      return optionCode ? optionCode.trim() : null;
    },
    setValue: function (value) {
      switch (this.options.type) {
        case 'select':
          this.input.find('option').filter(function () { return $(this).text() == value || $(this).val() == value; }).prop('selected',true);
          this.input.trigger('change');
          break;
        default:
          this.input.val(value);
      }
    },

    getErrors: function () {
      var errors = [];
      var val = this.getValue();
      var opt = this.options;
      if (!opt.optional && !this.hasValue()) {
        return errors;
      }

      if (opt.pattern instanceof RegExp) {
        if (!opt.pattern.test(val)) {
          errors.push({ type: 'pattern' }); // The value does not match the pattern
        }
      }
      if (opt.type == 'file' && val) {
        if (!this._checkFileType(val)) {
          errors.push({ type: 'fileType' }); // File type is not allowed
        }
        if (!this._checkFileSize(val)) {
          errors.push({ type: 'fileSize' }); // File size limit exceeded
        }
      }
      return errors;
    },

    _checkValid: function () {
      var val = this.getValue();
      var opt = this.options;

      if (!opt.optional && !this.hasValue()) {
        return false;
      }
      if (opt.$elemToMatchWith) {
        return (val === opt.$elemToMatchWith.val());
      }
      if (opt.pattern instanceof RegExp)
        return opt.pattern.test(val);

      if (opt.type == 'file' && val) {
        return this._checkFileSize(val) && this._checkFileType(val);
      }
      return true;
    },

    _checkFileType: function (files) {
      if (!files)
        return true;

      var typeValid = true;
      for (var i = 0; i < files.length; i++) {
        var file = files[i];
        typeValid = typeValid && (file.type.search('image/') == 0 || file.name.search('\.doc$|\.docx$|\.pdf$|\.txt$') > 0);
      }
      return typeValid;
    },
    _checkFileSize: function (files) {
      if (!files)
        return true;
      var aggregateSize = 0;
      var sizeValid = true;
      for (var i = 0; i < files.length; i++) {
        var file = files[i];
        aggregateSize += file.size;
      }
      sizeValid = (aggregateSize / 1024 / 1024) < MAX_SIZE_MB && files.length < MAX_FILES_AMOUNT;
      return sizeValid;
    },
    hasValue: function () {
      var val = this.getValue();
      return !(val == null || val === '' || val.id === 0 || val.length === 0);
    },
    isValid: function () {
      if (typeof this._valid === 'undefined' || this.options.checkAfterInput) {
        this._valid = this._checkValid();
      }
      return this._valid;
    },
    setValid: function (valid) {
      this._valid = valid;
    },
    setValidationType: function (type) {
      this._validationType = type;
    },
    ownErrorMessage: function () {
      if (this._validationType) {
        return this._validationType;
      } else if (this.options.ownErrorMessage) {
          return this.options.ownErrorMessage;
      } else {
        return false;
      }
    },
    /**
     * show an error on input field
     * @param msg string shows error: (customTooltip or default text), empty hides it
     */
    showError: function (msg) {
      var show = !!msg;
      var showCustomTooltip = msg === 'showCustomTooltip';
      var errorElem = this.find('.sw-form-input-error');
      var $tooltipIcon = this.find('.sw-popup-tooltipIcon[data-sw-sdk-tooltip]');
      errorElem.toggle(show && !showCustomTooltip);
      this.element.toggleClass('sw-form-input--error', show);
      // show custom tooltip
      if (show && showCustomTooltip) {
          this.element.removeClass('hide-custom-tooltip');
          $tooltipIcon.addClass('is-error').trigger('swForm:openTooltip');
          errorElem.hide();
      } else if (show) {
          this.element.addClass('hide-custom-tooltip');
          // show default tooltip
          errorElem.bsTooltip({ title: msg });
          if (this.options.id === 'phone') {
            errorElem.bsTooltip('show');
            setTimeout(errorElem.bsTooltip.bind(errorElem, 'hide'), 4000);
          }
      } else {
        this.element.removeClass('hide-custom-tooltip').removeClass('sw-form-input--error');
        $tooltipIcon.removeClass('is-error');
        errorElem.bsTooltip('destroy');
      }
    },
    clear: function () {
      this.showError('');
      if(this.options && this.options.config && this.options.config.keepValueOnClose) return;
      this.setValue('');
    },
    change: function () {
      var val = this.getValue();
      if (val == this.oldVal) {
        return;
      }
      // update valid state
      this._valid = this._checkValid();

      // trigger change
      this.element.trigger('sw.form.input.value', { id: this.options.id, value: val });
      this.oldVal = val;
    }
  });
})(jQuery, window);
(function ($, w) {
  var sw = window.similarweb;
  var swUi = sw.ui;
  var swConsole = sw.console;

  /**
   * SWForm
   */
  SWSDKController('SWForm', {
    defaults: {
      id: '',
      inputs: [],
      trackerName: '',
      mobileMode: false,
      fieldConfig: {},
      action: $.noop
    }
  }, {
    init: function (rawEl, rawOptions) {
      var that = this;
      // initialize input fields
      this.elements = {};
      this.inputsById = {};
      this.$container = this.element.closest('.sw-popup-container');

      this.options.inputs.forEach(function (item) {
        var fieldConfig = that.options.fieldConfig[item.id];
        if (fieldConfig.fieldToMatchWith) {
          fieldConfig.$elemToMatchWith = that.find('[name=' + fieldConfig.fieldToMatchWith + ']');
          fieldConfig.checkAfterInput = true;
        } else {
          fieldConfig.$elemToMatchWith = null;
        }
        // connect new input
        var fieldEl = that.find('#sw-form-input-container-' + item.id);
        var inputElem = fieldEl.sw_input({
          id: item.id,
          config: fieldConfig,
          optional: item.optional
        });
        that.elements[item.id] = inputElem;
        that.inputsById[item.id] = item;
      });

      if (this.options.captcha)
        this.showCaptcha();
    },
    /**
     *
     * @param values {object} initial values
     */
    initValues: function (values) {
      var that = this;
      values = values || {};
      $.each(values, function (key, value) {
        var element = that.elements[key];
        if (!element) {
          swConsole.warn("swForm [%s]: Cannot init value for control: %s", that.options.id, key);
          return;
        }
        var ctrl = element.jmxController();
        ctrl.setValue(value);
      });
    },
    showCaptcha: function () {
      var that = this;

      this.find('#sw-form-input-container-captcha').show();
      function doCaptcha() {
        var elem = that.find('.sw-form-captcha');
        if (elem.length) {
          that.captchaid = grecaptcha.render(elem[0], { sitekey: swUi.captchaKey });
        }
      }

      if (window.grecaptcha && window.grecaptcha.render) {
        doCaptcha();
      } else {
        window.onCaptchaload = function () {
          doCaptcha();
        }
      }
    },
    resetCaptcha: function () {
      if (window.grecaptcha && window.grecaptcha.reset) {
        grecaptcha.reset(this.captchaid);
      }
    },
    showError: function (msg) {
      var $elem = this.$container.find('.sw-form-error');
      if (!msg) {
        $elem.hide();
      } else {
        $elem.text(msg).show();
      }
      this.element.trigger('swForm:errorStateChange');
    },
    showLoading: function (loading) {
      this.inProgress = loading;
      this.$container.find('.line-loader').toggle(loading);
      this.$container.find('.sw-form-submit').toggleClass('sw-form-submit--loading', loading);

      if (loading)
        this.$container.find('.sw-popup-glass-pane').show();
      else
        this.$container.find('.sw-popup-glass-pane').hide();

    },

    clear: function () {
      this.showError('');

      $.each(this.elements, function (name, elem) {
        var controller = elem.jmxController();
        controller.clear();
      });
    },
    'sw.form.input.value': function (elem, evt, details) {
      // swConsole.debug('SWForm: value of field "%s" changed to: %s', details.id, details.value);
      var inputCtrl = $(evt.target).jmxController(),
          o = this.options,
          elements = this.elements,
          trackerSubName = '';
          // if popup has two forms - we need specify current one
          if (o.trackerSubName ) {
            trackerSubName = '/' + o.trackerSubName
          }

          var trackerName = o.trackerName + trackerSubName + '/' + details.id;

      if (inputCtrl.isValid()) {
        // check if email exists or phone is valid
        var inputItem = this.inputsById[details.id];
        // async field.validate()
        if (inputItem.validate) {
          var value = details.value;

          var prefixFieldName = o.fieldConfig[details.id].prefixField;
          if (prefixFieldName && this.elements[prefixFieldName]) {
              var prefixValue = this.elements[prefixFieldName].jmxController().getValue();
            value = (prefixFieldName==="countryCode"? prefixValue.slice(2) : prefixValue) + value;
          }

          var parentFieldName = o.fieldConfig[details.id].parentField;
          var parentField = parentFieldName ? this.elements[parentFieldName].jmxController() : null;
          if (parentField) {
              value = value + parentField.getValue();
          }
            
          inputItem.validate(value, function (result) {
              if (parentField) {
                  if (parentField.getValue()) {
                      setValidationResult(parentField, result);
                  }
              } else {
                  setValidationResult(inputCtrl, result);
              }
          });
        }
        if (inputCtrl.hasValue() && this.isShown)
          o.tracker.event({ action: 'value-ok', name: trackerName });
        inputCtrl.showError('');
      } else {
        var fieldError = this._getFieldError(details.id);
        o.tracker.event({ action: 'value-error', name: trackerName });
        inputCtrl.showError(fieldError);
      }

        function setValidationResult(ctrl, validationResult) {
            if (typeof validationResult === 'string') {
                ctrl.showError(validationResult);
                ctrl.setValid(false);
                ctrl.setValidationType(validationResult === 'showCustomTooltip' ? 'showCustomTooltip' : '');
            } else {
                ctrl.showError('');
                ctrl.setValid(true);
                ctrl.setValidationType('');
            }
        }
    },

    show: function (initValues) {
      this.showLoading(false);
      this.showError('');
      this.isShown = true;
      this.initValues(initValues);
    },
    
    validate: function () {
      var that = this;
      var o = this.options;
      // captcha
      if (o.captcha) {
        var captchaRes = grecaptcha.getResponse(this.captchaid);
        if (!captchaRes) {
          this.errors.push({
            field: 'captcha',
            error: sw.i18n("Login.BadCaptcha")
          });
        } else {
          this.values.captcha = captchaRes;
        }
      } else {
        this.values.captcha = '';
      }
      this.noMainMessage = true; //Not to show main message if all wrong inputs have their own message

      $.each(this.elements, function (name, elem) {
        var controller = elem.jmxController();
        var valid = controller.isValid();
        var value = controller.getValue();
        
        //remove iso2 name from country code        
        that.values[name] = name==="countryCode"? value.slice(2) : value;

        //  swConsole.debug('%s.getValue(): %s [%s]', name, value, valid);
        if (!valid) {
          var errorInfo = ($.isFunction(controller.getErrors) && controller.getErrors()) || [];
          var fieldError = that._getFieldError(name, errorInfo.length ? errorInfo[0].type : null);
          controller.showError(fieldError);

          if (!controller.ownErrorMessage()) {
            that.noMainMessage = false;
          }
          that.errors.push({
            field: name,
            error: fieldError,
            ownError: controller.ownErrorMessage()
          });
        } else {
          controller.showError('');
        }
      });

      that._addCountryCode();
    },

    _addCountryCode: function() {
      if (this.elements.countryCode){
        var phone = this.values.phone;
        var controller = this.elements.countryCode.jmxController();
        var countryIso2 = controller.getCountryIso2();
        this.values.country = countryIso2;
        if (phone && phone.indexOf(this.values.countryCode) === -1) {
          this.values.phone = this.values.countryCode + this.values.phone;
        }
      }
    },

    _fieldNameToText: function (str) {
      // utility function to display field name nicely
      return str ? $.trim(str.replace(/([A-Z]+)/g, " $1").replace(/([A-Z][a-z][0-9])/g, " $1").replace(/\b\w+/g, function (s) {
        return s.charAt(0).toUpperCase() + s.substr(1).toLowerCase();
      })) : '';
    },
    _getFieldError: function (name, errorType) {
      var str;
      var key;
      if (errorType) {
        key = 'Register.Field.' + name + '.error.' + errorType; // error-type specific key
        str = sw.i18n(key);
      }
      if (str === undefined) {
        key = 'Register.Field.' + name + '.error';
        str = sw.i18n(key);
      }
      if (str === undefined) {
        str = ((errorType ? sw.i18n("Register.FieldError." + errorType) : false) || sw.i18n("Register.FieldError")).replace('%field%', this._fieldNameToText(name));
      }
      return str;
    },

    submit: function () {
      try {
        if (this.inProgress)
          return false;

        var that = this;
        this.errors = [];
        this.values = {};
        var o = this.options,
            trackerName = o.trackerName;

        // if popup has two forms - we need specify current one
        if ( o.withSelect && o.trackerSubName ) {
          trackerName += '/' + o.trackerSubName;
        }

        this.validate();

        if (this.errors.length) {
          o.tracker.event({ action: 'submit-error-client', name: trackerName });
          if (!this.noMainMessage) {
             this.showError(that.errors[0].error || sw.i18n('Register.FormError'));
           } else {
             this.showError('');
           }
           $.each(this.errors, function(index, error) {
           if (error.ownError) {
               var controller = that.elements[error.field].jmxController();
               controller.showError(error.ownError);
             }
           });
          swConsole.debug('form client validation failed: %O', this.errors);
        } else {
          this.showError('');
          swConsole.debug('form client validation passed');
          // run action
          this.showLoading(true);


          o.action(this.values, function (res, code, noErrorMessage) {
            if (code != 200 && code != 429) {
              that.showLoading(false);
              o.tracker.event({ action: 'submit-error-server', name: trackerName });
              that.showError(res);
              if (code == 403) {
                if (!o.captcha) {
                  //need captcha
                  o.captcha = true;
                  that.showCaptcha();
                } else {
                  that.resetCaptcha();
                }
              } else if (code == 401) {
                // bad password with captcha
                if (o.captcha) {
                  that.resetCaptcha();
                }
              }
            } else if (code == 429) {
              that.showError();
              that.showLoading(true);
            } else {
              o.tracker.event({ action: 'submit-ok', name: trackerName });
              that.showError();
            }
          });
        }
      } catch (e) {
        this.showLoading(false);
        this.showError('An Error has occurred');
        swConsole.error('Error submitting form: ', e.stack || e.message);
      } finally {
        return false;
      }
    }
  });
})(jQuery, window);
(function ($, w) {
  var sw = w.similarweb;
  var swUi = sw.ns('similarweb.ui');
  var swApi = sw.ns('similarweb.api');
  var swConsole = sw.console;

  /**
   * SWThankyouPopup
   */
  SWSDKController('SWThankyouPopup', {
    defaults: {
      isInlineForm: false
    }
  }, {
    init: function () {
      this.$glassPane = $('.sw-glass-pane');
      this.open();
    },

    open: function () {
      // close all other thankU popups
      $('.sw-popup-thankyou.opened').sw_thankyou_popup('close', true);

      this.opened = true;
      var that = this;

      // show glass-pane for abso lute popup
      if( !this.options.isInlineForm ) {
        this.$glassPane.show();
        $('body').addClass('sw-popup-opened');

        // open the popup with transition
        this.element.show();

        // show animation
        setTimeout(function () {
          that.element.addClass('opened');
        }, 10);
      } else {
        this.element.show();

      }
    },

    '.js-popup-close click': function (elem, event) {
      this.close();
    },

    '.js-popup-confirm click': function (elem, event) {
      this.confirm();
    },

    close: function (options) {
      var defaultOptions = {
        runCallback: true
      };
      this.opened = false;
      var that = this;
      options = $.extend(defaultOptions, options);
      $('.js-wrapperBody').removeClass('sw-glass-pane-blur');
      $('body').removeClass('sw-popup-opened');
      this.$glassPane.hide();
      that.element.remove();
      if (options.runCallback) {
        this.options.closeCallback && this.options.closeCallback(this.options.tracker);
      }
    },

    confirm: function () {
      this.close({runCallback: false});
      this.options.confirmCallback && this.options.confirmCallback(this.options.tracker, this.options.email);
    }
  });
})
(jQuery, window);
(function ($, w) {
  var sw = w.similarweb;
  var swUi = sw.ui;
  var swConsole = sw.console;

  /**
   * SWTooltip
   */
  SWSDKController('SWTooltip', {
    defaults: {}
  },
  {
    init: function (rawEl, rawOptions) {
      var that = this;
      that.customTooltipTimer = $.noop();

      // error event
      $('[data-sw-sdk-tooltip]')
        .off('swForm:openTooltip')
        .on('swForm:openTooltip', function(e) {
          that.toggleTooltip($(e.currentTarget), true, 3000);
        }).on('swForm:hideTooltips', function () {
        that.toggleTooltip($('.sw-popup-tooltipBody'), false, 0);
      });

      // hover event
      $('body')
        .off('mouseover.swsdktooltip')
        .off('mouseleave.swsdktooltip')
        .on('mouseover.swsdktooltip', '[data-sw-sdk-tooltip]', function (e) {
          that.toggleTooltip($(e.currentTarget), true);
        }).on('mouseleave.swsdktooltip', '[data-sw-sdk-tooltip]', function (e) {
        that.toggleTooltip($(e.currentTarget), false, 300);
      });
    },
    /**
     * show custom tooltip
     */
    toggleTooltip: function ($elem, show, delayTime) {
      var $tooltip = $elem.parent().find('.sw-popup-tooltipBody');
      var isSpaceNotEnough = this.checkFreeSpace($elem, $tooltip);

      if (isSpaceNotEnough) {
        $tooltip.addClass('is-right');
      } else {
        $tooltip.removeClass('is-right');
      }

      clearTimeout(this.customTooltipTimer);

      // show tooltip
      if (show) {
        $tooltip.closest('.sw-form-input').addClass('with-tooltip');
        $tooltip.stop(true, false).fadeIn();
      }
      // hide with delay
      if (typeof delayTime !== 'undefined' && delayTime >= 0) {
        this.customTooltipTimer = setTimeout(function () {
          $tooltip.closest('.sw-form-input').removeClass('with-tooltip');
          $tooltip.stop(true, false).fadeOut(50);
        }, delayTime);
      }
    },
    /**
     * Check available space on the right of the "i" button
     */
    checkFreeSpace: function($owner, $tooltip) {
      var windowWidth = $(w).width();
      var ownerWidth = $owner.outerWidth();
      var ownerLeft = $owner.offset().left - $(w).scrollLeft();
      var ownerRight = ownerLeft + ownerWidth;
      var tooltipContent = w.matchMedia("(min-width: 1201px)").matches
        ? '.sw-popup-tooltipDesktop'
        : '.sw-popup-tooltipMobile';
      var tooltipWidth = $tooltip.find(tooltipContent).outerWidth();

      return (windowWidth - ownerRight) < tooltipWidth;
    }
  });
})(jQuery, window);
(function ($, w) {
  var sw = w.similarweb;
  var swUi = sw.ns('similarweb.ui');
  var swApi = sw.ns('similarweb.api');

  /**
   * SWPopup
   */
  SWSDKController('SWPopup', {
    defaults: {
      withSelect: false,
      initState: 'login'
    }
  }, {
    init: function (rawEl, rawOptions) {
      var o = this.options;
      var that = this;
      this.selector = this.find('.sw-selector-container');
      this.$items = this.find('.sw-popup-selector-content');
      this.$content = this.find('.sw-popup-content');
      this.$shownPanel = null;
      this.formControllers = {};
      this.$glassPane = $('.sw-glass-pane');

      /*
       //close on glass-pane click
       this.$glassPane.click(function () {
       that.close();
       });
       */

      // init forms
      $.each(o.forms, function (key, form) {
        form.tracker = o.tracker;
        if (o.initState === 'pricing') {
          form.trackerName = o.trackerName;
        }

        // set 'mobileMode'
        form.mobileMode = $(window).width() < 1024;

        // we don't need all forms, only available in popup
        // so for register we don't add login form, if we don't have select option
        if (that.find('#' + form.id).size()) {
          var ctrl = that.find('#' + form.id).sw_form(form).jmxController();
          that.formControllers[key] = ctrl;
        }

        // init tooltip trigger
        if (form.initCustomTooltip) {
          that.find('#' + form.id).sw_tooltip(form).jmxController();
        }

        // init manual submit
        that.initManualSubmut(form.id);
      });

      // init selector ctrl
      if (o.withSelect) {
        var options = {
          changeEvent: 'sw.switch.change',
          tracker: o.tracker,
          trackerCategory: o.trackerCategory,
          trackerName: o.trackerName
        };
        this.selector.on(options.changeEvent, function (event, item) {
          // prevent re-entry
          if (that.isChanging) {
            event.preventDefault();
            return;
          }
          that.changeItem(item);
        });
        this.selectorCtrl = this.selector.sw_selector(options).jmxController();
      }

    },
    "{window} resize": function () {
      var mobileMode = $(window).width() < 1024;
      $.each(this.formControllers, function (key, ctrl) {
        ctrl.options.mobileMode = mobileMode;
      });
    },
    ".js-popup-close click": function (elem, event) {
      // tracking
      this._callTracking('close');
      this.close();
    },
    ".js-popup-redirect click": function (elem, event) {
      var redirectUrl;
      // tracking (close ? )
      this._callTracking('close');
      if (this.options.doNotRedirect) {
        this.options.callback();
      } else {
        // redirect to pro
        redirectUrl = this.element.find('.js-sw-input[name=redirecturl]').val();
        if (redirectUrl) {
            redirectUrl = sw.sanitize(redirectUrl); //sanitization
            window.location = redirectUrl;
        } else {
          this.close();
        }
      }
    },
    /**
     * clear values
     * @private
     */
    _clear: function () {
      $.each(this.formControllers, function (key, ctrl) {
        ctrl.clear();
      });
      this.$shownPanel = null;
    },

    initManualSubmut: function(formId) {
      var $manualSubmitLinks = this.find('#' + formId).find('[data-sw-sdk-manual-submit]');
      if ($manualSubmitLinks.size()) {
        $manualSubmitLinks.on('click', function () {
          var $elem = $(this);
          var formName = $elem.data('sw-sdk-manual-submit');
          var trackingCategory = $elem.data('analytics-category') || '';
          var trackingLabel = $elem.data('analytics-label') || '';
          $(this).closest('.sw-popup-content').find('form[name=' + formName + ']').submit();
          this.options.tracker.event({ category: trackingCategory, action: 'click', name: trackingLabel });
          return false;
        });
      }
    },
    /**
     * change form
     * @param item
     */
    changeItem: function (item) {
      // prevent re-entry and click on same link
      if (this.isChanging)
        return;

      var from, to, toForm;
      var that = this;
      this.isChanging = true;

      // find form
      var formContainer = this.find('.sw-popup-selector-content--' + item);
      var formCtrl = this.formControllers[item];

      // prepare
      from = this.$shownPanel;
      to = formContainer;
      toForm = formCtrl;

      this.$shownPanel = to;
      this.shownPanelName = item.charAt(0).toUpperCase() + item.slice(1);

      // switch
      if (from) {
        from.hide(0);
        to.fadeIn(function () {
          that.isChanging = false;
          // init values
          toForm.show(that.options.initValues);
        });
      } else {
        this.isChanging = false;
        // hide the rest
        this.find('.sw-popup-selector-content').hide();
        to.show();
        toForm.show(that.options.initValues);
      }

    },
    /**
     * change the selected form
     * @param state
     */
    doSelect: function (state) {
      if (this.selectorCtrl)
        this.selectorCtrl.select(state);
      else
        this.changeItem(state);
    },
    /**
     * select the initial state
     */
    doInitSelect: function () {
      this.doSelect(this.options.initState)
    },
    /**
     * open the popup
     */
    open: function () {
      var that = this;

      // overflow for body
      this.$glassPane.scrollTop(0).show();
      $('body, html').addClass('sw-popup-opened');

      // open the popup with transition
      this.element.show();
      this.doInitSelect();

      // tracking
      this._callTracking('open');

      setTimeout(function () {
        that.element.addClass('opened');
      }, 10);
    },
    /**
     * close the popup
     */
    close: function (keepGlassPane) {
      $('body, html').removeClass('sw-popup-opened');
      if (!keepGlassPane)
        this.$glassPane.hide();
      this._clear();

      this.element.removeClass('opened').hide();
      this.options.closeCallback && this.options.closeCallback();
    },

    /**
     * generate and call tracking event
     */
    _callTracking: function( action ) {
      var currentForm = this.options.forms[this.options.initState],
          trackingValues = {
            category: currentForm.trackerCategory,
            // if we have subName - we should add it after Name
            name: currentForm.trackerName || ''
          };
      // if popup has two forms - we need specify current one
      if (currentForm.trackerSubName) {
        trackingValues.name += '/' + currentForm.trackerSubName
      }
      // call tracking
      this.options.tracker.event({ category: trackingValues.category, action: action, name: trackingValues.name });
    }
  });
})(jQuery, window);
(function ($, w) {
  var sw = w.similarweb;
  var swUi = sw.ns('similarweb.ui');
  var swApi = sw.ns('similarweb.api');

  /**
   * SWStaticForm
   */
  SWSDKController('SWStaticForm', {
    defaults: {
      withSelect: false,
      initState: 'login'
    }
  }, {
    init: function (rawEl, rawOptions) {
      var o = this.options;
      var that = this;
      this.selector = this.find('.sw-selector-container');
      this.$content = this.find('.sw-popup-content');
      this.$shownPanel = null;
      this.formControllers = {};

      // init forms
      $.each(o.forms, function (key, form) {
        form.tracker = o.tracker;
        if (o.initState === 'pricing') {
          form.trackerName = o.trackerName;
        }

        // we don't need all forms, only available in popup
        // so for register we don't add login form, if we don't have select option
        if (that.find('#' + form.id).size()) {
          var ctrl = that.find('#' + form.id).sw_form(form).jmxController();
          that.formControllers[key] = ctrl;
        }

        // init tooltip trigger
        if (form.initCustomTooltip) {
          that.find('#' + form.id).sw_tooltip(form).jmxController();
        }
      });

      // init selector ctrl
      if (o.withSelect) {
        var options = {
          changeEvent: 'sw.switch.change',
          tracker: o.tracker,
          trackerCategory: o.trackerCategory,
          trackerName: o.trackerName
        };
        this.selector.on(options.changeEvent, function (event, item) {
          // prevent re-entry
          if (that.isChanging) {
            event.preventDefault();
            return;
          }
          that.changeItem(item);
        });
        this.selectorCtrl = this.selector.sw_selector(options).jmxController();
      }
    },
    /**
     * change form
     * @param item
     */
    changeItem: function (item) {
      // prevent re-entry
      if (this.isChanging)
        return;

      var from, to, toForm;
      var that = this;
      this.isChanging = true;

      // find form
      var formContainer = this.find('.sw-popup-selector-content--' + item);
      var formCtrl = this.formControllers[item];

      // prepare
      from = this.$shownPanel;
      to = formContainer;
      toForm = formCtrl;

      this.$shownPanel = to;

      // switch
      if (from) {
        from.fadeOut();
        to.fadeIn(function () {
          that.isChanging = false;
          // init values
          toForm.show(that.options.initValues);
        });
      } else {
        this.isChanging = false;
        // hide the rest
        this.find('.sw-popup-selector-content').hide();
        to.show();
        toForm.show(that.options.initValues);
      }
    },
    /**
     * change the selected form
     * @param state
     */
    doSelect: function (state) {
      if (this.selectorCtrl)
        this.selectorCtrl.select(state);
      else
        this.changeItem(state);
    },
    /**
     * open the popup
     */
    insert: function () {
      var that = this;

      // open the popup with transition
      this.doSelect(this.options.initState);
      that.element.addClass('opened');
    }
  });
})(jQuery, window);
(function ($, w) {

  /**
   * SWSelector
   */
  SWSDKController('SWSelector', {
    defaults: {
      items: {},
      selectedClass: 'selected',
      changeEvent: 'sw.select'
    }
  }, {
    init: function (rawEl, rawOptions) {
      var o = this.options;
      // init .items
      this.find('.js-sw-selector').each(function () {
        var elem = $(this);
        var item = elem.data('item');
        o.items[item] = elem;
      });
    },
    '.js-sw-selector click': function (elem, evt) {
      var item = elem.data('item'),
          trackerItemName = item.charAt(0).toUpperCase() + item.slice(1),
          trackerData = { category: 'Capsule Button',  action: 'switch', name: trackerItemName };

      // if we have category for tracking
      if ( this.options.trackerCategory ) {
        trackerData.category = 'Capsule Button - ' + this.options.trackerCategory;
      }
      // if we have custom sourceName for tracking
      if ( this.options.trackerName ) {
        trackerData.name = this.options.trackerName + '/' + trackerItemName;
      }

      // tracking event ({ action, Name: {[sourceName/]ItemName} })
      this.options.tracker.event(trackerData);

      // toggle items
      this.select(item);
    },
    select: function (item) {
      var o = this.options;

      var evt = jQuery.Event(o.changeEvent);
      this.element.trigger(evt, item);
      // allow cancel
      if (evt.isDefaultPrevented())
        return;

      $.each(o.items, function (key, elem) {
        elem.toggleClass(o.selectedClass, item === key);
      });
    }
  });
})(jQuery, window);
(function ($, w) {
  var sw = w.similarweb;

  sw.callbacks = {
    showCancelSurvey: function (tracker, email) {
      tracker.event('Pop Up', 'click', 'Cancellation Survey/Touch');
      webengage.screen('Custom Data', {email: email});
      webengage.survey.onComplete(function (data) {
        var responses = _.reduce(data.questionResponses, function(acc, response) {
          switch (response.value['@class']) {
            case 'list':
              if (response.value && response.value.values.constructor === Array) {
                acc[response.questionText] = response.value.values.join(', ');
              }
              break;
            case 'text':
              if (response.value) {
                acc[response.questionText] = response.value.text;
              }
              break;
          }
          return acc;
        }, {});
        tracker.updateLeadLite({Survey_reason_for_cancelling__c: JSON.stringify(responses)});
      });
      webengage.survey.render({ surveyId : '~5g1cd82' });
    },
    dontShowCancelSurvey: function (tracker) {
      tracker.event('Pop Up', 'close', 'Cancellation Survey/Touch');
    }
  }
})(jQuery, window);
(function ($, w) {
    var sw = w.similarweb;
    var swUi = sw.ns('similarweb.ui');
    var swApi = sw.ns('similarweb.api');
    var swConsole = sw.console;
    var rootCtrl;
    var xssPattern = /^((?!(<script)|(<iframe)|(@import)|(;base64)|(base64,)|(javascript:)).)*$/i;

    var fieldWidth = {
      // isHalf: 'isHalf', // todo: add later?
      isThird: 'isOneThird', // 1/3
      isTwoThirds: 'isTwoThirds'
    };

    /**
     * lazy loading to when document.body is available
     * @returns {*}
     */
    function getRoot() {
        var rootElement = document.getElementById('sw-sdk-container') || document.body;
        if (!rootCtrl)
            rootCtrl = SWSDKController.hookup(rootElement);
        return rootCtrl;
    }

    /**
     * field configurations
     * see: http://jira.similarnet.com/wiki/x/EoAx
     * http://jira.similarnet.com/wiki/x/C4Ax
     *
     */
    function fieldConfig() {
        var config = {
            // login
            email: {
                title: sw.i18n('Login.EmailWorkAddress'), type: 'text', maxlength: 60, inputType: 'email', pattern: /[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}/i /*, placeholder: 'email' */
            },

            password: { title: sw.i18n('Login.Password'), type: 'text', maxlength: 20, inputType: 'password', pattern: /.{6,}/ },
            passwordRetype: { title: sw.i18n('Login.PasswordRetype'), type: 'text', maxlength: 20, inputType: 'password', autocomplete: 'off', fieldToMatchWith: 'password' },
            remember: { title: sw.i18n('Login.RememberMe'), type: 'checkbox' },

            // register
            munchkinLeadSource: { title: "LeadSource", type: 'hidden' },

            // user details
            firstName: { title: sw.i18n('Register.FirstName'), type: 'text', maxlength: 140, isNarrow: true, pattern: xssPattern  },
            lastName: { title: sw.i18n('Register.LastName'), type: 'text', maxlength: 140, isNarrow: true, pattern: xssPattern },
            company: { title: sw.i18n('Register.CompanyName'), type: 'text', maxlength: 140, pattern: xssPattern },

            countryCode: {
              title: sw.i18n('Register.Phone'),
              type: 'countryCode',
              values: similarweb.countriesWithCode,
              customClass: fieldWidth.isThird,
              parentField: "phone",
              keepValueOnClose: true
            },
            phone: {
              type: 'text',
              maxlength: 40,
              inputType: 'tel',
              placeholder: sw.i18n('Register.phone.placeholder'),
              pattern: xssPattern,
              prefixField: 'countryCode',
              customClass: fieldWidth.isTwoThirds,
              title: '',
              titleIsHidden: true
            },

            qq: { title: sw.i18n('ContactUs.QQ'), type: 'text', maxlength: 140, isNarrow: true, pattern: xssPattern },
            wechat: { title: sw.i18n('ContactUs.WeChat'), type: 'text', maxlength: 140, isNarrow: true, pattern: xssPattern },

            // custom
            department: { title: sw.i18n('Register.Department'), type: 'text', maxlength: 140, isCustom: true },
            website: { title: sw.i18n('Register.Website'), type: 'text', maxlength: 140, isCustom: true },
            challenge: { title: sw.i18n('Register.Challenge'), type: 'text', maxlength: 140, isCustom: true },
            redirecturl: { title: sw.i18n('Register.RedirectUrl'), type: 'text', isCustom: true },
            comment: { title: sw.i18n('Register.Comment'), type: 'textarea', maxlength: 1000, isCustom: true },
            message: {
                title: sw.i18n('ContactUs.message'), type: 'textarea', maxlength: 1000, placeholder: sw.i18n('ContactUs.message.placeholder')
            },
            // optins
            demo_optin: { title: sw.i18n('Register.DemoOptin'), type: 'checkbox', isCustom: true },
            blog_optin: { title: sw.i18n('Register.BlogOptin'), type: 'checkbox', isCustom: true },
            news_optin: { title: sw.i18n('Register.NewsOptin'), type: 'checkbox', isCustom: true },
            update_optin: { title: sw.i18n('Register.UpdateOptin'), type: 'checkbox', isCustom: true },
            //pricing
            companyWebsite: { title: sw.i18n('ContactUs.CompanyWebsite'), type: 'text', maxlength: 140, pattern: xssPattern },
            // file
            attachment: { title: '', type: 'file' },

            // selects
            country: { title: sw.i18n('Register.Country'), type: 'text', values: similarweb.countries, isCustom: true },
            industry: {
                title: sw.i18n('ContactUs.Industry'),
                type: 'select',
                isCustom: true,
                values: [
                    { id: 'agency', name: 'Agency' },
                    { id: 'ads', name: 'Ad Tech / Ad Network' },
                    { id: 'automotive', name: 'Automotive & Transportation' },
                    { id: 'banking', name: 'Banking & insurance' },
                    { id: 'classifieds', name: 'Classifieds' },
                    { id: 'consulting_market', name: 'Consulting & Market Research' },
                    { id: 'cpg', name: 'CPG, Food & Beverages' },
                    { id: 'education', name: 'Education' },
                    { id: 'financial', name: 'Financial services' },
                    { id: 'gambling', name: 'Gambling / Gaming' },
                    { id: 'investors', name: 'Investors' },
                    { id: 'media', name: 'Media & Entertainment' },
                    { id: 'pharma', name: 'Pharma & Healthcare' },
                    { id: 'estate', name: 'Real Estate' },
                    { id: 'recruitment', name: 'Recruitment & Jobs' },
                    { id: 'retail', name: 'Retail/ ecommerce' },
                    { id: 'software', name: 'Software & Internet' },
                    { id: 'telecom', name: 'Telecom & Hardware' },
                    { id: 'travel', name: 'Travel & Hospitality' },
                    { id: 'other', name: 'Other' }
                ]
            },
            role: { title:  sw.i18n('Register.Role'),type: 'text', maxlength: 140, isCustom: true },
            budget: {
                title: sw.i18n('Register.Budget'), type: 'select', isCustom: true, values: [
                    { id: 1, name: '0-$1000', value: [0, 1e+3] },
                    { id: 2, name: '$1000-$10,000', value: [1e+3, 1e+4] },
                    { id: 3, name: '$10,000-100,000', value: [1e+4, 1e+5] },
                    { id: 4, name: '$100,000+ ', value: [1e+5, Number.MAX_VALUE] }
                ]
            },
            employees: {
                title: sw.i18n('Register.EmployeeCount'), type: 'select', isCustom: true, values: [
                    { id: 1, name: '1 - 10' },
                    { id: 2, name: '11 - 50' },
                    { id: 3, name: '51 - 200' },
                    { id: 4, name: '201 - 500' },
                    { id: 5, name: '501 - 1000' },
                    { id: 6, name: '1001 - 5000' },
                    { id: 7, name: '5001+' }
                ]
            },
            leadsource: {
                title: sw.i18n('Register.LeadSource'), type: 'select', isCustom: true, values: [
                    { id: 'email', name: 'Email' },
                    { id: 'google', name: 'Google' },
                    { id: 'friend', name: 'Friend' },
                    { id: 'article', name: 'Article' },
                    { id: 'other', name: 'Other' }
                ]
            },
            /**
             * enum:
             Sales = 1,
             Bug = 2,
             Feature = 3,
             Pro = 4,
             Mobile = 5,
             API = 6,
             Data = 7,
             Category = 8,
             Billing = 9,
             Support = 10,
             Recurly = 11,
             Suggestions = 12,
             Enterprise = 13,
             Other = 99
             */
            subject: {
                title: sw.i18n('ContactUs.subject.title'), type: 'select', values: [
                    //the code below is commented according to the task SIM-6070
                    //{id: 'billing', name: sw.i18n('ContactUs.subject2'), value: 9}, // billing@similargroup.desk-mail.com
                    //{id: 'data', name: sw.i18n('ContactUs.subject3'), value: 7}, // data@similargroup.desk-mail.com
                    //{id: 'bug', name: sw.i18n('ContactUs.subject4'), value: 2}, // bug@similargroup.desk-mail.com
                    //{id: 'suggestion', name: sw.i18n('ContactUs.subject5'), value: 12}, // suggestions@similargroup.desk-mail.com
                    //{id: 'ent', name: sw.i18n('ContactUs.subject7'), value: 13}, // other@similargroup.desk-mail.com
                    //{id: 'api', name: sw.i18n('ContactUs.subject8'), value: 6}, // api@similargroup.desk-mail.com
                    //{id: 'other', name: sw.i18n('ContactUs.subject6'), value: 99}, // ent@similarweb.com
                    { id: 'sales', name: sw.i18n('ContactUs.subject10'), value: 1 }, // sales@similarweb.zendesk.com
                    { id: 'support', name: sw.i18n('ContactUs.subject9'), value: 10 } // support@similarweb.zendesk.com
                ]
            }
        };
        return config;
    }

    /**
     * override final config values
     * @param config
     * @returns {*}
     */
    function overrides(config) {
        var overridesObj = swUi.overrides || {};
        if (overridesObj[config.id]) {
            config = $.extend(true, config, overridesObj[config.id]);
        }
        return config;
    }


    /**
     * builtin login form
     * @returns {{id: string, inputs: {id: string, optional: boolean}[], formTitle: *, actionTitle: *, action: Function}}
     */
    function loginFormConfig(options) {
        var redirectUrl = sw.sanitize(options.redirect + window.location.hash) || '';
        var config = {
            id: 'sw-login-form',
            fieldConfig: fieldConfig(),
            inputs: [
              { id: 'email', optional: false },
              { id: 'password', optional: false },
              { id: 'munchkinLeadSource', optional: true }
            ],
            formTitle: options.loginTitle || sw.i18n('Login.Login'),
            buttonText: sw.i18n('Login.Login'),
            actionTitle: options.actionTitle || sw.i18n('Login.Login'),
            forgotUrl: swApi.apiBase + '/account/forgotpassword',
            forgotTitle: sw.i18n('Login.ForgotPassword'),
            trackerCategory: options.trackerCategory || 'Login',
            trackerName: options.trackerName || null,
            trackerSubName: options.withSelect ? 'Sign In' : '',
            socialLoginTrackerName: options.trackerName ? options.trackerName : '',
            redirect: encodeURIComponent(redirectUrl),
            customDomain: options.customDomain || '',
            withSelect: options.withSelect,
            isInlineForm: options.isInlineForm,
            currentUrl: options.currentUrl,
            eventData: options.eventData || false,
            registrationSource: options.registrationSource || false,
            munchkinLeadSource: options.munchkinLeadSource,
            captcha: options.captcha,
            email: options.email,
            closeCallback: options.closeCallback,
            action: function (values, cb) {
                var that = this;
                var email = values.email;
                var leadSource = options.munchkinLeadSource || 'Pro';
                var userObj = {};

                ['email', 'remember', 'captcha', 'country', 'munchkinLeadSource', 'password'].forEach(function (key) {
                    userObj[key] = values[key];
                });
                getFingerPrint(function (result) {
                    userObj.browserId = result;
                    swApi.login(userObj, function (code, userData) {
                        var result, rescode;
                        swConsole.debug("Got login response: %s - %O", code, userData);
                        if (code == 200) { //OK
                            that.tracker.setUserCustomVars(userData);

                            // associate marketo lead on login
                            MunchkinAsync('associateLead', {
                                Email: email,
                                LeadSource: leadSource
                            }, userData.mktoHash);

                            cb(result, code);

                            try {
                                if (userData.verified || userData.Verified) {
                                    options.callback(redirectUrl);
                                } else {
                                    w.location.href = swApi.apiBase + '/verifyphone?returnUrl=' + encodeURIComponent(redirectUrl);
                                }
                            } catch (e) {
                                // redirect
                                swConsole.debug("Login done: Redirecting to " + redirectUrl);
                                w.location.href = redirectUrl;
                            }
                        } else if (code == 206) {  // NOT OK
                            var message = userData.Message || userData.message;
                            switch (message) {
                                case 'BADLOGIN':
                                    rescode = 401;
                                    result = sw.i18n('Login.BadLogin');
                                    break;
                                case 'RECURRENTBADLOGIN':
                                    rescode = 403; // NEED CAPTCHA
                                    result = sw.i18n('Login.BadLogin');
                                    break;
                                case 'BADCAPTCHA':
                                    rescode = 403; // NEED CAPTCHA
                                    result = sw.i18n('Login.BadCaptcha');
                                    break;
                                case 'PARTIALLOGIN':
                                    rescode = 429; // NEED PHONE CONFIRMATION
                                    result = sw.i18n('Login.BadCaptcha');
                                    w.location.href = swApi.apiBase
                                      + '/confirmphone?leadSource=' + leadSource
                                      + '&returnUrl=' + encodeURIComponent(redirectUrl)
                                      + '&codeSentSuccess=' + (userData.Error === 'None' ? "true" : "false")
                                      + (userData.Error !== 'None' ? '&codeSentFailError=' + userData.Error : '');
                                    break;
                                default:
                                    rescode = 500;
                                    result = sw.i18n('Login.Error');
                                    break;
                            }
                            cb(result, rescode);
                        } else {
                            //rescode = 500;
                            result = sw.i18n('Login.Error');
                            cb(result, rescode);
                        }
                    });
                });
            }
        };
        return overrides(config);
    }

    /**
     *
     * Builtin Register Form
     * @returns {{id: string, inputs: {id: string, optional: boolean}[], formTitle: *, actionTitle: *, action: Function}}
     */
    function registerFormConfig(options) {
        var options = options || {};
        var builtinFields = [
            {id: 'firstName', optional: false},
            {id: 'lastName', optional: false},
            {id: 'email', optional: false, validate: checkExistingUser, ownError: sw.i18n('Register.DuplicateEmail'), customTooltip: 'companyEmail' },
            {id: 'countryCode', optional: false, validate: checkPhoneNumber },
            {id: 'phone', optional: false, validate: checkPhoneNumber},
            {id: 'password', optional: false, isNarrow: true },
            {id: 'passwordRetype', optional: false, ownError: sw.i18n('Register.PasswordMatchError'), isNarrow: true},
            {id: 'munchkinLeadSource', optional: true}
        ];

        // if popup has two forms - we need specify current one
        var trackerSubName = options.withSelect ? 'Sign Up' : '';
        var trackerName = (options.trackerName ? options.trackerName + '/' : '') + (trackerSubName ? trackerSubName + '/' : '');

        var redirectUrl = sw.sanitize(options.redirect + window.location.hash) || '';

        var config = {
            id: 'sw-reg-form',
            fieldConfig: fieldConfig(),
            inputs: builtinFields,
            initValues: options.initValues || {},
            formTitle: options.registerTitle || sw.i18n('Register.Register'),
            buttonText: sw.i18n('Register.Register'),
            actionTitle: options.actionTitle || sw.i18n('Register.Submit'),
            productType: options.productType,
            trackerCategory: options.trackerCategory || 'Registration',
            trackerName: options.trackerName || '',
            footerLinkTermsTrackerLinkName: trackerName + options.footerLinkTermsText,
            footerLinkPrivacyPolicyTrackerLinkName: trackerName + options.footerLinkPrivacyPolicyText,
            trackerSubName: trackerSubName,
            withSelect: options.withSelect,
            isInlineForm: options.isInlineForm,
            currentUrl: options.currentUrl,
            redirect: encodeURIComponent(redirectUrl),
            customDomain: options.customDomain,
            eventData: options.eventData || false,
            registrationSource: options.registrationSource || false,
            munchkinLeadSource: options.munchkinLeadSource,
            footerLinkTermsUrl: options.footerLinkTermsUrl,
            footerLinkPrivacyPolicyUrl: options.footerLinkPrivacyPolicyUrl,
            footerPreLinkText: options.footerPreLinkText,
            footerLinkTermsText: options.footerLinkTermsText,
            footerLinkPrivacyPolicyText: options.footerLinkPrivacyPolicyText,
            footerPostLinkText: options.footerPostLinkText,
            socialLoginTrackerName: options.trackerName ? options.trackerName : '',
            closeCallback: options.closeCallback,
            initCustomTooltip: true,

            action: function (values, cb) {
                var that = this;
                var userObj = {
                    customData: buildCustomData(values)
                };

                // builtin values
                ['email', 'firstName', 'lastName', 'country', 'phone', 'munchkinLeadSource', 'password'].forEach(function (key) {
                    userObj[key] = values[key];
                });

                getFingerPrint(function (result) {
                    userObj.browserId = result;
                    userObj.returnUrl = redirectUrl;
                    swApi.register(userObj, function (code, userData) {
                        var response = userData;
                        var result;
                        var redirectUrl;
                        var textResults = {
                           badDomail: {
                            response: 'Email domain not valid',
                            message: sw.i18n('Register.Email.BadDomain')
                          },
                          mailRegistered: {
                            response: 'Already Registered',
                            message: sw.i18n('Register.Email.AlreadyRegistered')
                          },
                          invalidRequest: {
                            response: 'The request is invalid.',
                            message: 'The request is invalid.'
                          },
                          generalError: {
                            message: sw.i18n('Register.Email.GeneralError')
                          }
                        }

                      swConsole.debug("Got register response: %d - %O", code, userData);
                        if (code == 400) {
                          if (response == textResults.badDomail.response) {
                            result = textResults.badDomail.message;
                          } if (response == textResults.invalidRequest.response) {
                            result = textResults.invalidRequest.message;
                          } else {
                            result = textResults.mailRegistered.message;
                          }
                        }
                        else if (code != 200) {
                          result = textResults.generalError.message;
                        }

                        // add piwik Custom Variable Value
                        that.tracker.setUserCustomVars(userData);
                        cb(result, code);
                        redirect = getRegisterRedirect(userData, redirectUrl);
                        if (code == 200) {
                            // redirect
                            try {
                                options.callback(redirect, values);
                            } catch (e) {
                                console.log(e);
                                swConsole.debug("Register done: Redirecting to " + redirect);
                                window.location.href = redirect;
                            }
                            window._vis_opt_queue = window._vis_opt_queue || [];
                            window._vis_opt_queue.push(function () {
                                _vis_opt_register_conversion(207);
                            });
                        }
                    });
                });
            }
        };

        return overrides(config);
    }
    function getRegisterRedirect (userData, initialRedirect) {
        var result, queryString, verificationMethod;

        if (userData.Verified || userData.verified ) {
            result = initialRedirect;
        } else {
            queryString = '?email=' + (userData.EncryptedEmail || userData.encryptedEmail) + '&token=' + (userData.Token || userData.token)
                + '&returnUrl=' + encodeURIComponent(initialRedirect);
            verificationMethod = userData.VerificationMethod || userData.verificationMethod;
            switch (verificationMethod) {
                case 'Email':
                    result = "/registration/email";
                    break;
                case 'Phone':
                    result = "/registration/verifyphone"  + queryString;
                    break;
            }
        }

        return result;
    }
    function contactUsFormConfig(options, $elem) {
        var customFields = [];
        var showPhone = false;
        if (options.registerFields && options.registerFields.length) {
            options.registerFields.forEach(function (field) {
              if (field.id === 'phone') {
                    showPhone = true;
                } else {
                    // just append
                    customFields.push(field);
                }
            });
        }

        var loggedIn = 'UserName' in options.identity || 'username' in options.identity;

        var configInputs = loggedIn ? [
          { id: 'subject', optional: false },
          { id: 'message', optional: false, helpText: sw.i18n('ContactUs.message.helpText', { email: (options.identity.UserName || options.identity.username) }) }
        ] : [
          { id: 'subject', optional: false },
          { id: 'firstName', optional: false },
          { id: 'lastName', optional: false },
          { id: 'email', optional: false },
          { id: 'countryCode', optional: false, validate: checkPhoneNumber},
          { id: 'phone', optional: false, validate: checkPhoneNumber},
          { id: 'role', optional: false, isNarrow: true },
          { id: 'company', optional: false, isNarrow: true },
          { id: 'employees', optional: false, isNarrow: true },
          { id: 'industry', optional: false, isNarrow: true },
          { id: 'message', optional: false }
        ];

        var fieldsToSubmit = (loggedIn)
                    ? ['message', 'countryIso2Code', 'phone', 'company', 'country']
                    : ['email', 'firstName', 'lastName', 'message', 'countryIso2Code', 'phone', 'company', 'country'];

        // contact us custom fields for chinese customers
        if (sw.api.hasQqWechatFields) {
          fieldsToSubmit.push('qq', 'wechat');
          // logged: after subject(1), non-loged after phone(6)
          var qqWechatFormFeildsPosition = loggedIn ? 1 : 6;
          configInputs.splice(
            qqWechatFormFeildsPosition,
            0,
            { id: 'qq', optional: true, isNarrow: true },
            { id: 'wechat', optional: true, isNarrow: true }
          );
        };


       var config = {
            id: 'sw-contact-form',
            formTitle: options.formHeader || sw.i18n('ContactUs.title'),
            actionTitle: options.actionTitle,
            fieldConfig: fieldConfig(),
            inputs: configInputs,
            trackerCategory: options.trackerCategory || 'ContactUs',
            trackerName: options.trackerName || '',
            trackerSubName: options.trackerSubName || '',
            withSelect: options.withSelect,
            isInlineForm: options.isInlineForm,
            action: function (values, cb) {
                var that = this;
                swConsole.debug("Contact Us Form values: %O", values);
                var data = {
                    customData: JSON.stringify(buildCustomData(values))
                };

                // subject enum
                var subjectObj = values['subject'];
                data['subject'] = subjectObj.value;

                // file values
                var files = values.attachment;
                if (files && files.length) {
                    for (var i = 0; i < files.length; i++) {
                        data["file" + (i + 1)] = files[i];
                    }
                }
                // builtin values
                fieldsToSubmit.forEach(function (key) {
                    data[key] = values[key] ? values[key] : '';
                });

                if (loggedIn) {
                    data.email = options.identity.UserName || options.identity.username;
                    data.firstName = options.identity.FirstName || options.identity.firstname;
                    data.lastName = options.identity.LastName || options.identity.lastname;
                    data.planId = options.identity.PlanId || options.identity.plan;
                }
                swConsole.debug("Contact Us Submit data: %O", data);
                swApi.contactUs(data, function (status, res) {
                    swConsole.debug("Contact Us Status: %O", status);
                    if (status == 200) {
                        that.tracker.setContactUsCustomVars(values, loggedIn);
                        // show thankyou
                        window._vis_opt_queue = window._vis_opt_queue || [];
                        window._vis_opt_queue.push(function () { _vis_opt_goal_conversion && _vis_opt_goal_conversion(209); });
                        swUi.openThankyouPopup($elem, { isInlineForm: options.isInlineForm });
                    }
                    cb(res, status);
                });
            }
       };

      // unlogged state already contains phone
       if (showPhone && loggedIn) {
            // insert phone
         config.inputs.splice(config.inputs.length - 1, 0, { id: 'countryCode', optional: true });
         config.inputs.splice(config.inputs.length - 1, 0, { id: 'phone', optional: true, validate: checkPhoneNumber });
        }
        config.inputs = config.inputs.concat(customFields);

        return overrides(config);
    }

    function requestPricingFormConfig(options, $elem) {
        var customFields = [];
        var loggedIn = 'UserName' in options.identity || 'username' in options.identity;

        var builtinFields = [
          { id: 'subject', optional: false, disabled: true },
          { id: 'firstName', optional: false, disabled: loggedIn },
          { id: 'lastName', optional: false, disabled: loggedIn },
          { id: 'email', optional: false, disabled: loggedIn },
          { id: 'countryCode', optional: false, validate: checkPhoneNumber },
          { id: 'phone', optional: false, validate: checkPhoneNumber },
          { id: 'role', optional: false, isNarrow: true },
          { id: 'company', optional: false, isNarrow: true },
          { id: 'employees', optional: false, isNarrow: true },
          { id: 'industry', optional: false, isNarrow: true },
          { id: 'message', optional: false }
        ];
      var fieldsToSubmit = ['subject', 'email', 'firstName', 'lastName', 'countryIso2Code', 'phone', 'company', 'message', 'country'];

        // contact us custom fields for chinese customers
      if (sw.api.hasQqWechatFields) {
          fieldsToSubmit.push('qq', 'wechat');

          builtinFields.splice(
            6, // after phone(6)
            0,
            { id: 'qq', optional: true, isNarrow: true },
            { id: 'wechat', optional: true, isNarrow: true }
          );
        };

        var config = {
            id: 'sw-pricing-form',
            formTitle: options.formHeader || sw.i18n('ContactUs.title'),
            actionTitle: options.actionTitle,
            fieldConfig: fieldConfig(),
            inputs: builtinFields,
            trackerCategory: options.trackerCategory || options.analyticsCategory || 'ContactUs',
            trackerName: options.trackerName || options.initValues.subject || '',
            withSelect: options.withSelect,
            isInlineForm: options.isInlineForm,
            thankYouSettings: options.thankYouSettings,
            setCustomVars: function (email) {
                if (!options.trackerName || options.trackerName == '') { swConsole.debug('No Contact us tracker name'); }
                var subject = options.trackerName === 'Advanced' ? 'Sales' : config.trackerName;
                options.tracker.setRequestPricingFormCustomVars(subject, loggedIn, email);
            },
            action: function (values, cb) {
                swConsole.debug("Contact Us Form values: %O", values);
                var data = {
                    CustomData: JSON.stringify(buildCustomData(values))
                };
                // builtin values
                fieldsToSubmit.forEach(function (key) {
                    data[key] = values[key] ? values[key] : '';
                });


                swConsole.debug("Contact Us Submit data: %O", data);
                swApi.pricingRequest(data, function (status, res) {
                    config.setCustomVars(data['email']);
                    swConsole.debug("Contact Us Status: %O", status);
                    if (status == 200) {
                        window._vis_opt_queue = window._vis_opt_queue || [];
                        window._vis_opt_queue.push(function () { _vis_opt_goal_conversion && _vis_opt_goal_conversion(201); });
                        // show thankyou
                        swUi.openThankyouPopup($elem, $.extend(true, {}, config.thankYouSettings, { isInlineForm: config.isInlineForm, email: values.email }));
                    }
                    cb(res, status);
                });
            }
        };
        config.setCustomVars(false);
        config.fieldConfig.subject.type = 'hidden';
        config.inputs = config.inputs.concat(customFields);

        return overrides(config);
    }

    // deprecated?
    function phoneFormConfig(options) {
        var customFields = [];
        var loggedIn = 'UserName' in options.identity || 'username' in options.identity;
        options.callback = options.callback || $.noop;
        var config = {
            id: 'sw-phonerequest-form',
            formTitle: options.formHeader || sw.i18n('RequestPhone.TitleNew'),
            actionTitle: options.actionTitle,
            fieldConfig: fieldConfig(),
            inputs: [
                { id: 'subject', optional: false, disabled: true },
                { id: 'redirecturl', optional: false, disabled: true },
                { id: 'countryCode', optional: true, validate: checkPhoneNumber },
                { id: 'phone', optional: true, validate: checkPhoneNumber },
                { id: 'companyWebsite', optional: true }
            ],
            trackerCategory: options.trackerCategory || 'Social Connect',
            trackerName: options.trackerName || '',
            withSelect: !!options.withSelect,
            isInlineForm: !!options.isInlineForm,
            doNotRedirect: options.doNotRedirect || false,
            setCustomVars: function (email) {
                var subject = options.trackerName || '';
                options.tracker.setRequestPricingFormCustomVars(subject, loggedIn, email);
            },
            action: function (values, callback) {
                swConsole.debug("Phone Form values: %O", values);
                var that = this;
                var data = {};
                // builtin values
                ['subject', 'countryIso2Code', 'phone', 'companyWebsite', 'country'].forEach(function (key) {
                    data[key] = values[key] ? values[key] : '';
                });
                data['redirecturl'] = sw.sanitize(values['redirecturl']);
                swConsole.debug("Phone Form Submit data: %O", data);

                // if phone field not empty - redirect to success url page
                if (data['phone'] || data['website']) {
                    swApi.phoneRequest(data, function (status, res) {
                        if (status === 200) {
                            swConsole.debug("Phone Form Status: %O", status);
                            options.callback();
                            if (!config.doNotRedirect) {
                                // redirect to pro
                                callback(res, status);
                                location = data['redirecturl'];
                            }
                        } else {
                            options.errorCallback();
                        }
                    });
                    return false;
                } else {
                    if (!config.doNotRedirect) {
                        location = data['redirecturl'];
                    }
                    options.callback();
                    options.tracker.event({ action: 'close', name: this.trackerName });
                }
            }
        };
        config.setCustomVars(false);
        config.fieldConfig.subject.type = 'hidden';
        config.fieldConfig.redirecturl.type = 'hidden';
        config.inputs = config.inputs.concat(customFields);
        config.actionTitle = options.actionTitle || (sw.i18n('PhoneForm.button.name') + ';' + sw.i18n('PhoneForm.button.note'));
        if ('showButtonSubTitle' in options) {
            config.showButtonSubTitle = options.showButtonSubTitle;
        } else {
            config.showButtonSubTitle = true;
        }

        return overrides(config);
    }

    function requestConsultationFormConfig(options, $elem) {
        var config = {
            id: 'sw-consultation-form',
            formTitle: options.formHeader || sw.i18n('ConsultationRequest.title'),
            actionTitle: options.actionTitle || sw.i18n('ConsultationRequest.actionTitle'),
            fieldConfig: fieldConfig(),
            inputs: [
              { id: 'countryCode', optional: false, validate: checkPhoneNumber },
              { id: 'phone', optional: false, validate: checkPhoneNumber },
              { id: 'message', optional: true }
            ],
            trackerCategory: options.trackerCategory || 'ContactUs',
            trackerName: options.trackerName || 'SpeakToConsultant',
            trackerSubName: options.trackerSubName || '',
            withSelect: false,
            isInlineForm: options.isInlineForm,
            action: function (values, cb) {
                swConsole.debug("Consultation Form values: %O", values);
                var data = {
                    customData: JSON.stringify(buildCustomData(values))
                };

                ['message', 'countryIso2Code', 'phone', 'country'].forEach(function (key) {
                    data[key] = values[key] ? values[key] : '';
                });

                swConsole.debug("Contact Us Submit data: %O", data);
                swApi.consultationRequest(data, function (status, res) {
                    swConsole.debug("Contact Us Status: %O", status);
                    if (status == 200) {
                        // show thankyou
                        swUi.openThankyouPopup($elem, { isInlineForm: options.isInlineForm });
                    }
                    cb(res, status);
                });
            }
        };


        return overrides(config);
    }

    function checkExistingUser(email, cb) {
      swApi.checkEmailAvailability(email, function(code, available) {
        switch (available) {
          // good email
          case (true):
            cb(true);
            break;
          // already used
          case ('already-used'):
            cb(sw.i18n('Register.DuplicateEmail'));
            break;
          // bad domain
          case ('bad-domain'):
            cb('showCustomTooltip');
            break;
        }
      });
    }

    function checkPhoneNumber (phone, cb) {
        swApi.phoneValidation(phone, function (code, available) {
            if (available === false) {
                cb(sw.i18n('Register.WrongPhonenumber'));
            } else {
                cb(true);
            }
        });
    };
    /**
     * returns the customData JSON, for the custom fields
     * @param values
     * @returns {{}}
     */
    function buildCustomData(values) {
        var config = fieldConfig();
        var res = {};
        $.each(values, function (key, value) {
            var fieldConfig = config[key];
            if (fieldConfig && fieldConfig.isCustom) {
                switch (fieldConfig.type) {
                    case 'select':
                        res[key] = value ? (value.value || value.name) : null;
                        break;
                    default:
                        res[key] = value;
                }
            }
        });
        return res;
    }

    /**
     *  merge lists of fields
     * @param builtinFields {Array} built-in fields
     * @param customFields {Array} override fields
     * @param exclude {Array} fields to exclude from list

     * @returns {Array} the result
     */
    function extendFields(builtinFields, customFields, exclude) {
        var added = {};
        var out = [];

        // loop built-in fields
        builtinFields.forEach(function (builtInField) {
            // filter excluded
            if (exclude.indexOf(builtInField.id) > -1) {
                return;
            }

            var fieldToAdd = builtInField;

            // check if a custom version exists
            customFields.forEach(function (customField) {
                if (customField.id == builtInField.id)
                    fieldToAdd = customField;
            });

            // add
            out.push(fieldToAdd);
            added[fieldToAdd.id] = true;
        });

        // add remaining custom fields
        customFields.forEach(function (customField) {
            if (!similarweb.ui.getFieldConfig()[customField.id]) {
                swConsole.debug('no field exists with id %s', customField.id);
                return;
            }
            if (added[customField.id] === true)
                return;

            out.push(customField);
        });

        return out;
    }

    /**
     * load external HTML resource
     * @param page
     * @param success
     * @param error
     */
    function loadHtml(page, success, error) {
        var settings = {
            url: page,
            dataType: 'html',
            type: 'GET',
            contentType: 'text/html',
            success: success,
            error: error
        };

        $.ajax(settings);
    }

    /**
     * parse the comma delimited filed list form the [data-sw-sdk] attribute
     * @param param in the form "+phone,country,role"  ('+' makes mandatory)
     * @returns {*}
     */
    function parseFieldsParam(param) {
        if (typeof param === 'string' && param.length > 0) {
            return param.split(',').map(function (_item) {
                var optional = true;
                var item = _item;
                if (item[0] == '+') {
                    optional = false;
                    item = _item.substring(1);
                }
                return { id: item, optional: optional };
            });
        } else {
            return [];
        }
    }

    /**
     * initial values for {field}
     * attr in the form:
     * <div sw-sdk-init-{field}-val="theValue"></div>
     * @param dataObj
     * @returns {{field1: value1, filed2: value2}} the values map
     */
    function parseInitialValues(dataObj) {
        var res = {};
        $.each(dataObj, function (key, value) {
            var match = key.match("swSdkInit(.*)Val");
            if (match) {
                res[swUi.toCamel(match[1])] = value;
            }
        });
        return res;
    }

    // get object with disabled fields
    function setDisabledFields(dataObj) {
        var disabledFields = dataObj.swSdkDisabledFields;
        var disabledFieldsObject = {};
        if (disabledFields) {
            disabledFields = disabledFields.replace(/ /g, '').split(',')
            for (var i = disabledFields.length - 1; i >= 0; i--) {
                disabledFieldsObject[disabledFields[i]] = true;
            }
            return disabledFieldsObject;
        }
        return '';
    }

    function parseCustomTitles(dataObj) {
        var res = {};
        $.each(dataObj, function (key, value) {
            var match = key.match("swSdkCustom(.*)Title");
            if (match) {
                res[swUi.toCamel(match[1])] = value;
            }
        });
        return res;
    }

    function parseCustomPlaceholder(dataObj) {
        var res = {};
        $.each(dataObj, function (key, value) {
            var match = key.match("swSdkCustom(.*)Placeholder");
            if (match) {
                res[swUi.toCamel(match[1])] = value;
            }
        });
        return res;
    }

    function initInline() {
        // explicitly search an existing element
        $('[data-sw-sdk]').each(function () {
            var $elem = $(this);
            var elemData = $elem.data();
            var isInlineForm;
            var popup;

            // inline form container
            if (elemData.swSdkInitInline) {
                isInlineForm = true;
                popup = initInlineConfig($elem, isInlineForm);
                setTimeout(function () {
                    popup.insert();
                }, 16);
            }
                // autorun popup
            else if (elemData.swSdkAutomode) {
                popup = initInlineConfig($elem);
                popup.open();
            }
        });

        // filter all clicks on body
        $('body').on('click', '[data-sw-sdk]', function () {
            var dataKey = 'swSdkPopupInstance';
            var $elem = $(this);
            var elemData = $elem.data();
            if (elemData.swSdkInitInline || elemData.swSdkAutomode)
                return;
            var popup = elemData[dataKey];
            if (!popup) {
                popup = initInlineConfig($elem);
                $elem.data(dataKey, popup);
            }
            popup.open();
        });

    }

    function sendSocialVWOTracking() {
        var params = swUi.parseUrlParams();
        var userJustRegistered = params.newSocialUser || false;

        if (userJustRegistered) {
            window._vis_opt_queue = window._vis_opt_queue || [];
            window._vis_opt_queue.push(function () { _vis_opt_register_conversion(208); });
        }
    }

    /**
     *  initializes the popup config object from data attributes
     * @param $elem
     * @returns {{open: Function, close: Function}|*} the popup
     *    or {{}} the form
     */
    function initInlineConfig($elem, isInlineForm, predefinedConfig) {
        var resultForm;
        var dataObj = $elem && $elem.data();
        var config = predefinedConfig || {
            withSelect: dataObj.swSdkWithSelect,
            initState: dataObj.swSdkInitState,
            initValues: parseInitialValues(dataObj),
            disabledFields: setDisabledFields(dataObj),
            customTitles: parseCustomTitles(dataObj),
            customPlaceholder: parseCustomPlaceholder(dataObj),
            registerFields: parseFieldsParam(dataObj.swSdk),
            formHeader: dataObj.swSdkTitle,
            formSubHeader: dataObj.swSdkSubTitle,
            redirect: dataObj.swSdkRedirect,
            munchkinLeadSource: dataObj.munchkinLeadSource || 'Pro',
            customDomain: dataObj.swSdkCustomDomain || '',
            automode: dataObj.swSdkAutomode,
            captcha: dataObj.swSdkCaptcha,
            productType: dataObj.swSdkProductType,
            hideBottomLinks: dataObj.swSdk,
            omitedFields: dataObj.swSdkOmitedFields ? dataObj.swSdkOmitedFields.split(' ') : '',
            trackerCategory: dataObj.analyticsCategory || null,
            trackerName: dataObj.analyticsLabel || dataObj.swSdkTrackerName || null,
            trackerSubName: dataObj.analyticsSubname,
            withSocialButtons: dataObj.socialButtons || false,
            isInlineForm: isInlineForm,
            thankYouSettings: dataObj.swSdkThankYouSettings || {}
        };

        // add href
        if ($elem && $elem[0].tagName.toLowerCase() == 'a') {
            $elem.attr('href', 'javascript:void(0)');
        }

        // init form
        if ($elem && isInlineForm) {
            resultForm = swUi.createForm(config, $elem);
        } else {
            resultForm = swUi.createPopup(config);
        }

        return resultForm;
    }


    function getTrackerImpl() {
        if (window.similarweb.analytics) {
            return window.similarweb.analytics;
        }
        if (window.Similar && window.Similar.Analytics) {
            return window.Similar.Analytics;
        }
        return {
            event: function () {
                // try and get angular swTrack service
                try {
                    if (angular && angular.element) {
                        var rootElem = angular.element(document.body);
                        var swTrack = rootElem.injector().get('swTrack');
                        swTrack.all.trackEvent.apply(swTrack.all, arguments);
                    }
                    return;
                } catch (e) {
                }
                swConsole.error("Missing Analytics: %O", arguments);
            },
            setCustomVar: function (num, name, value, scope) {
                _paq.push(['setCustomVariable', num, name, value, scope]);
            }
        };
    }

    function initAnalytics(options) {
        // marketo init (if not inited before)
        if (window.MunchkinAsync && typeof Munchkin === "undefined") {
            MunchkinAsync.init({ marketoId: swApi.marketoId, enabled: !!swApi.isMunchkinEnabled });
        }
        // ga/piwik trackers
        var trackerImpl = getTrackerImpl();
        return {
            event: function (evt) {
                // if item has category - we use it,
                // else we use trackerCategory from form settings
                var category = evt.category || options.trackerCategory;

                trackerImpl.event(category, evt.action, evt.name);
                swConsole.debug("Tracking Event: { category:'%s', action:'%s', name:'%s' }", category, evt.action, evt.name);
            },
            setUserCustomVars: function (userData) {
                if (userData && (userData.UserId || userData.userId || userData.id)) {
                    // fix case problems
                    userData = {
                        UserId: userData.UserId || userData.userId || userData.id,
                        SubscriptionId: userData.SubscriptionId || userData.subscriptionId || userData.subscription,
                        Product: userData.Product
                    };
                } else {
                    return;
                }
                trackerImpl.setUserId(userData.UserId);
                // trackerImpl.setCustomVar(1, 'UserId', userData.UserId, 'page');
                trackerImpl.setCustomVar(2, 'SubscriptionId', userData.SubscriptionId, 'page');
                trackerImpl.setCustomVar(3, 'ProductName', userData.Product, 'page');
                swConsole.debug("Tracking Custom Variable Value (for login/register): {SubscriptionId(2):'%s', PlanName(3):'%s' }", userData.SubscriptionId, userData.PlanName);
            },
            setContactUsCustomVars: function (data, loggedIn) {
                if (loggedIn) {
                    trackerImpl.setCustomVar(4, 'Subject', data.subject.name, 'page');
                    swConsole.debug("Tracking Custom Variable Value (for ContactUs: loggedIn): { Subject(4):'%s' }", data.subject.name);
                } else {
                    trackerImpl.setCustomVar(1, 'Email', data.email, 'page');
                    trackerImpl.setCustomVar(2, 'Subject', data.subject.name, 'page');
                    swConsole.debug("Tracking Custom Variable Value (for ContactUs: loggedOut): { Email(1):'%s', Subject(2):'%s' }", data.email, data.subject.name);
                }
            },
            setRequestPricingFormCustomVars: function (subject, loggedIn, email) {
                if (loggedIn) {
                    trackerImpl.setCustomVar(4, 'Subject', subject, 'page');
                    swConsole.debug("Tracking Custom Variable Value (for Request Pricing: loggedIn): { Subject(4):'%s' }", subject);
                } else {
                    trackerImpl.setCustomVar(2, 'Subject', subject, 'page');
                    swConsole.debug("Tracking Custom Variable Value (for Request Pricing: loggedOut): { Subject(2):'%s' }", subject);
                    if (email) {
                        trackerImpl.setCustomVar(1, 'Email', email, 'page');
                        swConsole.debug("Tracking Custom Variable Value (for Request Pricing: loggedOut): { Email(1):'%s' }", email);
                    }
                }
            }
        }
    }

    function getIdentityImpl() {
        if (window.Similar && window.Similar.getSettings)
            return window.Similar.getSettings().identity;
        if (sw.identity)
            return sw.identity;
        if (sw.settings && sw.settings.user)
            return sw.settings.user;
        return {};
    }

    function getFingerPrint(callback) {
        new Fingerprint2().get(function (result, components) {
            callback(result);
        }.bind(this));
    }

    /**
     * main
     */
    function main() {
        $(function () {
            var htmlUrl = swApi.assetBase + (swApi.nodeps ? '/sw.sdk.nodeps.html' : '/sw.sdk.html');

            loadHtml(htmlUrl,
                function success(data, textStatus, jqXHR) {
                    $(document.body).append(data);
                    swUi.loaded = true;
                    swUi.getFieldConfig = function () {
                        return fieldConfig();
                    };
                    swUi.getLoginConfig = function () {
                        return loginFormConfig();
                    };
                    swUi.getRegConfig = function () {
                        return registerFormConfig();
                    };
                    initInline();
                    sendSocialVWOTracking();
                    swUi.loadingDone();
                },
                function error(jqXHR, textStatus, errorThrown) {
                    swConsole.error("Error loading HTML");
                }
            );
        });
    }

    /**
     * run main()
     */
    main();

    /**
     * setDefaults
     */
    function setDefaults(options, $elem) {
        var settings = {};
        var customData;
        settings.popupId = "sw-poopup-" + Date.now();

        var defaults = {
            withSelect: true,
            isInlineForm: options.isInlineForm,
            formHeader: '',
            formSubHeader: '',
            animatedGif: '',
            captcha: false,
            automode: false,
            initState: 'register',
            initValues: {},
            redirect: sw.api.proBase,
            productType: 'websites',
            registerFields: []
        };
        options = $.extend(defaults, options);
        //options.footerLinkUrl = options.footerLinkUrl || (swApi.apiBase + '/pricing?product=' + options.productType);
        options.footerLinkTermsUrl = options.footerLinkTermsUrl || (swApi.apiBase + '/terms');
        options.footerLinkPrivacyPolicyUrl = options.footerLinkPrivacyPolicyUrl || (swApi.apiBase + '/privacy-policy');
        // we don't use i18n for tracling, because for different language it would be different event
        options.footerLinkTermsTrackerLinkName = options.footerLinkTermsText || 'Terms and Conditions';
        options.footerLinkPrivacyPolicyTrackerLinkName = options.footerLinkPrivacyPolicyText || 'Privacy Policy';
        options.footerPreLinkText = options.footerPreLinkText || sw.i18n('Register.PreLinkText');
        options.footerLinkTermsText = options.footerLinkTermsText || sw.i18n('Register.Terms');
        options.footerLinkPrivacyPolicyText = options.footerLinkPrivacyPolicyText || sw.i18n('Register.PrivacyPolicy');
        options.footerPostLinkText = options.footerPostLinkText || sw.i18n('Register.PostLinkText');
        options.tracker = initAnalytics(options);
        options.identity = getIdentityImpl();



        // current Url for user, which will be signIn/signUp by social login
        options.currentUrl = '//' + location.hostname + location.pathname;

        settings.templateData = {
            popupId: settings.popupId,
            isInlineForm: options.isInlineForm,
            initState: options.initState,
            formHeader: options.formHeader,
            formSubHeader: options.formSubHeader,
            automode: options.automode,
            withSelect: options.withSelect,
            i18n: sw.i18n,
            trackerCategory: options.trackerCategory,
            trackerName: options.trackerName,
            footerLinkTrackerLinkName: options.footerLinkTrackerLinkName
        };
        settings.popupOptions = {
            fieldConfig: settings.templateData.fieldConfig,
            withSelect: options.withSelect,
            initState: options.initState,
            initValues: options.initValues,
            tracker: options.tracker,
            trackerCategory: options.trackerCategory,
            trackerName: options.trackerName,
            closeCallback: options.closeCallback
        };

        switch (options.initState) {
          case 'login':
          case 'register':
            settings.templateId = 'sw.ui.popup';
            settings.templateData.loginForm = loginFormConfig(options);
            settings.templateData.regForm = registerFormConfig(options);
            settings.templateData.isWide = !!options.animatedGif;
            settings.templateData.animatedGif = options.animatedGif;
            settings.popupOptions.initValues.munchkinLeadSource = options.munchkinLeadSource;
            settings.popupOptions.forms = {
              login: settings.templateData.loginForm,
              register: settings.templateData.regForm
            };
            break;

          case 'contact':
            settings.templateId = 'sw.ui.contactus';
            settings.templateData.contactusForm = contactUsFormConfig(options, $elem);
            settings.popupOptions.forms = {
              contact: settings.templateData.contactusForm
            };
            break;

          case 'phonerequest':
            settings.templateId = 'sw.ui.phonerequest';
            settings.templateData.phoneForm = phoneFormConfig(options);
            settings.popupOptions.forms = {
              phonerequest: settings.templateData.phoneForm
            };
            settings.popupOptions.callback = options.callback;
            break;

          case 'pricing':
            settings.templateId = 'sw.ui.pricing';
            settings.templateData.pricingForm = requestPricingFormConfig(options, $elem);
            // pre filled fields
            if (options.identity) {
              customData = options.identity.CustomData || options.identity.customdata || options.identity.customData || {};
              settings.popupOptions.initValues.firstName = options.identity.FirstName || options.identity.firstname || '';
              settings.popupOptions.initValues.lastName = options.identity.LastName || options.identity.lastname || '';
              settings.popupOptions.initValues.email = options.identity.UserName || options.identity.username || '';
              settings.popupOptions.initValues.company = options.identity.Company || options.identity.company || '';
              settings.popupOptions.initValues.phone = getInitialPhone(options.identity);
              settings.popupOptions.initValues.industry = customData.industry ? customData.industry : '';
            }
            settings.popupOptions.forms = {
              pricing: settings.templateData.pricingForm
            };
            break;
          case 'consultation':
            settings.templateId = 'sw.ui.consultation';
            settings.templateData.consultationForm = requestConsultationFormConfig(options, $elem);
            // pre filled fields
            settings.popupOptions.forms = {
              consultation: settings.templateData.consultationForm
            };
            break;
        }

        function getInitialPhone(identity) {
            if (!identity || !similarweb.userCountry) 
                return '';

            var identityPhone = identity.Phone || identity.phone;

            if (!identityPhone)
                return '';

            var countryCode = '+' + similarweb.userCountry.PhoneCode;

            if (!identityPhone.startsWith(countryCode))
                return '';

            var res = identityPhone.slice(countryCode.length, identityPhone.length).trim();
            return res;
        }

        // set inputs properties, values,
        $.each(settings.popupOptions.forms, function (index, form) {
          if (form.inputs) {
            setInputsProperties(form.inputs, options);
          }
        });

        return settings;
    }

  // set inputs properties and values
  function setInputsProperties(inputs, options) {
    $.each(inputs, function (key, input) {
      // set custom title
      if (options.customTitles && options.customTitles[input.id]) {
        input.title = options.customTitles[input.id];
      }
      // set custom placeholder
      if (options.customPlaceholder && options.customPlaceholder[input.id]) {
        input.placeholder = options.customPlaceholder[input.id];
      }
      // set disable state
      if (options.disabledFields && options.disabledFields[input.id]) {
        input.disabled = options.disabledFields[input.id];
      }
      // remove fields
      if (options.omitedFields && options.omitedFields.indexOf(input.id) > -1) {
        delete form.inputs[key];
      }
    });
  }
    /**
     * create a login/register popup
     * @param options {{ withSelect: bool, initState: string, registerFields: {id: string, optional: boolean}[] }}
     * @returns {{open: Function, close: Function}}
     */
    swUi.createPopup = function (config) {
        var popup;
        // set defaults
        var settings = setDefaults(config);
        getRoot().appendTemplate(settings.templateId, settings.templateData);

        popup = $("#" + settings.popupId).sw_popup(settings.popupOptions);

        return {
            open: function () {
                popup.sw_popup('open');
            },
            close: function () {
                popup.sw_popup('close');
            }
        };
    };

    /**
     * create a login/register/contactus
     * @param options {{ withSelect: bool, initState: string, registerFields: {id: string, optional: boolean}[] }}
     * @returns {{insert: Function}}
     */
    swUi.createForm = function (config, $elem) {
        var form;
        var settings = setDefaults(config, $elem);
        getRoot().appendTemplate(settings.templateId, settings.templateData, $elem);
        form = $("#" + settings.popupId).sw_static_form(settings.popupOptions);
        return {
            insert: function () {
                form.sw_static_form('insert');
            }
        };
    };

    /**
     * Create a Thank You popup (singleton)
     */
    swUi.openThankyouPopup = function ($elem, options) {
        var settings = {
            isInlineForm: !!options.isInlineForm,
            title: options.title || sw.i18n('ContactUs.confirm.title'),
            subtitle: options.subtitle || sw.i18n('ContactUs.confirm.subtitle'),
            hasAnimation: options.hasAnimation === false ? false : true,
            topSubtitle: options.topSubtitle,
            bottomSubtitle: options.bottomSubtitle,
            buttonText: options.buttonText || sw.i18n('ContactUs.cancellation.buttonText'),
            closeCallback: sw.callbacks[options.closeCallback] || $.noop,
            confirmCallback: sw.callbacks[options.confirmCallback] || $.noop,
            email: options.email,
            tracker: getTrackerImpl()
        };
        var thankYouPopup;
        var templateId;
        switch (options.type) {
            case 'rich':
                templateId = 'sw.ui.popup.thankyourich';
                break;
            default:
                templateId = 'sw.ui.popup.thankyou';
        }
        // add thank you form to block
        if (options.isInlineForm && $elem) {
            $elem.addClass('is-submitted').find('.sw-popup-container').fadeOut(200);
            setTimeout(function () {
                $elem.empty();
                getRoot().appendTemplate(templateId, settings, $elem);
                $elem.find('.sw-popup-thankyou').sw_thankyou_popup(settings);
            }, 316);
        } else {
            // close existing popup
            $('.sw_popup.opened').sw_popup('close', true);
            getRoot().appendTemplate(templateId, settings);
            $('.sw-popup-thankyou').sw_thankyou_popup(settings);
        }
    };

    swUi.toCamel = function (str) {
        return str
            .replace(/\s(.)/g, function ($1) {
                return $1.toUpperCase();
            })
            .replace(/\s/g, '')
            .replace(/^(.)/, function ($1) {
                return $1.toLowerCase();
            });
    };
    swUi.parseUrlParams = function () {
        var query_string = {};
        var query = window.location.search.substring(1);

        if (query) {
            var vars = query.split("&");
            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                pair[1] = decodeURIComponent(pair[1]);
                // If first entry with this name
                if (typeof query_string[pair[0]] === "undefined") {
                    query_string[pair[0]] = pair[1];
                    // If second entry with this name
                } else if (typeof query_string[pair[0]] === "string") {
                    var arr = [query_string[pair[0]], pair[1]];
                    query_string[pair[0]] = arr;
                    // If third or later entry with this name
                } else {
                    query_string[pair[0]].push(pair[1]);
                }
            }
        }
        return query_string;
    };

})(jQuery, window);

//# sourceMappingURL=bundle.nodeps.min.js.map
